{
  "version": 3,
  "sources": ["empty:zlib", "empty:fs", "empty:http", "empty:https", "empty:url", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/webpack/bootstrap", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/pdf.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/display_utils.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/shared/util.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/shared/is_node.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/api.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/font_loader.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/canvas.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/worker_options.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/metadata.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/webgl.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/text_layer.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/svg.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/node_stream.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/network_utils.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/network.js", "node_modules/pdfjs-dist/build/webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js", "node_modules/gl-matrix/esm/common.js", "node_modules/gl-matrix/esm/mat2d.js", "node_modules/gl-matrix/esm/vec2.js", "src/ops.ts", "src/Sorted.ts", "src/index.ts", "example/xml.ts", "example/example.ts"],
  "sourcesContent": ["", "", "", "", "", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory {\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url)\n        .then(async response => {\n          if (!response.ok) {\n            throw new Error(response.statusText);\n          }\n          let cMapData;\n          if (this.isCompressed) {\n            cMapData = new Uint8Array(await response.arrayBuffer());\n          } else {\n            cMapData = stringToBytes(await response.text());\n          }\n          return { cMapData, compressionType };\n        })\n        .catch(reason => {\n          throw new Error(\n            `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n              `CMap at: ${url}`\n          );\n        });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    }).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}` +\n          `CMap at: ${url}`\n      );\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array} viewBox - The xMin, yMin, xMax and yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n// Gets the file name from a given URL.\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the whitelisted protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array} arr - the array of the arrays (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using \u00B4rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isEmptyObj(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isEmptyObj,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n}\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://electronjs.org/docs/api/process#processversionselectron\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !process.versions.electron;\n\nexport { isNodeJS };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string}     [url] - The URL of the PDF.\n * @property {TypedArray|Array|string} [data] - Binary PDF data. Use typed\n *    arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use atob() to convert it to a binary string first.\n * @property {Object}     [httpHeaders] - Basic authentication headers.\n * @property {boolean}    [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is false.\n * @property {string}     [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number}     [length] - The PDF file length. It's used for\n *   progress reports and range requests operations.\n * @property {PDFDataRangeTransport} [range]\n * @property {number}     [rangeChunkSize] - Specify maximum number of bytes\n *   fetched per range request. The default value is 2^16 = 65536.\n * @property {PDFWorker}  [worker] - The worker that will be used for\n *   the loading and parsing of the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document,\n *   used when attempting to recover valid absolute URLs for annotations, and\n *   outline items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined\n *   Adobe CMaps are located. Include trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are\n *   binary packed.\n * @property {Object} [CMapReaderFactory] - The factory that will be\n *   used when reading built-in CMap files. Providing a custom factory is useful\n *   for environments without `XMLHttpRequest` support, such as e.g. Node.js.\n *   The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size\n *   in total pixels, i.e. width * height. Images above this value will not be\n *   rendered. Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can eval\n *   strings as JS. Primarily used to improve performance of font rendering,\n *   and when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are\n *   converted to OpenType fonts and loaded via font face rules. If disabled,\n *   fonts will be rendered using a built-in font renderer that constructs the\n *   glyphs with primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [disableRange] - Disable range request loading\n *   of PDF files. When enabled, and if the server supports partial content\n *   requests, then the PDF will be fetched in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file\n *   data. By default PDF.js attempts to load PDFs in chunks.\n *   The default value is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF\n *   file data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *   NOTE: It is also necessary to disable streaming, see above,\n *         in order for disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging\n *   PDF.js (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object} streamTypes - Used stream types in the document (an item\n *   is set to true if specific stream ID was used in the document).\n * @property {Object} fontTypes - Used font types in the document (an item\n *   is set to true if specific font ID was used in the document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n * NOTE: If a URL is used to fetch the PDF data a standard XMLHttpRequest(XHR)\n * is used, which means it must follow the same origin rules that any XHR does\n * e.g. No cross domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src\n * Can be a url to where a PDF is located, a typed array (Uint8Array)\n * already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory = params.CMapReaderFactory || DOMCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId Unique document id, used as MessageHandler id.\n * @returns {Promise} The promise, which is resolved when worker id of\n *                    MessageHandler is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique document loading task id -- used in MessageHandlers.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Shows if loading task is destroyed.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if wrong or no password was provided.\n       * The callback receives two parameters: function that needs to be called\n       * with new password and reason (see {PasswordResponses}).\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties: {number} loaded and {number} total.\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback to when unsupported feature is used. The callback receives\n       * an {UNSUPPORTED_FEATURES} argument.\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * Aborts all network requests and destroys worker.\n     * @returns {Promise} A promise that is resolved after destruction activity\n     *                    is completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n * @param {number} length\n * @param {Uint8Array} initialData\n * @param {boolean} progressiveDone\n */\nclass PDFDataRangeTransport {\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a PDFDocument in the worker thread. Also, contains commonly used\n * properties that can be read synchronously.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {number} Total number of pages the PDF contains.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise} A promise that is resolved with a {@link PDFPageProxy}\n   *   object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise} A promise that is resolved with the page index (starting\n   *   from zero) that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named destinations to reference numbers.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise} A promise that is resolved with all information\n   *   of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} containing\n   *   the page labels that correspond to the page indexes, or `null` when\n   *   no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {string} containing\n   *   the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the viewer preferences, or `null` when no viewer preferences are present\n   *   in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *   the currently supported actions, or `null` when no OpenAction exists.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  getOpenActionDestination() {\n    deprecated(\"getOpenActionDestination, use getOpenAction instead.\");\n    return this.getOpenAction().then(function (openAction) {\n      return openAction && openAction.dest ? openAction.dest : null;\n    });\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a lookup table for\n   *   mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} of all the\n   *   JavaScript strings in the name tree, or `null` if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that is a\n   * tree outline (if it has one) of the PDF. The tree is in the format of:\n   * [\n   *   {\n   *     title: string,\n   *     bold: boolean,\n   *     italic: boolean,\n   *     color: rgb Uint8ClampedArray,\n   *     count: integer or undefined,\n   *     dest: dest obj,\n   *     url: string,\n   *     items: array of more items like this\n   *   },\n   *   ...\n   * ]\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Array} that contains\n   *   the permission flags for the PDF document, or `null` when\n   *   no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with an {Object} that has\n   *   `info` and `metadata` properties. `info` is an {Object} filled with\n   *   anything available in the information dictionary and similarly\n   *   `metadata` is a {Metadata} object with information from the metadata\n   *   section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved with a {TypedArray} that has\n   *   the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise} A promise that is resolved when the document's data\n   *   is loaded. It is resolved with an {Object} that contains the `length`\n   *   property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise} A promise this is resolved with current statistics about\n   *   document structures (see {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document, on both the main- and\n   * worker-threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   *       currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {Object} A subset of the current {DocumentInitParameters}, which are\n   *   either needed in the viewer and/or whose default values may be affected\n   *   by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {array} items - array of {@link TextItem}\n * @property {Object} styles - {@link TextStyle} objects, indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - text content.\n * @property {string} dir - text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {array} transform - transformation matrix.\n * @property {number} width - width in device space.\n * @property {number} height - height in device space.\n * @property {string} fontName - font name used by pdf.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - font ascent.\n * @property {number} descent - font descent.\n * @property {boolean} vertical - text is in vertical mode.\n * @property {string} fontFamily - possible font family\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *                    can be either 'display' (viewable annotations) or 'print'\n *                    (printable annotations).\n *                    If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by\n *                          calling the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'\n *                    (default value is 'display').\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering\n *                     for some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not\n *                     interactive form elements are rendered in the display\n *                     layer. If so, we do not render them on canvas as well.\n * @property {Array}  [transform] - Additional transform, applied\n *                    just before viewport transform.\n * @property {Object} [imageLayer] - An object that has beginLayout,\n *                    endLayout and appendImage functions.\n * @property {Object} [canvasFactory] - The factory that will be used\n *                    when creating canvases. The default value is\n *                    {DOMCanvasFactory}.\n * @property {Object} [background] - Background to use for the canvas.\n *                    Can use any valid canvas.fillStyle: A DOMString parsed as\n *                    CSS <color> value, a CanvasGradient object (a linear or\n *                    radial gradient) or a CanvasPattern object (a repetitive\n *                    image). The default value is 'rgb(255,255,255)'.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array} fnArray - Array containing the operator functions.\n * @property {Array} argsArray - Array containing the arguments of the\n *                               functions.\n */\n\n/**\n * Proxy to a PDFPage in the worker thread.\n * @alias PDFPageProxy\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this.intentStates = Object.create(null);\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array} An array of the visible portion of the PDF page in user\n   *   space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise} A promise that is resolved with an {Array} of the\n   *   annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains the promise, which\n   *                       is resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance = canvasFactory || new DOMCanvasFactory();\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    intentState.displayReadyCapability.promise\n      .then(transparency => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics(transparency);\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise} A promise resolved with an {@link PDFOperatorList}\n   *   object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    if (!this.intentStates[renderingIntent]) {\n      this.intentStates[renderingIntent] = Object.create(null);\n    }\n    const intentState = this.intentStates[renderingIntent];\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = {};\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} ReadableStream to read textContent chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise} That is resolved a {@link TextContent}\n   *   object that represent the page text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    Object.keys(this.intentStates).forEach(intent => {\n      const intentState = this.intentStates[intent];\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        return;\n      }\n      intentState.renderTasks.forEach(function (renderTask) {\n        const renderCompleted = renderTask.capability.promise.catch(\n          function () {}\n        ); // ignoring failures\n        waitOn.push(renderCompleted);\n        renderTask.cancel();\n      });\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicating if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (\n      !this.pendingCleanup ||\n      Object.keys(this.intentStates).some(intent => {\n        const intentState = this.intentStates[intent];\n        return (\n          intentState.renderTasks.length !== 0 ||\n          !intentState.operatorList.lastChunk\n        );\n      })\n    ) {\n      return false;\n    }\n\n    Object.keys(this.intentStates).forEach(intent => {\n      delete this.intentStates[intent];\n    });\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this.intentStates[intent];\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this.intentStates[args.intent];\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    Object.keys(this.intentStates).some(intent => {\n      if (this.intentStates[intent] === intentState) {\n        delete this.intentStates[intent];\n        return true;\n      }\n      return false;\n    });\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort`.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {VerbosityLevel} should be used.\n */\n\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction, which controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *                                       parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || TESTING\")\n      ) {\n        assert(reason instanceof Error, \"DocException: expected an Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"FontType3Res\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n * @alias RenderTask\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    initializeGraphics(transparency = false) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({ docId, onUnsupportedFeature }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\n      document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported = typeof document !== \"undefined\" && !!document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(docId) {\n      super(docId);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, function () {\n        document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          var k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            this.ctx.moveTo(x, y);\n            this.ctx.lineTo(xw, y);\n            this.ctx.lineTo(xw, yh);\n            this.ctx.lineTo(x, yh);\n            this.ctx.lineTo(x, y);\n            this.ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (\n        strokeColor &&\n        strokeColor.hasOwnProperty(\"type\") &&\n        strokeColor.type === \"Pattern\"\n      ) {\n        // for patterns, we transform to pattern space, calculate\n        // the pattern, call stroke, and restore to user space\n        ctx.save();\n        // The current transform will be replaced while building the pattern,\n        // but the line width needs to be adjusted by the current transform, so\n        // we must scale it. To properly fix this we should be using a pattern\n        // transform instead (see #10955).\n        const transform = ctx.mozCurrentTransform;\n        const scale = Util.singularValueDecompose2dScale(transform)[0];\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth * scale\n        );\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(\n          this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n          this.current.lineWidth\n        );\n        ctx.stroke();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (glyph.isInFont || font.missingFile) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    paintXObject: function CanvasGraphics_paintXObject() {\n      warn(\"Unsupported 'paintXObject' command.\");\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      // TODO Marked content.\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      // TODO Marked content.\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      // TODO Marked content.\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst GlobalWorkerOptions = Object.create(null);\n\n/**\n * Defines global port for worker process. Overrides the `workerSrc` option.\n * @var {Object}\n */\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\n/**\n * A string containing the path and filename of the worker file.\n *\n * NOTE: The `workerSrc` option should always be set, in order to prevent any\n *       issues when using the PDF.js library.\n * @var {string}\n */\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    const obj = Object.create(null);\n    for (const [key, value] of this._metadataMap) {\n      obj[key] = value;\n    }\n    return obj;\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n", "/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n", "/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = this.data.fieldValue;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", this.data.fieldValue);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue && this.data.fieldValue !== \"Off\") {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = this.data.readOnly;\n    element.type = \"radio\";\n    element.name = this.data.fieldName;\n    if (this.data.fieldValue === this.data.buttonValue) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.displayValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms || false,\n        svgFactory: new DOMSVGFactory(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n", "/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {TextContent} [textContent] - Text content to render (the object\n *   is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {PageViewport} viewport - The target viewport to properly\n *   layout the text runs.\n * @property {Array} [textDivs] - HTML elements that are correspond to the\n *   text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array} [textContentItemsStr] - Strings that correspond to the\n *   `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  /**\n   * Starts rendering of the text layer.\n   *\n   * @param {TextLayerRenderParameters} renderParameters\n   * @returns {TextLayerRenderTask}\n   */\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n", "/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  hasPendingRequests() {\n    for (const xhrId in this.pendingRequests) {\n      return true;\n    }\n    return false;\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortAllRequests() {\n    for (const xhrId in this.pendingRequests) {\n      this.abortRequest(xhrId | 0);\n    }\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n", "/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    ).then(response => {\n      if (!validateResponseStatus(response.status)) {\n        throw createResponseStatusError(response.status, url);\n      }\n      this._readCapability.resolve();\n      this._reader = response.body.getReader();\n    });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n", "/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b,\r\n *  c, d,\r\n *  tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nexport function fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nexport function set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nexport function invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to translate\r\n * @param {ReadonlyVec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nexport function translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {ReadonlyVec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat2d(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {ReadonlyMat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {ReadonlyMat2d} a the first operand\r\n * @param {ReadonlyMat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat2d} a The first matrix.\r\n * @param {ReadonlyMat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "// see https://github.com/mozilla/pdf.js/blob/master/src/shared/util.js\nenum OPS {\n    dependency = 1,\n    setLineWidth = 2,\n    setLineCap = 3,\n    setLineJoin = 4,\n    setMiterLimit = 5,\n    setDash = 6,\n    setRenderingIntent = 7,\n    setFlatness = 8,\n    setGState = 9,\n    save = 10,\n    restore = 11,\n    transform = 12,\n    moveTo = 13,\n    lineTo = 14,\n    curveTo = 15,\n    curveTo2 = 16,\n    curveTo3 = 17,\n    closePath = 18,\n    rectangle = 19,\n    stroke = 20,\n    closeStroke = 21,\n    fill = 22,\n    eoFill = 23,\n    fillStroke = 24,\n    eoFillStroke = 25,\n    closeFillStroke = 26,\n    closeEOFillStroke = 27,\n    endPath = 28,\n    clip = 29,\n    eoClip = 30,\n    beginText = 31,\n    endText = 32,\n    setCharSpacing = 33,\n    setWordSpacing = 34,\n    setHScale = 35,\n    setLeading = 36,\n    setFont = 37,\n    setTextRenderingMode = 38,\n    setTextRise = 39,\n    moveText = 40,\n    setLeadingMoveText = 41,\n    setTextMatrix = 42,\n    nextLine = 43,\n    showText = 44,\n    showSpacedText = 45,\n    nextLineShowText = 46,\n    nextLineSetSpacingShowText = 47,\n    setCharWidth = 48,\n    setCharWidthAndBounds = 49,\n    setStrokeColorSpace = 50,\n    setFillColorSpace = 51,\n    setStrokeColor = 52,\n    setStrokeColorN = 53,\n    setFillColor = 54,\n    setFillColorN = 55,\n    setStrokeGray = 56,\n    setFillGray = 57,\n    setStrokeRGBColor = 58,\n    setFillRGBColor = 59,\n    setStrokeCMYKColor = 60,\n    setFillCMYKColor = 61,\n    shadingFill = 62,\n    beginInlineImage = 63,\n    beginImageData = 64,\n    endInlineImage = 65,\n    paintXObject = 66,\n    markPoint = 67,\n    markPointProps = 68,\n    beginMarkedContent = 69,\n    beginMarkedContentProps = 70,\n    endMarkedContent = 71,\n    beginCompat = 72,\n    endCompat = 73,\n    paintFormXObjectBegin = 74,\n    paintFormXObjectEnd = 75,\n    beginGroup = 76,\n    endGroup = 77,\n    beginAnnotations = 78,\n    endAnnotations = 79,\n    beginAnnotation = 80,\n    endAnnotation = 81,\n    paintJpegXObject = 82,\n    paintImageMaskXObject = 83,\n    paintImageMaskXObjectGroup = 84,\n    paintImageXObject = 85,\n    paintInlineImageXObject = 86,\n    paintInlineImageXObjectGroup = 87,\n    paintImageXObjectRepeat = 88,\n    paintImageMaskXObjectRepeat = 89,\n    paintSolidColorImageMask = 90,\n    constructPath = 91,\n}\n\nexport default OPS;\n", "export default class Sorted<TValue> {\n    keys: number[] = [];\n    values: TValue[] = [];\n\n    add(key: number, value: TValue) {\n        if (key < this.keys[0]) {\n            this.keys.unshift(key);\n            this.values.unshift(value);\n            return;\n        }\n        let i = 0;\n        for (let w = 0x1000000; w >= 1; w >>>= 1) {\n            if (this.keys[i + w] < key) i += w;\n        }\n        this.keys.splice(i + 1, 0, key);\n        this.values.splice(i + 1, 0, value);\n    }\n}\n", "import { vec2, mat2d } from 'gl-matrix';\nimport * as pdfjs from 'pdfjs-dist';\nimport { Edge, Rect, TextRect, Neighbor } from './models';\nimport OPS from './ops';\nimport Sorted from \"./Sorted\";\n\nexport default async function(source: Uint8Array|pdfjs.PDFDocumentProxy, {\n    pageNumber = 1,\n} = {}): Promise<TextRect[]> {\n    const\n        pdf = source instanceof Uint8Array\n            ? await pdfjs.getDocument(source).promise\n            : source,\n        page = await pdf.getPage(pageNumber),\n        { fnArray, argsArray } = await page.getOperatorList(),\n        { items } = await page.getTextContent(),\n        lines = extractLines(fnArray, argsArray),\n        [vertical, horizontal] = normalizeLines(lines),\n        graph = constructGraph(vertical, horizontal),\n        rects = buildRects(graph);\n    return [...annotateRects(rects, items)];\n}\n\nconst EPSILON = 0.01;\nconst THRESHOLD = 2;\n\nfunction equals(v: vec2, w: vec2) {\n    return Math.abs(v[0] - w[0]) < THRESHOLD\n        && Math.abs(v[1] - w[1]) < THRESHOLD;\n}\n\nfunction cross(v: vec2, w: vec2) {\n    return v[0] * w[1] - v[1] * w[0];\n}\n\nfunction getCrossingPoint(l1: Edge, l2: Edge): vec2|undefined {\n    const\n        v0 = vec2.subtract(vec2.create(), l2.start, l1.start),\n        v1 = vec2.subtract(vec2.create(), l1.end, l1.start),\n        v2 = vec2.subtract(vec2.create(), l2.end, l2.start),\n        t1 = cross(v2, v0) / cross(v2, v1),\n        t2 = cross(v1, v0) / cross(v2, v1);\n    if ((-EPSILON < t1 && t1 < 1 + EPSILON && 0 < t2 && t2 < 1) ||\n        (-EPSILON < t2 && t2 < 1 + EPSILON && 0 < t1 && t1 < 1)) {\n        return vec2.scaleAndAdd(vec2.create(), l1.start, v1, t1);\n    }\n    return;\n}\n\nfunction normalizeLines(lines: Iterable<Edge>): [Edge[], Edge[]] {\n    const vertical: Edge[] = [];\n    const horizontal: Edge[] = [];\n    for (const line of lines) {\n        const dx = line.start[0] - line.end[0];\n        const dy = line.start[1] - line.end[1];\n        if (Math.abs(dx) < THRESHOLD) {\n            vertical.push(dy < 0 ? line : { start: line.end, end: line.start });\n        } else if (Math.abs(dy) < THRESHOLD) {\n            horizontal.push(dx < 0 ? line : { start: line.end, end: line.start });\n        }\n    }\n    return [vertical, horizontal];\n}\n\nfunction constructGraph(vertical: Edge[], horizontal: Edge[]): Map<vec2, Neighbor> {\n    const result = new Map<vec2, Neighbor>();\n\n    for (const v of vertical) {\n        const ps = new Sorted<vec2>();\n        for (const h of horizontal) {\n            const p = getCrossingPoint(v, h);\n            if (p) ps.add(p[1], p);\n        }\n        for (let i = 0, j = 1; j < ps.values.length; j++) {\n            if (ps.keys[j] - ps.keys[i] > THRESHOLD) {\n                result.set(ps.values[i], { up: ps.values[j] });\n                i = j;\n            }\n        }\n    }\n\n    for (const h of horizontal) {\n        const ps = new Sorted<vec2>();\n        for (const v of vertical) {\n            const p = getCrossingPoint(v, h);\n            if (p) ps.add(p[0], p);\n        }\n        for (let i = 0, j = 1; j < ps.values.length; j++) {\n            if (ps.keys[j] - ps.keys[i] > THRESHOLD) {\n                result.set(ps.values[i], { right: ps.values[j] });\n                i = j;\n            }\n        }\n    }\n\n    // merge same nodes\n    const filtered = new Map<vec2, Neighbor>();\n    for (let [p, value] of result) {\n        for (const [q, newValue] of filtered) {\n            if (equals(p, q)) {\n                p = q;\n                value = { ...value, ...newValue };\n                break;\n            }\n        }\n        filtered.set(p, value);\n    }\n\n    return filtered;\n}\n\nexport function* buildRects(graph: Map<vec2, Neighbor>): IterableIterator<Rect> {\n    function get(p: vec2): Neighbor|undefined {\n        for (const [k, v] of graph) {\n            if (equals(k, p)) return v;\n        }\n    }\n\n    function findNext(\n        p: vec2,\n        next: (n: Neighbor) => vec2|undefined,\n        predicate: (p: vec2, n: Neighbor|undefined) => boolean\n    ) {\n        for (const q of enumerateAll(p, next)) {\n            if (predicate(q, get(q))) return q;\n        }\n    }\n\n    function* enumerateAll(p: vec2|undefined, next: (n: Neighbor) => vec2|undefined) {\n        while (p) {\n            yield p;\n            const neighbor = get(p);\n            if (!neighbor) break;\n            p = next(neighbor);\n        }\n    }\n\n    for (const [lb, { up, right }] of graph) {\n        if (up && right) {\n            const rb = findNext(right, n => n.right, (p, n) => !!(n && n.up));\n            const lt = findNext(up, n => n.up, (p, n) => !!(n && n.right));\n            if (rb && lt) {\n                const rightLine = [...enumerateAll(rb, n => n.up)];\n                const rt = findNext(lt, n => n.right, p => rightLine.some(q => equals(p, q)));\n                if (rt) {\n                    yield { lb, rt };\n                }\n            }\n        }\n    }\n}\n\nfunction* annotateRects(rects: Iterable<Rect>, texts: pdfjs.TextContentItem[])\n    : IterableIterator<TextRect> {\n    for (const rect of rects) {\n        const strings: string[] = [];\n        for (const text of texts) {\n            const tx = text.transform[4], ty = text.transform[5];\n            if (rect.lb[0] <= tx && tx <= rect.rt[0] &&\n                rect.lb[1] <= ty && ty <= rect.rt[1]) {\n                strings.push(text.str);\n            }\n        }\n        yield {\n            strings,\n            left: rect.lb[0],\n            bottom: rect.lb[1],\n            right: rect.rt[0],\n            top: rect.rt[1],\n        };\n    }\n}\n\nfunction* extractLines(fnArray: OPS[], argsArray: any[]): IterableIterator<Edge> {\n    let currentMatrix = mat2d.create();\n    let currentPoint: vec2|undefined;\n    const matStack: mat2d[] = [];\n    const vec = (x: number, y: number) =>\n        vec2.transformMat2d(vec2.create(), vec2.fromValues(x, y), currentMatrix);\n    const rect = ([x, y, w, h]: number[]) => {\n        const p1 = vec(x + 0, y + 0);\n        const p2 = vec(x + w, y + 0);\n        const p3 = vec(x + 0, y + h);\n        const p4 = vec(x + y, w + h);\n        return [\n            { start: p1, end: p2 },\n            { start: p1, end: p3 },\n            { start: p2, end: p4 },\n            { start: p3, end: p4 }\n        ];\n    }\n\n    for (let i = 0; i < fnArray.length; i++) {\n        const args = argsArray[i];\n        switch (fnArray[i]) {\n            case OPS.save:\n                matStack.push(mat2d.clone(currentMatrix));\n                break;\n            case OPS.restore:\n                if (matStack.length)\n                    currentMatrix = matStack.pop()!;\n                break;\n            case OPS.transform:\n                const [a, b, c, d, tx, ty] = args;\n                mat2d.multiply(currentMatrix, currentMatrix, mat2d.fromValues(a, b, c, d, tx, ty));\n                break;\n            case OPS.moveTo:\n                currentPoint = vec(args[0], args[1]);\n                break;\n            case OPS.lineTo:\n                const p = vec(args[0], args[1]);\n                if (currentPoint) {\n                    yield { start: currentPoint, end: p };\n                }\n                currentPoint = p;\n                break;\n            case OPS.rectangle:\n                yield* rect(args);\n                break;\n            case OPS.constructPath:\n                const subFn: OPS[] = [...args[0]]; // clone\n                const subArgs: number[] = [...args[1]]; // clone\n                let fn: OPS|undefined;\n                while (fn = subFn.shift()) {\n                    if (fn === OPS.moveTo) {\n                        currentPoint = vec(subArgs.shift()!, subArgs.shift()!);\n                    } else if (fn === OPS.lineTo) {\n                        const p = vec(subArgs.shift()!, subArgs.shift()!);\n                        if (currentPoint) {\n                            yield { start: currentPoint, end: p };\n                        }\n                        currentPoint = p;\n                    } else if (fn === OPS.rectangle) {\n                        yield* rect(subArgs.splice(0, 4));\n                    }\n                }\n                break;\n        }\n    }\n}\n", "type ElementFactory<T extends Element> =\n    (attrs?: { [key: string]: any }, children?: (Node|string)[]) => T;\n\nexport default function <T extends Element>(createElement: (key: string) => T) {\n    const obj: { [key: string]: ElementFactory<T> } = {};\n    return new Proxy(obj, {\n        get(target, key: string): ElementFactory<T> {\n            return (attrs = {}, children = []) => {\n                const node = createElement(key);\n                for (const attr in attrs) {\n                    node.setAttribute(attr, attrs[attr]);\n                }\n                node.append(...children);\n                return node;\n            };\n        }\n    });\n};\n", "import * as pdfjs from 'pdfjs-dist';\nimport pdftorect from '../src/index';\nimport xml from './xml';\n\nconst svg = xml(key => document.createElementNS('http://www.w3.org/2000/svg', key));\nconst html = xml(key => document.createElement(key));\n\npdfjs.GlobalWorkerOptions.workerSrc = './pdf.worker.js';\n\nconst convert = {\n    blobToArrayBufferAsync(blob: Blob): Promise<ArrayBuffer> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as ArrayBuffer);\n            reader.onerror = reject;\n            reader.readAsArrayBuffer(blob);\n        });\n    }\n};\n\nconst fileInput = document.getElementById('fileInput') as HTMLInputElement;\nconst pageNumber = document.getElementById('pageNumber') as HTMLInputElement;\nconst loadButton = document.getElementById('loadButton') as HTMLInputElement;\nconst canv = document.getElementById('canv') as HTMLDivElement;\nconst tbody = document.getElementById('tbody') as HTMLTableSectionElement;\n\nloadButton.addEventListener('click', async e => {\n    e.preventDefault();\n    if (!fileInput.files || !fileInput.files.length) return;\n\n    console.time();\n    const\n        pageNum = +pageNumber.value,\n        file = fileInput.files[0],\n        ab = await convert.blobToArrayBufferAsync(file),\n        pdf = await pdfjs.getDocument(new Uint8Array(ab)).promise,\n        page = await pdf.getPage(pageNum),\n        rects = await pdftorect(pdf, { pageNumber: pageNum }),\n        view = page.getViewport({ scale: 1 }),\n        svgRoot = svg.svg({\n            viewBox: `0 0 ${view.width} ${view.height}`,\n            style: `width: ${view.width}px; height: ${view.height}px`\n        });\n\n    tbody.innerHTML = '';\n    canv.innerHTML = '';\n    canv.appendChild(svgRoot);\n\n    for (let i = 0; i < rects.length; i++) {\n        const\n            r = rects[i],\n            x = r.left,\n            y = view.height - r.top,\n            width = r.right - r.left,\n            height = r.top - r.bottom,\n            rect = svg.rect({\n                x, y, width, height,\n                stroke: `hsla(${i * 97 % 360}, 100%, 50%, 0.5)`,\n                'stroke-width': 1,\n                fill: 'transparent',\n            }),\n            tr = html.tr({}, [\n                i,\n                r.strings.join(' '),\n                x,\n                y,\n                width,\n                height,\n            ].map(txt => html.td({}, [txt.toString()])));\n\n        // color on hover\n        tr.addEventListener('mouseenter', e => rect.setAttribute('fill', 'yellow'), false);\n        tr.addEventListener('mouseleave', e => rect.setAttribute('fill', 'transparent'), false);\n\n        svgRoot.appendChild(rect);\n        tbody.appendChild(tr);\n    }\n    console.timeEnd();\n}, false);\n"],
  "mappings": "ycAAA,kBCAA,kBCAA,kBCAA,kBCAA,sCCAA,AAAA,UAAA,EAAA,GACA,AAAA,MAAA,KAAA,UAAA,MAAA,KAAA,SACA,GAAA,QAAA,IACA,AAAA,MAAA,SAAA,YAAA,OAAA,IACA,OAAA,uBAAA,GAAA,GACA,AAAA,MAAA,KAAA,SACA,GAAA,wBAAA,IAEA,EAAA,wBAAA,EAAA,SAAA,MACC,GAAA,WACD,MAAA,UAAA,GCTA,GAAA,GAAA,GAGA,WAAA,GAGA,GAAA,EAAA,GACA,MAAA,GAAA,GAAA,QAGA,GAAA,GAAA,EAAA,GAAA,CACA,EAAA,EACA,EAAA,GACA,QAAA,IAIA,SAAA,GAAA,KAAA,EAAA,QAAA,EAAA,EAAA,QAAA,GAGA,EAAA,EAAA,GAGA,EAAA,QAKA,SAAA,EAAA,EAGA,EAAA,EAAA,EAGA,EAAA,EAAA,SAAA,EAAA,EAAA,GACA,AAAA,EAAA,EAAA,EAAA,IACA,OAAA,eAAA,EAAA,EAAA,CAA0C,WAAA,GAAA,IAAA,KAK1C,EAAA,EAAA,SAAA,GACA,AAAA,MAAA,SAAA,aAAA,OAAA,aACA,OAAA,eAAA,EAAA,OAAA,YAAA,CAAwD,MAAA,WAExD,OAAA,eAAA,EAAA,aAAA,CAAiD,MAAA,MAQjD,EAAA,EAAA,SAAA,EAAA,GAEA,GADA,AAAA,EAAA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,MAAA,GACA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,GAAA,EAAA,WAAA,MAAA,GACA,GAAA,GAAA,OAAA,OAAA,MAGA,GAFA,EAAA,EAAA,GACA,OAAA,eAAA,EAAA,UAAA,CAAyC,WAAA,GAAA,MAAA,IACzC,EAAA,GAAA,MAAA,IAAA,SAAA,OAAA,KAAA,GAAA,EAAA,EAAA,EAAA,EAAA,SAAA,GAAgH,MAAA,GAAA,IAAqB,KAAA,KAAA,IACrI,MAAA,IAIA,EAAA,EAAA,SAAA,GACA,GAAA,GAAA,GAAA,EAAA,WACA,WAA2B,MAAA,GAAA,SAC3B,WAAiC,MAAA,IACjC,SAAA,EAAA,EAAA,IAAA,GACA,GAIA,EAAA,EAAA,SAAA,EAAA,GAAsD,MAAA,QAAA,UAAA,eAAA,KAAA,EAAA,IAGtD,EAAA,EAAA,GAIA,EAAA,EAAA,EAAA,2tGCnEA,GAAA,GAAA,EAAA,GAUA,EAAA,EAAA,GASA,EAAA,EAAA,GAlCA,EAAA,EAAA,IAAA,EAAA,EAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IA0DA,KAAM,GA1DN,UA6DM,EA7DN,WA8EqC,CACnC,KAAM,CAAA,YAAe,EADc,GAEnC,GAAA,GACE,KAAM,GAAgB,EAAA,IADV,cAEZ,AAAA,GAAA,EAAA,4BAA2B,GAClB,GAAA,GAD4B,SAIrC,KAAM,GAAmB,EAAA,IADpB,iBAEL,GAFK,GAGL,AAAA,GAAA,EAAA,qBACE,GAAiB,EAAA,IADK,gBAGxB,GAAA,EAAA,4BAA2B,GACrB,GAAkB,GAAA,EAAA,iBAAgB,EAAtC,KACS,GAAA,GAD0C,GAG5C,GAAA,GAJ4B,mXC3EzC,GAAA,GAAA,EAAA,GAWA,KAAM,GA3BN,oDA4BA,KAAM,GA5BN,6BA8BA,QACE,OAAA,EAAA,GACE,GAAI,GAAA,GAAc,GAAlB,EACE,KAAM,IAAA,OADuB,uBAG/B,KAAM,GAAS,SAAA,cAJK,UAKd,EAAU,EAAA,WALI,MAMpB,SAAA,MANoB,EAOpB,EAAA,OAPoB,EAQb,CAAA,SAAA,WAMT,MAAA,EAAA,EAAA,GACE,GAAI,CAAC,EAAL,OACE,KAAM,IAAA,OADsB,2BAG9B,GAAI,GAAA,GAAc,GAAlB,EACE,KAAM,IAAA,OADuB,uBAG/B,EAAA,OAAA,MAPqC,EAQrC,EAAA,OAAA,OARqC,EAWvC,QAAA,GACE,GAAI,CAAC,EAAL,OACE,KAAM,IAAA,OADsB,2BAK9B,EAAA,OAAA,MANwB,EAOxB,EAAA,OAAA,OAPwB,EAQxB,EAAA,OARwB,KASxB,EAAA,QATwB,2BAa5B,QACE,YAAY,CAAE,UAAF,KAAkB,eAA9B,KACE,KAAA,QADoD,EAEpD,KAAA,aAFoD,OAKtD,OAAY,CAAZ,SACE,GAAI,CAAC,KAAL,QACE,KAAM,IAAA,OACJ,2HAIJ,GAAI,CAAJ,EACE,KAAM,IAAA,OADG,gCAGX,KAAM,GAAM,KAAA,QAAA,EAAuB,MAAA,aAAA,SAVf,IAWd,EAAkB,KAAA,aACpB,EAAA,oBADoB,OAEpB,EAAA,oBAbgB,KAepB,MAEG,MAAsB,EAAA,EAAqB,SAF9C,SAIS,MAAA,GAAA,KACC,KAAA,KACJ,GAAI,CAAC,EAAL,GACE,KAAM,IAAA,OAAU,EADA,YAGlB,GAJsB,GAKtB,MAAI,MAAJ,aACE,EAAW,GAAA,YAAe,KAAM,GADX,eAGrB,EAAW,GAAA,EAAA,eAAc,KAAM,GAD1B,QAGA,CAAA,WAAA,qBAXJ,MAaE,IACL,KAAM,IAAA,OACJ,kBAAkB,KAAA,aAAA,UAAlB,cACE,OAMH,GAAA,SAAY,CAAA,EAAA,KACjB,KAAM,GAAU,GADsB,gBAEtC,EAAA,KAAA,MAAA,EAFsC,IAItC,AAAI,KAAJ,cACE,GAAA,aADqB,eAGvB,EAAA,mBAA6B,KAC3B,GAAI,EAAA,aAAuB,eAA3B,KAAgD,OAGhD,GAAI,EAAA,SAAA,KAA0B,EAAA,SAA9B,GACE,GADkD,GAOlD,GALA,AAAI,KAAA,cAAqB,EAAzB,SACE,EAAW,GAAA,YAAe,EADe,UAEpC,AAAI,CAAC,KAAD,cAAsB,EAA1B,cACL,GAAW,GAAA,EAAA,eAAc,EAD4B,eAGvD,GACE,EAAQ,CAAA,WAAA,oBADI,QAKhB,EAAO,GAAA,OAAU,EAhBgB,cAmBnC,EAAA,KA1BsC,QAAjC,MA2BE,IACP,KAAM,IAAA,OACJ,kBAAkB,KAAA,aAAA,UAAlB,cACE,iCAMV,QACE,OAAA,EAAA,GACE,AAAA,GAAA,EAAA,QAAO,EAAA,GAAa,EAApB,EADoB,0BAGpB,KAAM,GAAM,SAAA,gBAAA,EAHQ,WAIpB,SAAA,aAAA,UAJoB,OAKpB,EAAA,aAAA,QAA0B,EALN,MAMpB,EAAA,aAAA,SAA2B,EANP,MAOpB,EAAA,aAAA,sBAPoB,QAQpB,EAAA,aAAA,UAA4B,OAAA,EAAA,IARR,GAAA,EAatB,cAAA,GACE,MAAA,GAAA,EAAA,QAAO,MAAA,IAAP,SADkB,4BAGX,SAAA,gBAAA,EAHW,sBAqCtB,QAIE,YAAY,CAAA,UAAA,QAAA,WAIV,UAJU,EAKV,UALU,EAMV,WANF,KAQE,KAAA,QADC,EAED,KAAA,MAFC,EAGD,KAAA,SAHC,EAID,KAAA,QAJC,EAKD,KAAA,QALC,EASD,KAAM,GAAW,GAAA,GAAa,EAAd,IATf,EAUK,EAAW,GAAA,GAAa,EAAd,IAVf,EAWD,GAAA,GAAA,EAAA,EAXC,EAYD,EAAW,EAZV,IAaD,EAAW,EAAA,EAAe,EAAf,IAbV,EAcD,OAAA,OACE,KACE,EAAU,GACV,EAFF,EAGE,EAHF,EAIE,EAJF,EADF,UAOE,IACE,EADF,EAEE,EAFF,EAGE,EAHF,EAIE,EAJF,EAPF,UAaE,KACE,EADF,EAEE,EAAU,GACV,EAAU,GACV,EAJF,EAbF,UAmBE,GACE,EADF,EAEE,EAFF,EAGE,EAHF,EAIE,EAAU,GAvBd,cA0BI,KAAM,IAAA,OA1BV,qEA+BA,AAAA,GACE,GAAU,CADE,EAEZ,EAAU,CAFE,GAKd,GAAA,GAlDC,EAmDD,EAnDC,EAoDD,AAAI,IAAJ,EACE,GAAgB,KAAA,IAAS,EAAU,EAAnB,IAAA,EADC,EAEjB,EAAgB,KAAA,IAAS,EAAU,EAAnB,IAAA,EAFC,EAGjB,EAAQ,KAAA,IAAS,EAAA,GAAa,EAAtB,IAHS,EAIjB,EAAS,KAAA,IAAS,EAAA,GAAa,EAAtB,IAJQ,GAMjB,GAAgB,KAAA,IAAS,EAAU,EAAnB,IAAA,EADX,EAEL,EAAgB,KAAA,IAAS,EAAU,EAAnB,IAAA,EAFX,EAGL,EAAQ,KAAA,IAAS,EAAA,GAAa,EAAtB,IAHH,EAIL,EAAS,KAAA,IAAS,EAAA,GAAa,EAAtB,IAJJ,GASP,KAAA,UAAiB,CACf,EADe,EAEf,EAFe,EAGf,EAHe,EAIf,EAJe,EAKf,EAAgB,EAAA,EAAhB,EAA4C,EAAA,EAL7B,EAMf,EAAgB,EAAA,EAAhB,EAA4C,EAAA,EAN7B,GASjB,KAAA,MA3EC,EA4ED,KAAA,OA5EC,EAoFH,MAAM,CACJ,QAAQ,KADJ,MAEJ,WAAW,KAFP,SAGJ,UAAU,KAHN,QAIJ,UAAU,KAJN,QAKJ,WALI,IAAN,IAOE,MAAO,IAAA,GAAiB,CACtB,QAAS,KAAA,QADa,QAAA,QAAA,WAAA,UAAA,UAAA,aAoB1B,uBAAA,EAAA,GACE,MAAO,GAAA,KAAA,eAAoB,CAAA,EAAA,GAAQ,KADR,WAW7B,2BAAA,GACE,KAAM,GAAU,EAAA,KAAA,eAAoB,CAAC,EAAD,GAAU,EAAV,IAAoB,KADzB,WAEzB,EAAc,EAAA,KAAA,eAAoB,CAAC,EAAD,GAAU,EAAV,IAAoB,KAF7B,WAG/B,MAAO,CAAC,EAAD,GAAa,EAAb,GAAyB,EAAzB,GAAyC,EAAzC,IAYT,kBAAA,EAAA,GACE,MAAO,GAAA,KAAA,sBAA2B,CAAA,EAAA,GAAQ,KADpB,6BAK1B,eAAA,GAAA,cACE,YAAA,EAAA,GACE,MADqB,GAErB,KAAA,KAFqB,mCAMzB,KAAM,GAAa,CACjB,KADiB,EAEjB,KAFiB,EAGjB,MAHiB,EAIjB,OAJiB,EAKjB,IALiB,kBAyBnB,WAAA,EAAiC,CAAA,MAAA,SAAA,MAAoB,UAApB,IAAjC,IACE,AAAA,GAAA,EAAA,QACE,GAAO,MAAA,IADT,SAD0E,6DAM1E,KAAM,GAAiB,GAAA,EAAA,sBANmD,GAO1E,AAAA,EACE,EAAA,KAAY,EAAA,MADD,EAGX,GAAA,KADK,GAEL,EAAA,MAAa,aAAA,IACb,EAAA,QAAe,IAAM,IAKvB,GAAI,GAjBsE,GAkB1E,OAAA,OACO,GAAL,KADF,UAGO,GAAL,KACE,EADF,QAHF,UAMO,GAAL,MACE,EADF,SANF,UASO,GAAL,OACE,EADF,UATF,UAYO,GAAL,IACE,EADF,OAZF,MAgBA,EAAA,OAlC0E,EAoC1E,EAAA,IAAW,MAAA,IAAA,SAAA,EApC+D,EAwC5E,WAAA,GACE,KAAM,GAAS,EAAA,QADgB,KAEzB,EAAQ,EAAA,QAFiB,KAGzB,EAAM,KAAA,IACV,EAAA,EAAA,EAAsB,EADZ,OAEV,EAAA,EAAA,EAAoB,EALS,QAO/B,MAAO,GAAA,UAAc,EAAA,YAAA,IAAA,GAAd,EAPwB,GAUjC,QACE,cACE,KAAA,QAAe,OAAA,OADH,MAEZ,KAAA,MAFY,GAKd,KAAA,GACE,AAAI,IAAQ,MAAZ,SACE,GAAA,EAAA,MAAK,gCAAA,KAEP,KAAA,QAAA,GAAqB,KAJZ,MAOX,QAAA,GACE,AAAM,IAAQ,MAAd,SACE,GAAA,EAAA,MAAK,kCAAA,KAEP,KAAA,MAAA,KAAgB,CAAA,OAEd,MAAO,KAAA,QAFO,GAGd,IAAK,KAHS,QAMhB,MAAO,MAAA,QAVK,GAad,WAEE,KAAM,GAFG,GAGT,GAAI,GAHK,EAIT,SAAA,KAAmB,MAAnB,OACE,KAAM,GAAO,EADgB,KAE7B,AAAI,EAAA,OAAJ,GACE,GAAU,EADe,QAI7B,SAAA,KAAmB,MAAnB,OACE,KAAM,GAAW,EAAA,IAAW,EADC,MAE7B,EAAA,KAAY,GAAG,EAAA,KAAA,OAAH,MAAA;GAEd,MAAO,GAAA,KAdE,mBAkBb,aACE,MACE,OAAA,QAAA,aACA,MAAA,WADA,aAEA,QAAU,UAFV,WAGA,MAAA,iBALwB,YAS5B,WAAA,EAAA,GACE,IACE,KAAM,CAAA,YAAe,EAAU,GAAA,KAAA,EAAV,GAAkC,GAAA,KADrD,GAGF,MAAO,KAAA,SAAwB,IAH7B,eAIF,GACA,MADW,IAKf,WAAA,GACE,MAAO,IAAA,SAAY,CAAA,EAAA,KACjB,KAAM,GAAS,SAAA,cADuB,UAEtC,EAAA,IAFsC,EAItC,EAAA,OAJsC,EAKtC,EAAA,QAAiB,WACf,EAAO,GAAA,OAAU,0BAA0B,EAA1B,SAElB,UAAA,MAAiB,SAAlB,iBAAA,YARsC,KAa1C,WAAA,GACE,QAAA,IAAY,yBADe,GAI7B,GAvgBA,GAygBA,cAiBE,cAAA,GACE,GAAI,CAAA,GAAU,CAAC,GAAA,EAAA,UAAf,GACE,MAD8B,MAKhC,AAAA,GACE,GAAqB,GAAA,QACnB,6FAkBJ,KAAM,GAAU,EAAA,KA1BS,GA2BzB,GAAI,CAAJ,EACE,MADY,MAMd,KAAM,GAAO,SAAS,EAAT,GAjCY,IAkCzB,GAAI,GAAQ,SAAS,EAAT,GAlCa,IAmCzB,EAAQ,GAAA,GAAc,GAAd,GAA4B,EAA5B,EAnCiB,EAoCzB,GAAI,GAAM,SAAS,EAAT,GApCe,IAqCzB,EAAM,GAAA,GAAY,GAAZ,GAAA,EArCmB,EAsCzB,GAAI,GAAO,SAAS,EAAT,GAtCc,IAuCzB,EAAO,GAAA,GAAa,GAAb,GAAA,EAvCkB,EAwCzB,GAAI,GAAS,SAAS,EAAT,GAxCY,IAyCzB,EAAS,GAAA,GAAe,GAAf,GAAA,EAzCgB,EA0CzB,GAAI,GAAS,SAAS,EAAT,GA1CY,IA2CzB,EAAS,GAAA,GAAe,GAAf,GAAA,EA3CgB,EA4CzB,KAAM,GAAwB,EAAA,IA5CL,IA6CzB,GAAI,GAAa,SAAS,EAAT,GA7CQ,IA8CzB,EAAa,GAAA,GAAmB,GAAnB,GAAA,EA9CY,EA+CzB,GAAI,GAAe,SAAS,EAAT,GAAA,KA/CM,EAgDzB,SAAe,GAAA,GAAqB,GAArB,GAAA,EAhDU,EAsDzB,AAAI,IAAJ,IACE,IADiC,EAEjC,GAFiC,GAG5B,AAAI,IAAJ,KACL,IADwC,EAExC,GAFwC,GAKnC,GAAA,MAAS,KAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EA9DS,upCC1hB7B,EAAA,GAkBA,KAAM,GAAkB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,uBACxB,KAAM,GAAuB,CAAA,KAAA,EAAA,EAAA,KAAA,EAAA,4BAG7B,KAAM,GAAiB,CACrB,MADqB,EAErB,gBAFqB,EAGrB,KAHqB,GAIrB,mBAJqB,GAKrB,uBALqB,IAMrB,uBANqB,IAOrB,SAPqB,KAQrB,mBARqB,yBAWvB,KAAM,GAAoB,CACxB,KADwB,EAExB,OAFwB,EAGxB,YAHwB,EAIxB,UAJwB,EAKxB,iBALwB,EAMxB,mBANwB,EAOxB,wBAPwB,EAQxB,YARwB,EASxB,iBATwB,EAUxB,iBAVwB,yBAa1B,KAAM,GAAY,CAChB,eADgB,EAEhB,UAFgB,EAGhB,WAHgB,iBAMlB,KAAM,GAAiB,CACrB,KADqB,EAErB,KAFqB,EAGrB,SAHqB,EAIrB,KAJqB,EAKrB,OALqB,EAMrB,OANqB,EAOrB,QAPqB,EAQrB,SARqB,EASrB,UATqB,EAUrB,UAVqB,GAWrB,SAXqB,GAYrB,UAZqB,GAarB,MAbqB,GAcrB,MAdqB,GAerB,IAfqB,GAgBrB,MAhBqB,GAiBrB,eAjBqB,GAkBrB,MAlBqB,GAmBrB,MAnBqB,GAoBrB,OApBqB,GAqBrB,OArBqB,GAsBrB,YAtBqB,GAuBrB,QAvBqB,GAwBrB,UAxBqB,GAyBrB,OAzBqB,GA0BrB,OA1BqB,uBA6BvB,KAAM,GAA2B,CAC/B,OAD+B,SAE/B,OAF+B,uCAKjC,KAAM,GAAwB,CAC5B,OAD4B,SAE5B,SAF4B,sCAK9B,KAAM,GAAwB,CAC5B,SAD4B,WAE5B,SAF4B,WAG5B,UAH4B,YAI5B,UAJ4B,YAK5B,KAL4B,kCAQ9B,KAAM,GAAsB,CAC1B,MAD0B,QAE1B,MAF0B,6BAK5B,KAAM,GAAiB,CACrB,UADqB,EAErB,OAFqB,EAGrB,MAHqB,EAIrB,OAJqB,EAKrB,SALqB,GAMrB,OANqB,GAOrB,SAPqB,GAQrB,OARqB,IASrB,aATqB,IAUrB,eAVqB,wBAavB,KAAM,GAAsB,CAC1B,SAD0B,EAE1B,SAF0B,EAG1B,SAH0B,EAI1B,UAJ0B,KAK1B,SAL0B,KAM1B,cAN0B,MAO1B,MAP0B,MAQ1B,WAR0B,MAS1B,MAT0B,OAU1B,KAV0B,OAW1B,KAX0B,OAY1B,WAZ0B,QAa1B,YAb0B,QAc1B,gBAd0B,QAe1B,YAf0B,QAgB1B,KAhB0B,SAiB1B,SAjB0B,SAkB1B,eAlB0B,SAmB1B,kBAnB0B,kCAsB5B,KAAM,GAA4B,CAChC,MADgC,EAEhC,OAFgC,EAGhC,QAHgC,EAIhC,MAJgC,EAKhC,UALgC,iCAQlC,KAAM,GAAa,CACjB,QADiB,UAEjB,MAFiB,QAGjB,IAHiB,MAIjB,IAJiB,MAKjB,IALiB,MAMjB,KANiB,OAOjB,IAPiB,MAQjB,IARiB,MASjB,IATiB,MAUjB,IAViB,sBAanB,KAAM,GAAW,CACf,QADe,UAEf,MAFe,QAGf,OAHe,SAIf,aAJe,eAKf,cALe,gBAMf,SANe,WAOf,aAPe,eAQf,MARe,QASf,SATe,WAUf,MAVe,QAWf,QAXe,wBAcjB,KAAM,GAAiB,CACrB,OADqB,EAErB,SAFqB,EAGrB,MAHqB,sBAMvB,KAAM,GAAsB,CAC1B,KAD0B,EAE1B,OAF0B,EAG1B,OAH0B,2BAO5B,KAAM,GAAM,CAGV,WAHU,EAIV,aAJU,EAKV,WALU,EAMV,YANU,EAOV,cAPU,EAQV,QARU,EASV,mBATU,EAUV,YAVU,EAWV,UAXU,EAYV,KAZU,GAaV,QAbU,GAcV,UAdU,GAeV,OAfU,GAgBV,OAhBU,GAiBV,QAjBU,GAkBV,SAlBU,GAmBV,SAnBU,GAoBV,UApBU,GAqBV,UArBU,GAsBV,OAtBU,GAuBV,YAvBU,GAwBV,KAxBU,GAyBV,OAzBU,GA0BV,WA1BU,GA2BV,aA3BU,GA4BV,gBA5BU,GA6BV,kBA7BU,GA8BV,QA9BU,GA+BV,KA/BU,GAgCV,OAhCU,GAiCV,UAjCU,GAkCV,QAlCU,GAmCV,eAnCU,GAoCV,eApCU,GAqCV,UArCU,GAsCV,WAtCU,GAuCV,QAvCU,GAwCV,qBAxCU,GAyCV,YAzCU,GA0CV,SA1CU,GA2CV,mBA3CU,GA4CV,cA5CU,GA6CV,SA7CU,GA8CV,SA9CU,GA+CV,eA/CU,GAgDV,iBAhDU,GAiDV,2BAjDU,GAkDV,aAlDU,GAmDV,sBAnDU,GAoDV,oBApDU,GAqDV,kBArDU,GAsDV,eAtDU,GAuDV,gBAvDU,GAwDV,aAxDU,GAyDV,cAzDU,GA0DV,cA1DU,GA2DV,YA3DU,GA4DV,kBA5DU,GA6DV,gBA7DU,GA8DV,mBA9DU,GA+DV,iBA/DU,GAgEV,YAhEU,GAiEV,iBAjEU,GAkEV,eAlEU,GAmEV,eAnEU,GAoEV,aApEU,GAqEV,UArEU,GAsEV,eAtEU,GAuEV,mBAvEU,GAwEV,wBAxEU,GAyEV,iBAzEU,GA0EV,YA1EU,GA2EV,UA3EU,GA4EV,sBA5EU,GA6EV,oBA7EU,GA8EV,WA9EU,GA+EV,SA/EU,GAgFV,iBAhFU,GAiFV,eAjFU,GAkFV,gBAlFU,GAmFV,cAnFU,GAoFV,iBApFU,GAqFV,sBArFU,GAsFV,2BAtFU,GAuFV,kBAvFU,GAwFV,wBAxFU,GAyFV,6BAzFU,GA0FV,wBA1FU,GA2FV,4BA3FU,GA4FV,yBA5FU,GA6FV,cA7FU,YAgGZ,KAAM,GAAuB,CAE3B,QAF2B,UAG3B,MAH2B,QAI3B,WAJ2B,aAK3B,MAL2B,QAM3B,eAN2B,iBAQ3B,KAR2B,OAS3B,mBAT2B,qBAU3B,eAV2B,iBAW3B,aAX2B,eAY3B,mBAZ2B,qBAa3B,eAb2B,iBAc3B,iBAd2B,mBAe3B,mBAf2B,qBAgB3B,gBAhB2B,kBAiB3B,kBAjB2B,oBAkB3B,mBAlB2B,qBAmB3B,oBAnB2B,sBAoB3B,iBApB2B,6CAuB7B,KAAM,GAAoB,CACxB,cADwB,EAExB,mBAFwB,yBAK1B,GAAI,GAAY,EAvThB,SAyTA,WAAA,GACE,AAAI,OAAA,UAAJ,IACE,GAD2B,GAK/B,aACE,MAD2B,GAO7B,WAAA,GACE,AAAI,GAAa,EAAjB,OACE,QAAA,IAAY,SAAA,KAKhB,WAAA,GACE,AAAI,GAAa,EAAjB,UACE,QAAA,IAAY,YAAA,KAIhB,WAAA,GACE,KAAM,IAAA,OADkB,GAI1B,WAAA,EAAA,GACE,AAAA,GACE,EADS,GAMb,WAAA,EAAA,GACE,GADuC,GAEvC,IAEE,GADA,EAAO,GAAA,KADL,GAEE,CAAC,EAAD,QAAgB,EAAA,SAApB,OACE,MAD0C,SAG5C,IACA,MADU,GAIZ,KAAM,GAAQ,GAAA,KAAA,EAXyB,GAYvC,MAAO,GAAA,SAAgB,EAZgB,OAgBzC,WAAA,GACE,GAAI,CAAJ,EACE,MADQ,GAGV,OAAQ,EAAR,cAAA,YAAA,aAAA,WAAA,cAKE,OACE,MANJ,WAQI,MARJ,IAmBF,WAAA,EAAA,GACE,GAAI,CAAJ,EACE,MADQ,MAGV,IACE,KAAM,GAAc,EAAU,GAAA,KAAA,EAAV,GAAkC,GAAA,KADpD,GAEF,GAAI,EAAJ,GACE,MADiC,SAGnC,IAGF,MAZ4C,MAe9C,WAAA,EAAA,EAAA,GACE,cAAA,eAAA,EAAA,EAAiC,CAAA,QAE/B,WAF+B,GAG/B,aAH+B,GAI/B,SAJ+B,KADD,EAUlC,KAAM,GAAiB,WAErB,WAAA,GACE,AAAI,KAAA,cAAJ,GACE,EADsC,oCAGxC,KAAA,QAJ8B,EAK9B,KAAA,KAAY,KAAA,YALkB,KAOhC,SAAA,UAA0B,GAT2B,OAUrD,EAAA,YAVqD,EAAA,uBAevD,eAAA,GACE,YAAA,EAAA,GACE,MADqB,GAErB,KAAA,KAFqB,yBAMzB,eAAA,GACE,YAAA,EAAA,GACE,MADwB,GAExB,KAAA,QAFwB,6BAM5B,eAAA,4BAEA,eAAA,4BAEA,eAAA,GACE,YAAA,EAAA,GACE,MADuB,GAEvB,KAAA,OAFuB,mCAS3B,eAAA,oBAKA,eAAA,uBAEA,KAAM,GAhdN,QAkdA,WAAA,GACE,MAAI,OAAA,IAAJ,SACE,GAD2B,2DAAA,GAItB,EAAA,QAAA,EAL0B,IAQnC,WAAA,GACE,EACE,IAAA,MAAkB,MAAA,IAAlB,UAA+C,EAAA,SADjD,OAD4B,sCAK5B,KAAM,GAAS,EALa,OAMtB,EANsB,KAO5B,GAAI,EAAJ,EACE,MAAO,QAAA,aAAA,MAAA,KADwB,GAGjC,KAAM,GAVsB,GAW5B,OAAS,IAAT,EAAgB,GAAhB,EAA4B,IAA5B,GACE,KAAM,IAAW,KAAA,IAAS,GAAT,EADkC,GAE7C,GAAQ,EAAA,SAAA,GAFqC,IAGnD,EAAA,KAAY,OAAA,aAAA,MAAA,KAHuC,KAKrD,MAAO,GAAA,KAhBqB,IAmB9B,WAAA,GACE,EAAO,MAAA,IAAP,SAD0B,sCAE1B,KAAM,GAAS,EAFW,OAGpB,EAAQ,GAAA,YAHY,GAI1B,OAAS,GAAT,EAAgB,EAAhB,EAA4B,EAA5B,EACE,EAAA,GAAW,EAAA,WAAA,GADoB,IAGjC,MAP0B,GAe5B,WAAA,GACE,MAAI,GAAA,SAAJ,OACS,EADqB,OAG9B,GAAO,EAAA,aAAP,OAJ4B,uCAKrB,EALqB,YAa9B,WAAA,GACE,KAAM,GAAS,EADW,OAG1B,GAAI,IAAA,GAAgB,EAAA,YAApB,YACE,MAAO,GADyC,GAGlD,GAAI,GANsB,EAO1B,OAAS,IAAT,EAAgB,GAAhB,EAA4B,KAC1B,GAAgB,EAAgB,EADD,KAGjC,GAAI,GAVsB,EAW1B,KAAM,IAAO,GAAA,YAXa,GAY1B,OAAS,IAAT,EAAgB,GAAhB,EAA4B,MAC1B,GAAI,IAAO,EADoB,IAE/B,AAAM,aAAN,aACE,CAAI,MAAA,KAAJ,SACE,GAAO,EADqB,IAG5B,GAAO,GAAA,YADF,KAIT,KAAM,IAAa,GATY,WAU/B,GAAA,IAAA,GAV+B,GAW/B,GAX+B,GAajC,MAzB0B,IA4B5B,WAAA,GACE,MAAO,QAAA,aACJ,GAAD,GADK,IAEJ,GAAD,GAFK,IAGJ,GAAD,EAHK,IAIL,EALqB,KAUzB,cACE,KAAM,GAAU,GAAA,YADQ,GAExB,EAAA,GAFwB,EAGxB,KAAM,GAAS,GAAA,aAAgB,EAAhB,OAAA,EAHS,GAIxB,MAAO,GAAA,KAJiB,EAM1B,KAAM,GAAuB,IAC3B,SACE,MAAO,GAAA,KAAA,QAAsB,iCAKjC,cACE,IACE,UAAA,UADE,IAAA,SAGF,GACA,MADU,IAId,KAAM,IAAwB,IAC5B,SACE,MAAO,GAAA,KAAA,QAAsB,mCAIjC,KAAM,IAAS,CAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAEf,eAGE,YAAA,EAAA,EAAA,GACE,UAAA,GADyB,EAEzB,GAAA,GAFyB,EAGzB,GAAA,GAHyB,EAIlB,GAAA,KAJkB,UAQ3B,WAAA,EAAA,GACE,MAAO,CACL,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EADnB,GAEL,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EAFnB,GAGL,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EAHnB,GAIL,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EAJnB,GAKL,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EAAxB,GAAgC,EAL3B,GAML,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EAAxB,GAAgC,EAN3B,UAWT,gBAAA,EAAA,GACE,KAAM,GAAK,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EADb,GAEpB,EAAK,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EAFb,GAG1B,MAAO,CAAA,EAAA,SAGT,uBAAA,EAAA,GACE,KAAM,GAAI,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EADE,GAE3B,EAAM,GAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EAAA,GAAO,EAAnC,GAA0C,EAAA,GAAO,EAAlD,IAFsB,EAG3B,GAAM,EAAC,EAAD,GAAQ,EAAR,GAAe,EAAA,GAAO,EAAtB,GAA6B,EAAA,GAAO,EAApC,GAA2C,EAAA,GAAO,EAAnD,IAHsB,EAIjC,MAAO,CAAA,EAAA,UAKT,4BAAA,EAAA,GACE,KAAM,GAAK,GAAA,eAAA,EAD2B,GAEhC,EAAK,GAAA,eAAoB,EAAA,MAAA,EAApB,GAF2B,GAGhC,GAAK,GAAA,eAAoB,CAAC,EAAD,GAAO,EAAP,IAHO,GAIhC,GAAK,GAAA,eAAoB,CAAC,EAAD,GAAO,EAAP,IAJO,GAKtC,MAAO,CACL,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,GAAvB,GAA8B,GADzB,IAEL,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,GAAvB,GAA8B,GAFzB,IAGL,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,GAAvB,GAA8B,GAHzB,IAIL,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,GAAvB,GAA8B,GAJzB,WAQT,kBAAA,GACE,KAAM,GAAI,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EADN,GAEzB,MAAO,CACL,EAAA,GADK,EAEL,CAAC,EAAD,GAFK,EAGL,CAAC,EAAD,GAHK,EAIL,EAAA,GAJK,EAKJ,GAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAAtB,IALK,EAMJ,GAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAAtB,IANK,SAgBT,kBAAA,EAAA,GACE,MAAO,CACL,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EAAA,GAAO,EAD9B,GAEL,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EAAA,GAAO,EAF9B,GAGL,EAAA,GAAO,EAAP,GAAc,EAAA,GAAO,EAArB,GAA4B,EAAA,GAAO,EAH9B,UAUT,+BAAA,GACE,KAAM,GAAY,CAAC,EAAD,GAAO,EAAP,GAAa,EAAb,GAAmB,EAAnB,IAGZ,EAAI,EAAA,GAAO,EAAP,GAAsB,EAAA,GAAO,EAJD,GAKhC,EAAI,EAAA,GAAO,EAAP,GAAsB,EAAA,GAAO,EALD,GAMhC,GAAI,EAAA,GAAO,EAAP,GAAsB,EAAA,GAAO,EAND,GAOhC,GAAI,EAAA,GAAO,EAAP,GAAsB,EAAA,GAAO,EAPD,GAUhC,GAAS,GAAD,IAVwB,EAWhC,GAAS,KAAA,KAAW,GAAD,IAAW,GAAX,IAAoB,EAAK,GAAA,GAAQ,GAA3C,IAXuB,EAYhC,GAAK,GAAA,IAZ2B,EAahC,GAAK,GAAA,IAb2B,EAgBtC,MAAO,CAAC,KAAA,KAAD,IAAgB,KAAA,KAAhB,WAOT,eAAA,GACE,KAAM,GAAI,EAAA,MADe,GAEzB,MAAI,GAAA,GAAU,EAAd,IACE,GAAA,GAAO,EADc,GAErB,EAAA,GAAO,EAFc,IAIvB,AAAI,EAAA,GAAU,EAAd,IACE,GAAA,GAAO,EADc,GAErB,EAAA,GAAO,EAFc,IANE,QAgB3B,WAAA,EAAA,GACE,WAAA,GAAA,IACE,MAAO,IADc,GAKvB,KAAM,GAAW,CAAC,EAAD,GAAW,EAAX,GAAqB,EAArB,GAA+B,EAA/B,IAAA,KANY,GAOvB,GAAW,CAAC,EAAD,GAAW,EAAX,GAAqB,EAArB,GAA+B,EAA/B,IAAA,KAPY,GAQvB,GARuB,GAc7B,GAJA,EAAQ,GAAA,cAVqB,GAW7B,EAAQ,GAAA,cAXqB,GAe1B,EAAA,KAAgB,EAAhB,IAA4B,EAAA,KAAgB,EAA7C,IACC,EAAA,KAAgB,EAAhB,IAA4B,EAAA,KAAgB,EAF/C,GAKE,GAAA,GAAY,EAFZ,GAGA,GAAA,GAAY,EAHZ,OAKA,OADK,MAKP,GACG,GAAA,KAAgB,EAAhB,IAA4B,GAAA,KAAgB,EAA7C,IACC,GAAA,KAAgB,EAAhB,IAA4B,GAAA,KAAgB,EAF/C,GAKE,GAAA,GAAY,GAFZ,GAGA,GAAA,GAAY,GAHZ,OAKA,OADK,MAIP,MArC6B,eA0CjhC,YAAA,GACE,KAAM,GAAS,EAAf,OACE,EAF4B,GAG9B,GAAI,EAAA,KAAA,KAAqB,EAAA,KAAzB,IAEE,OAAS,GAAT,EAAgB,EAAhB,EAA4B,GAA5B,EACE,EAAA,KACE,OAAA,aAAqB,EAAA,WAAA,IAAD,EAA2B,EAAA,WAAe,EAF9B,aAK3B,EAAA,KAAA,KAAqB,EAAA,KAAzB,IAEL,OAAS,GAAT,EAAgB,EAAhB,EAA4B,GAA5B,EACE,EAAA,KACE,OAAA,aAAqB,EAAA,WAAe,EAAf,IAAD,EAA+B,EAAA,WAFnB,SAMpC,QAAS,GAAT,EAAgB,EAAhB,EAA4B,EAA5B,GACE,KAAM,IAAO,GAAwB,EAAA,WADN,IAE/B,EAAA,KAAY,GAAO,OAAA,aAAP,IAAmC,EAAA,OAFhB,IAKnC,MAAO,GAAA,KAvBuB,IA0BhC,YAAA,GACE,MAAO,oBAAmB,OADK,IAIjC,YAAA,GACE,MAAO,UAAS,mBADe,IAIjC,YAAA,GACE,SAAA,KAAA,GACE,MADqB,GAGvB,MAJuB,GAOzB,YAAA,GACE,MAAO,OAAA,IADU,UAInB,YAAA,GACE,MAAO,OAAA,IADS,SAIlB,YAAA,GACE,MAAO,OAAA,IADY,SAIrB,YAAA,GACE,MAAO,OAAA,IAAA,UAAyB,IAAzB,MAAuC,EAAA,aADtB,OAI1B,YAAA,EAAA,GACE,MAAI,GAAA,SAAgB,EAApB,OAAiC,GAG1B,EAAA,MAAW,SAAA,EAAA,GAChB,MAAO,KAAY,EADuB,KAqB9C,cACE,KAAM,GAAa,OAAA,OADc,MAEjC,GAAI,GAF6B,GAIjC,cAAA,eAAA,EAAA,UAA6C,CAC3C,MACE,MADI,MAIR,EAAA,QAAqB,GAAA,SAAY,SAAA,EAAA,GAC/B,EAAA,QAAqB,SAAA,IACnB,EADmC,GAEnC,EAFmC,KAIrC,EAAA,OAAoB,SAAA,IAClB,EADoC,GAEpC,EAFoC,OAdP,EAsBnC,KAAM,IAAmB,WAEvB,KAAM,GAFmD,oEAMzD,MAAO,UAAA,EAAA,GAA4C,GAA5C,IACL,GAAI,CAAA,IAAoB,IAAxB,iBACE,KAAM,IAAO,GAAA,MAAS,CAAT,GAAiB,CAAE,KADW,KAE3C,MAAO,KAAA,gBAFoC,IAK7C,GAAI,IAAS,QAAA,aACb,OAAS,IAAJ,EAAW,GAAK,EAArB,OAAkC,GAAlC,GAA0C,IAA1C,GACE,KAAM,IAAK,EAAA,IADqC,IAE1C,GAAK,EAAK,GAAL,GAFqC,IAG1C,GAAK,EAAK,GAAL,GAHqC,IAI1C,GAAK,IAAX,EACE,GAAO,IAAD,IAAD,EAAmB,IALsB,EAM1C,GAAK,GAAA,EAAA,GAAe,IAAD,KAAD,EAAqB,IAAlC,EANqC,GAO1C,GAAK,GAAA,EAAA,GAAa,GAAb,GAPqC,GAQhD,IAAU,EAAA,IAAa,EAAb,IAA0B,EAA1B,IAAuC,EARD,IAUlD,MAjB0E,2DCv2B9E,GAAA,GAAA,EAAA,oGCmBA,KAAM,GACJ,MAAA,UAAA,UACA,QAAA,KADA,oBAEA,CAAC,QAAA,SAFD,IAGA,CAAC,QAAA,SAvBH,8XCoBA,GAAA,OAAA,oBAAA,GAmBA,eAAA,oBAAA,GASA,aAAA,oBAAA,GAhDA,mBAAA,oBAAA,GAAA,QAAA,oBAAA,GAAA,gBAAA,oBAAA,IAAA,SAAA,oBAAA,GAAA,iBAAA,oBAAA,IAAA,UAAA,oBAAA,IAAA,kBAAA,oBAAA,IAAA,OAAA,oBAAA,IA0DA,KAAM,0BA1DN,MA2DM,4BA3DN,IA0EA,GA1EA,wBAoFA,oCAAA,GACE,uBAD2D,EA+F7D,qBAAA,GACE,KAAM,GAAO,GADW,wBAGxB,GAHwB,GAIxB,GAAI,MAAA,IAAJ,SACE,EAAS,CAAE,IADgB,WAElB,GAAA,MAAA,eAAJ,GACL,EAAS,CAAE,KADkB,WAEpB,YAAJ,uBACL,EAAS,CAAE,MADoC,QAG/C,GAAI,MAAA,IAAJ,SACE,KAAM,IAAA,OACJ,0FAIJ,GAAI,CAAC,EAAD,KAAY,CAAC,EAAb,MAAyB,CAAC,EAA9B,MACE,KAAM,IAAA,OADiC,+DAKzC,EAZK,EAcP,KAAM,GAAS,OAAA,OAxBS,MAyBxB,GAAI,GAAJ,KACE,EA1BsB,KA4BxB,SAAA,KAAA,IACE,GAAI,IAAA,OAAiB,MAAA,SAArB,aAEE,EAAA,GAAc,GAAA,KAAQ,EAAR,GAAqB,OAArB,UAFoC,KAAA,iBAIzC,IAAJ,SACL,EAAiB,EADS,GAAA,iBAGjB,IAAJ,UACL,EAAS,EADkB,GAAA,iBAGlB,IAAA,QAAkB,CAAE,GAAA,YAAxB,cAEL,KAAM,GAAW,EAFgD,GAGjE,GAAI,MAAA,IAAJ,SACE,EAAA,GAAc,GAAA,MAAA,eADkB,WAGhC,MAAA,IAAA,UACA,IADA,MAEA,CAAC,MAAM,EAHF,QAKL,EAAA,GAAc,GAAA,YADd,WAES,GAAA,MAAA,eAAJ,GACL,EAAA,GAAc,GAAA,YADoB,OAGlC,MAAM,IAAA,OACJ,8GAf6D,SAsBnE,EAAA,GAAc,EAjCU,GAiE1B,GA7BA,EAAA,eAAwB,EAAA,gBAhEA,yBAiExB,EAAA,kBAA2B,EAAA,mBAjEH,eAAA,qBAkExB,EAAA,aAAsB,EAAA,eAlEE,GAmExB,EAAA,oBAA6B,EAAA,sBAnEL,GAoExB,EAAA,OAAgB,EAAA,SApEQ,GAsExB,AAAK,OAAA,UAAiB,EAAtB,eACE,GAAA,aAAsB,IAExB,AAAI,MAAO,GAAP,iBAAJ,WACE,GAAA,gBAD+C,IAGjD,AAAI,MAAO,GAAP,iBAAJ,WACE,GAAA,gBAAyB,mBAAA,uBAAA,iBADsB,IAIjD,AAAI,MAAO,GAAP,cAAJ,WACE,GAAA,aAD4C,IAG9C,AAAI,MAAO,GAAP,eAAJ,WACE,GAAA,cAD6C,IAG/C,AAAI,MAAO,GAAP,kBAAJ,WACE,GAAA,iBADgD,IAKlD,GAAA,MAAA,mBAAkB,EA3FM,WA6FpB,CAAJ,GACE,KAAM,GAAe,CACnB,UAAW,EADQ,UAEnB,KAAM,gBAAA,oBAFa,YAMrB,EAAS,EAAA,KACL,UAAA,SADK,GAEL,GAAA,WATO,GAUX,EAAA,QAVW,EAYb,KAAM,GAAQ,EAzGU,MA0GxB,SAAA,QAAA,KACQ,WACJ,GAAI,EAAJ,UACE,KAAM,IAAA,OADY,mBAIpB,KAAM,GAAkB,eAAA,EAAA,EAAA,EALR,GAWV,EAAuB,GAAA,SAAY,SAAA,GACvC,GAD0D,GAE1D,AAAA,EACE,EAAgB,GAAA,mBAAA,uBACd,CACE,OAAQ,EADV,OAEE,YAAa,EAFf,YAGE,gBAAiB,EAHnB,gBAIE,aAAc,EAJhB,aAKE,cAAe,EALjB,eAFgB,GAWb,AAAK,EAAL,MACL,GAAgB,uBAAuB,CACrC,IAAK,EADgC,IAErC,OAAQ,EAF6B,OAGrC,YAAa,EAHwB,YAIrC,gBAAiB,EAJoB,gBAKrC,eAAgB,EALqB,eAMrC,aAAc,EANuB,aAOrC,cAAe,EAPsB,iBAUzC,EAxB0D,KA2B5D,MAAO,SAAA,IAAY,CAAA,EAAA,IAAZ,KACL,SAAU,CAAA,EAAV,IACE,GAAI,EAAJ,UACE,KAAM,IAAA,OADY,mBAIpB,KAAM,GAAiB,GAAA,kBAAA,eAAA,EAAA,EAGrB,EARiC,MAUnC,EAAA,qBAAsC,EAVH,qBAWnC,KAAM,GAAY,GAAA,iBAAA,EAAA,EAAA,EAXiB,GAiBnC,EAAA,WAjBmC,EAkBnC,EAAA,KAAA,QAlBmC,UAxC3C,MA8DS,EAAA,YAxKe,QAAA,EAuL1B,wBAAA,EAAA,EAAA,EAAA,GACE,MAAI,GAAJ,UACS,QAAA,OAAe,GAAA,OADF,yBAItB,CAAA,GACE,GAAA,OAAgB,EADS,OAEzB,EAAA,YAAqB,EAFI,YAGzB,EAAA,gBAAyB,EAHA,iBAKpB,EAAA,eAAA,gBAAA,gBAC6B,CAAA,QAEhC,WAFgC,UAOhC,OAAQ,CACN,KAAM,EADA,KAEN,IAAK,EAFC,IAGN,SAAU,EAHJ,SAIN,iBAAkB,EAJZ,iBAKN,eAAgB,EALV,eAMN,OAAQ,EANF,QAQR,aAAc,EAfkB,aAgBhC,gBAAiB,EAhBe,gBAiBhC,qBAAsB,EAjBU,qBAkBhC,WAAY,EAlBoB,WAmBhC,aAAc,EAnBkB,aAoBhC,gBAAiB,EApBe,gBAqBhC,oBAAqB,EArBW,sBAD7B,KAwBC,SAAA,GACJ,GAAI,EAAJ,UACE,KAAM,IAAA,OADc,wBAGtB,MAJwB,MAQ9B,KAAM,wBAA0B,WAC9B,GAAI,GADmE,EASvE,QACE,cACE,KAAA,YADY,GAAA,MAAA,2BAEZ,KAAA,WAFY,KAGZ,KAAA,QAHY,KASZ,KAAA,MAAa,IAAM,IAMnB,KAAA,UAfY,GAsBZ,KAAA,WAtBY,KA6BZ,KAAA,WA7BY,KAmCZ,KAAA,qBAnCY,QA0Cd,WACE,MAAO,MAAA,YADK,QASd,UACE,KAAA,UADQ,GAGR,KAAM,GAAqB,AAAC,KAAD,WAEvB,KAAA,WALI,UAIJ,QADuB,UAG3B,MAAO,GAAA,KAAwB,KAC7B,KAAA,WADmC,KAEnC,AAAI,KAAJ,SACE,MAAA,QADgB,UAEhB,KAAA,QAFgB,SAOxB,MA5EuE,MAqFzE,4BACE,YAAA,EAAA,EAAiC,EAAjC,IACE,KAAA,OADwD,EAExD,KAAA,YAFwD,EAGxD,KAAA,gBAHwD,EAKxD,KAAA,gBALwD,GAMxD,KAAA,mBANwD,GAOxD,KAAA,0BAPwD,GAQxD,KAAA,0BARwD,GASxD,KAAA,iBATwD,GAAA,MAAA,2BAY1D,iBAAA,GACE,KAAA,gBAAA,KADyB,GAI3B,oBAAA,GACE,KAAA,mBAAA,KAD4B,GAI9B,2BAAA,GACE,KAAA,0BAAA,KADmC,GAIrC,2BAAA,GACE,KAAA,0BAAA,KADmC,GAIrC,YAAA,EAAA,GACE,SAAA,KAAuB,MAAvB,gBACE,EAAA,EAD2C,GAK/C,eAAA,EAAA,GACE,KAAA,iBAAA,QAAA,KAAmC,KACjC,SAAA,KAAuB,MAAvB,mBACE,EAAA,EAD8C,KAMpD,sBAAA,GACE,KAAA,iBAAA,QAAA,KAAmC,KACjC,SAAA,KAAuB,MAAvB,0BACE,EADqD,KAM3D,wBACE,KAAA,iBAAA,QAAA,KAAmC,KACjC,SAAA,KAAuB,MAAvB,0BACE,MAKN,iBACE,KAAA,iBADe,UAIjB,iBAAA,EAAA,GACE,AAAA,GAAA,MAAA,aAD2B,0DAI7B,8DAOF,uBACE,YAAA,EAAA,GACE,KAAA,SAD8B,EAE9B,KAAA,WAF8B,KAQhC,YACE,MAAO,MAAA,SADM,YAOf,eACE,MAAO,MAAA,SADS,YASlB,QAAA,GACE,MAAO,MAAA,WAAA,QADW,GAUpB,aAAA,GACE,MAAO,MAAA,WAAA,aADS,GAUlB,kBACE,MAAO,MAAA,WADS,kBASlB,eAAA,GACE,MAAO,MAAA,WAAA,eADU,GASnB,gBACE,MAAO,MAAA,WADO,gBAQhB,gBACE,MAAO,MAAA,WADO,gBAQhB,cACE,MAAO,MAAA,WADK,cASd,uBACE,MAAO,MAAA,WADc,uBAQvB,gBACE,MAAO,MAAA,WADO,gBAIhB,2BACE,MAAA,GAAA,eAAA,YADyB,wDAElB,KAAA,gBAAA,KAA0B,SAAA,GAC/B,MAAO,IAAc,EAAd,KAAgC,EAAhC,KAD8C,OASzD,iBACE,MAAO,MAAA,WADQ,iBAQjB,gBACE,MAAO,MAAA,WADO,gBAqBhB,aACE,MAAO,MAAA,WADI,aASb,iBACE,MAAO,MAAA,WADQ,iBAWjB,cACE,MAAO,MAAA,WADK,cAQd,UACE,MAAO,MAAA,WADC,UASV,kBACE,MAAO,MAAA,WAAA,uBADS,QAQlB,WACE,MAAO,MAAA,WADE,WAaX,UACE,MAAO,MAAA,WADC,eAOV,UACE,MAAO,MAAA,YADC,aASV,iBACE,MAAO,MAAA,WADW,iBAOpB,eACE,MAAO,MAAA,WADS,uDA+GpB,mBACE,YAAA,EAAA,EAAA,EAA4C,EAA5C,IACE,KAAA,WAD0D,EAE1D,KAAA,UAF0D,EAG1D,KAAA,WAH0D,EAI1D,KAAA,OAAc,EAAS,GAAT,gBAAA,UAJ4C,KAK1D,KAAA,QAL0D,EAM1D,KAAA,WAAkB,EANwC,WAO1D,KAAA,KAAY,GAP8C,YAS1D,KAAA,mBAT0D,GAU1D,KAAA,eAV0D,GAW1D,KAAA,aAAoB,OAAA,OAXsC,MAY1D,KAAA,UAZ0D,MAkB5D,cACE,MAAO,MAAA,WADQ,KAOjB,UACE,MAAO,MAAA,UADI,UAQb,OACE,MAAO,MAAA,UADC,OAOV,YACE,MAAO,MAAA,UADM,YAQf,QACE,MAAO,MAAA,UADE,KASX,YAAY,CAAA,QAEV,WAAW,KAFD,OAGV,UAHU,EAIV,UAJU,EAKV,WALU,IAAZ,IAOE,MAAO,IAAA,gBAAA,aAAiB,CACtB,QAAS,KADa,KAAA,QAAA,WAAA,UAAA,UAAA,aAe1B,eAAe,CAAE,SAAF,MAAf,IACE,MAAI,EAAC,KAAD,oBAA4B,KAAA,oBAAhC,IACE,MAAA,mBAA0B,KAAA,WAAA,eACxB,KADwB,WADuC,GAKjE,KAAA,kBALiE,GAO5D,KAR8B,mBAiBvC,OAAO,CAAA,gBAAA,WAGL,SAHK,UAIL,cAJK,GAKL,yBALK,GAML,YANK,KAOL,aAPK,KAQL,gBARK,KASL,aATF,OAWE,AAAI,KAAJ,QACE,KAAA,OAAA,KADe,WAIjB,KAAM,GAAkB,IAAA,QAAA,QALvB,UAQD,KAAA,eARC,GAUD,AAAK,KAAA,aAAL,IACE,MAAA,aAAA,GAAqC,OAAA,OADE,OAGzC,KAAM,GAAc,KAAA,aAbnB,GAgBD,AAAI,EAAJ,2BACE,cAAa,EAD4B,2BAEzC,EAAA,0BAFyC,MAK3C,KAAM,GAAwB,GAAiB,GArB9C,gBAAA,iBAsBK,EAAe,GAAA,QAAA,aAAiB,CACpC,OAvBD,IA4BD,AAAK,EAAL,wBACE,GAAA,uBADuC,GAAA,MAAA,2BAEvC,EAAA,aAA2B,CACzB,QADyB,GAEzB,UAFyB,GAGzB,UAHyB,IAM3B,AAAI,KAAJ,QACE,KAAA,OAAA,KADe,gBAGjB,KAAA,kBAAuB,CACrB,UAAW,KADU,WAErB,OAFqB,EAGrB,uBAAwB,IAHH,MAOzB,KAAM,GAAW,IACf,KAAM,GAAI,EAAA,YAAA,QADc,GAExB,AAAI,GAAJ,GACE,EAAA,YAAA,OAAA,EADU,GAMZ,AAAI,MAAA,oBAA2B,IAA/B,UACE,MAAA,eAD0D,IAG5D,KAXwB,cAaxB,AAAA,EACE,GAAA,WAAA,OADS,GAGT,KAAA,mBAAwB,CAAA,cAEtB,OAFsB,KAKxB,EAAA,WADK,UAGP,AAAI,KAAJ,QACE,MAAA,OAAA,QADe,aAEf,KAAA,OAAA,QAFe,aAMb,EAAqB,GAAA,oBAAuB,CAChD,SADgD,EAGhD,OAAQ,CAAA,gBAAA,WAAA,YAAA,aAAA,cAOR,KAAM,KAV0C,KAWhD,WAAY,KAXoC,WAYhD,aAAc,EAZkC,aAahD,UAAW,KAbqC,WAchD,cAdgD,EAAA,eAgBhD,yBAA0B,IAhBsB,QAiBhD,OAAQ,KAjBwC,UAoBlD,AAAK,EAAL,aACE,GAAA,YAD4B,IAG9B,EAAA,YAAA,KAlGC,GAmGD,KAAM,GAAa,EAnGlB,KAqGD,SAAA,uBAAA,QAAA,KACQ,IACJ,GAAI,KAAJ,gBACE,IADuB,OAIzB,AAAI,KAAJ,QACE,KAAA,OAAA,KADe,aAGjB,EAAA,mBARoB,GASpB,EAToB,wBADxB,MArGC,GAAA,EA0HH,kBACE,aACE,GAAI,EAAA,aAAJ,WACE,EAAA,qBAAA,QAAyC,EADH,cAGtC,KAAM,GAAI,EAAA,YAAA,QAH4B,GAItC,AAAI,GAAJ,GACE,EAAA,YAAA,OAAA,EADU,IAMhB,KAAM,GAZU,SAahB,AAAK,KAAA,aAAL,IACE,MAAA,aAAA,GAAqC,OAAA,OADE,OAGzC,KAAM,GAAc,KAAA,aAhBJ,GAiBhB,GAjBgB,GAmBhB,MAAK,GAAL,sBACE,GADqC,GAErC,EAAA,oBAFqC,EAGrC,EAAA,qBAHqC,GAAA,MAAA,2BAIrC,EAAA,YAJqC,GAKrC,EAAA,YAAA,KALqC,GAMrC,EAAA,aAA2B,CACzB,QADyB,GAEzB,UAFyB,GAGzB,UAHyB,IAM3B,AAAI,KAAJ,QACE,KAAA,OAAA,KADe,gBAGjB,KAAA,kBAAuB,CACrB,UAAW,KADU,WAErB,OAFqB,KAKlB,EAAA,qBAvCS,QA8ClB,kBAAkB,CAChB,sBADgB,GAEhB,0BAFgB,IAAlB,IAIE,KAAM,GADA,IAGN,MAAO,MAAA,WAAA,eAAA,eAAA,iBAEL,CACE,UAAW,KADb,WAEE,oBAAqB,IAFvB,GAGE,iBAAkB,IAHpB,IAKA,CACE,cADF,EAEE,KAAA,GACE,MAAO,GAAA,MADS,UAYxB,eAAe,EAAf,IACE,KAAM,GAAiB,KAAA,kBADG,GAG1B,MAAO,IAAA,SAAY,SAAA,EAAA,GACjB,aACE,EAAA,OAAA,KAAmB,SAAU,CAAA,QAAV,SACjB,GAAA,GACE,EADQ,GAAA,OAIV,OAAA,OAAc,EAAd,OAAkC,EALU,QAM5C,EAAA,MAAA,KAAuB,GAAG,EANkB,OAO5C,KARY,GAYhB,KAAM,GAAS,EAb6B,YActC,EAAc,CAClB,MADkB,GAElB,OAAQ,OAAA,OAFU,OAIpB,MAQJ,WACE,KAAA,UADS,GAET,KAAA,WAAA,UAA0B,KAA1B,YAFS,KAIT,KAAM,GAJG,GAKT,cAAA,KAAY,KAAZ,cAAA,QAAuC,IACrC,KAAM,GAAc,KAAA,aAD2B,GAQ/C,GANA,KAAA,mBAAwB,CAAA,cAEtB,OAAQ,GAAA,OAFc,uBAGtB,MAHsB,KAMpB,IAAJ,SAAyB,OAIzB,EAAA,YAAA,QAAgC,SAAA,GAC9B,KAAM,GAAkB,EAAA,WAAA,QAAA,MACtB,cAEF,EAAA,KAJoD,GAKpD,EALoD,aAQxD,KAAA,KAzBS,QA0BT,KAAA,mBA1BS,KA2BT,KAAA,eA3BS,GA4BF,QAAA,IA5BE,GAqCX,QAAQ,EAAR,IACE,YAAA,eAD0B,GAEnB,KAAA,YAFmB,GAS5B,YAAY,EAAZ,IACE,MACE,CAAC,KAAD,gBACA,OAAA,KAAY,KAAZ,cAAA,KAAoC,IAClC,KAAM,GAAc,KAAA,aADwB,GAE5C,MACE,GAAA,YAAA,SAAA,GACA,CAAC,EAAA,aAJyC,YAO9C,GAIF,QAAA,KAAY,KAAZ,cAAA,QAAuC,IACrC,MAAO,MAAA,aADwC,KAGjD,KAAA,KAjB8B,QAkB9B,KAAA,mBAlB8B,KAmB9B,AAAI,GAAc,KAAlB,QACE,MAAA,OAAc,GADe,gBAAA,WAG/B,KAAA,eAtB8B,GAAA,IA6BhC,iBAAA,EAAA,GACE,KAAM,GAAc,KAAA,aADiB,GAErC,GAAI,CAAJ,EAAkB,OAGlB,AAAI,KAAJ,QACE,KAAA,OAAA,QADe,gBAKjB,AAAI,EAAJ,wBACE,EAAA,uBAAA,QADsC,GAQ1C,iBAAA,EAAA,GAEE,OAAS,GAAJ,EAAW,EAAK,EAArB,OAA+C,EAA/C,EAAuD,IACrD,EAAA,aAAA,QAAA,KAAsC,EAAA,QADoB,IAE1D,EAAA,aAAA,UAAA,KAAwC,EAAA,UAFkB,IAI5D,EAAA,aAAA,UAAqC,EANU,UAS/C,OAAS,GAAT,EAAgB,EAAI,EAAA,YAApB,OAAoD,IAClD,EAAA,YAAA,GADuD,sBAIzD,AAAI,EAAJ,WACE,KAD+B,cAQnC,kBAAA,GACE,AAAA,GAAA,MAAA,QACE,EADF,OADsB,+DAMtB,KAAM,GAAiB,KAAA,WAAA,eAAA,eAAA,kBAND,GAUhB,EAAS,EAVO,YAYhB,EAAc,KAAA,aAAkB,EAZhB,QAatB,EAAA,aAbsB,EAetB,KAAM,GAAO,KACX,EAAA,OAAA,KACE,CAAC,CAAA,QAAD,WACE,GAAA,GACE,EAAA,aADQ,KAAA,OAIV,GAAI,KAAA,WAAJ,UAA+B,OAG/B,KAAA,iBAAA,EARmB,GASnB,KAEF,IAGE,GAFA,EAAA,aADQ,KAGJ,KAAA,WAAJ,UAA+B,OAG/B,GAAI,EAAJ,cAEE,EAAA,aAAA,UAF4B,GAI5B,OAAS,GAAT,EAAgB,EAAI,EAAA,YAApB,OAAoD,IAClD,EAAA,YAAA,GADuD,sBAGzD,KAP4B,cAU9B,GAAI,EAAJ,uBACE,EAAA,uBAAA,OADsC,WAE7B,EAAJ,qBACL,EAAA,qBAAA,OAD2C,OAG3C,MADK,MAMb,IAMF,mBAAmB,CAAA,cAAA,SAAuB,QAA1C,KAOE,GANA,GAAA,MAAA,QACE,YAAA,QACG,MAAA,IAAA,UAA8B,IAFnC,KADyD,gEAOrD,CAAC,EAAL,aAA+B,OAG/B,GAAI,CAAJ,GAGE,GAAI,EAAA,YAAA,SAAJ,EAA0C,OAM1C,GAAI,YAAJ,gBAAA,6BACE,EAAA,0BAAwC,WAAW,KACjD,KAAA,mBAAwB,CAAA,cAAA,SAAuB,MAAvB,KACxB,EAAA,0BAFuD,MADR,6BAAA,QAarD,GALA,EAAA,aAAA,OACE,GAAA,OAAA,eAAmB,GAAU,EA5B0B,UA8BzD,EAAA,aA9ByD,KAgCrD,KAAA,WAAJ,UAA+B,OAK/B,OAAA,KAAY,KAAZ,cAAA,KAAoC,GAC9B,KAAA,aAAA,KAAJ,EACE,OAAO,MAAA,aADsC,GAAA,IADH,IAQ9C,KA7CyD,aAmD3D,SACE,MAAO,MADG,0CAKd,mBACE,YAAY,EAAZ,IACE,KAAA,WADwB,GAExB,KAAA,OAFwB,EAGxB,KAAA,UAAiB,QAAA,QAHO,QAM1B,YAAA,EAAA,GACE,WAAA,GAGE,GAAI,MAAA,IAAA,UAA6B,IAAjC,KACE,MAD+C,GAGjD,GAAI,EAAA,IAAJ,GAEE,MAAO,GAAA,IAFc,GAIvB,GAAA,GAVyB,EAWzB,GAAK,GAAS,EAAV,SAA2B,GAAA,MAAA,eAA/B,IAEE,KAAM,GAAe,GAAa,EAAA,SAFkB,GAGpD,MAAA,GACE,EAAS,GAAI,GAAJ,YAAA,EAEP,EAFO,WAGP,EAJc,YAOhB,EAAS,GAAI,GAAJ,YADJ,GAGP,EAAA,IAAA,EAZoD,GAAA,EAetD,EAAS,MAAA,QAAA,GAAA,GA1BgB,GA2BzB,EAAA,IAAA,EA3ByB,GA8BzB,SAAA,KAAA,IACE,GAAA,GACE,EAFmB,EAGrB,KAAO,CAAE,GAAO,OAAA,yBAAA,EAAhB,KACE,EAAI,OAAA,eADkD,GAGxD,GAAI,MAAO,GAAP,OAAJ,YAAuC,SAGvC,GAAI,MAAO,GAAP,OAAJ,YACE,GAAI,EAAA,gBAAwB,EAAA,eAA5B,GACE,KAAM,IAAA,OACJ,4CAA4C,EAA5C,MAHgC,SAQtC,EAAA,GAAY,EAAW,EAjBF,OAmBvB,MAjDyB,GAoD3B,GAAI,CAAC,KAAL,QACE,KAAA,WAAA,QAAwB,IACtB,EAAA,KAAA,KAAoB,CAAE,KADY,MADpB,OAOlB,KAAM,GAAS,GA5DW,SA6DpB,EAAI,CAAE,KAAM,EA7DQ,IA8D1B,KAAA,UAAA,KAAoB,KAClB,KAAA,WAAA,QAAwB,IACtB,EAAA,KAAA,KADkC,OAMxC,iBAAA,EAAA,GACE,KAAA,WAAA,KAD+B,GAIjC,oBAAA,EAAA,GACE,KAAM,GAAI,KAAA,WAAA,QADwB,GAElC,KAAA,WAAA,OAAA,EAFkC,GAKpC,YACE,KAAA,WAAA,OADU,qCAad,KAAM,WAAa,WACjB,KAAM,gBAAiB,GADsB,SAE7C,GAAI,kBAFyC,GAAA,kBAIzC,iBAJyC,EAAA,qBAS3C,GAAI,SAAA,UAAY,GAEd,iBAF6D,GAO3D,kBAP2D,0BASpD,MAAA,WAAA,UAAgC,iBAApC,WACL,KAAM,GACJ,SAAA,eAA0B,SAAA,cAF0C,IAGtE,AAAA,GACE,mBAAoB,EAAA,QAAA,4BADH,gBASvB,wBACE,GAAI,gBAAA,oBAAJ,UACE,MAAO,iBAAA,oBAD0B,UAGnC,GAAI,MAAA,oBAAJ,YACE,MAAA,UAAA,UACE,GAAA,eAAA,YADa,iDAD6B,kBAM9C,KAAM,IAAA,OAVgB,iDAaxB,6CACE,GAD2C,GAE3C,IACE,EACE,WAAA,aAA0B,WAAA,YAF1B,2BAGF,IAGF,MAAO,IARoC,KAY7C,iCACE,GAAA,qBACE,MAAO,sBADiB,QAG1B,qBAJ+B,GAAA,MAAA,2BAM/B,KAAM,QAAS,iBACb,KAAM,0BAA2B,oCAEjC,GAAA,yBAEE,MAF4B,0BAa9B,GACE,SAAA,UAGA,IAeA,KAAM,QAAS,KAAA,WAAgB,gBAC/B,MAAO,QAfP,qBAiBF,YAAM,GAAA,eAAA,YAAW,gBACV,OAAA,YAvCwB,sBAyCjC,gBAAA,KAAc,qBAAd,QAA4C,qBA/Cb,QAiDxB,qBAjDwB,QAoDjC,0BAAA,GAIE,KAAM,GAAU,kBAAA,EAJa,MAK7B,MAAO,KAAA,gBAAoB,GAAA,MAAS,CALP,KAe/B,gBAIE,YAAY,CACV,OADU,KAEV,OAFU,KAGV,YAHU,GAAA,MAAA,sBAAZ,IAKE,GAAI,GAAQ,eAAA,IAAZ,GACE,KAAM,IAAA,OAD8B,+CActC,GAVA,KAAA,KALM,EAMN,KAAA,UANM,GAON,KAAA,qBAPM,GAQN,KAAA,UARM,EAUN,KAAA,iBAVM,GAAA,MAAA,2BAWN,KAAA,MAXM,KAYN,KAAA,WAZM,KAaN,KAAA,gBAbM,KAeN,GACE,eAAA,IAAA,EADQ,MAER,KAAA,oBAFQ,GAAA,OAKV,KApBM,iBAuBR,WACE,MAAO,MAAA,iBADK,WAId,QACE,MAAO,MADE,SAIX,kBACE,MAAO,MADY,gBAIrB,oBAAA,GACE,KAAA,MADwB,EAExB,KAAA,gBAAuB,GAAA,kBAAA,eAAA,OAAA,SAFC,GAGxB,KAAA,gBAAA,GAAA,QAAiC,cAIjC,KAAA,iBAPwB,UAU1B,cAME,GACE,MAAA,SAAA,aACA,CADA,kBAEA,CAAC,qCAED,GAAI,GAAY,eAEhB,IAGE,AAGG,GAAA,MAAA,cAAa,OAAA,SAAb,KAHH,IAKE,GAAY,iBACV,GAAA,KAAA,EAAmB,OAAnB,UAFF,OAQF,KAAM,GAAS,GAAA,QAfb,GAgBI,EAAiB,GAAA,kBAAA,eAAA,OAAA,SAhBrB,GAiBI,EAAiB,KACrB,EAAA,oBAAA,QAD2B,GAE3B,EAF2B,UAG3B,EAH2B,YAI3B,AAAI,KAAJ,UACE,KAAA,iBAAA,OAA6B,GAAA,OADX,yBAKlB,KAHK,oBAOH,EAAgB,KACpB,AAAK,KAAL,YAGE,KAGJ,EAAA,iBAAA,QArCE,GAuCF,EAAA,GAAA,OAA0B,IAExB,GADA,EAAA,oBAAA,QADgC,GAE5B,KAAJ,WACE,IADkB,OAIpB,AAAA,EAEE,MAAA,gBAFQ,EAGR,KAAA,MAHQ,EAIR,KAAA,WAJQ,EAKR,AAAK,EAAL,kBACE,MAAA,qBAD0B,IAG5B,KAAA,iBARQ,UAUR,EAAA,KAAA,YAAiC,CAC/B,UAAW,KAXL,aAcR,MADK,mBAEL,EAFK,UAGL,EAHK,eAOT,EAAA,GAAA,QAA2B,IAEzB,GADA,EAAA,oBAAA,QADiC,GAE7B,KAAJ,WACE,IADkB,OAIpB,IACE,UACA,GAEA,KAFU,sBAMd,KAAM,GAAW,KACf,KAAM,GAAU,GAAA,YAAe,CAC7B,KAAA,qBAAA,IAFmB,IAMrB,IACE,EAAA,KAAA,OAAA,EAAqC,CAAC,EADpC,eAEF,GACA,AAAA,GAAA,MAAA,MADW,qCAEX,EAAA,GAFW,EAGX,EAAA,KAAA,OAHW,KAWf,IAlGE,aAoGF,GACA,AAAA,GAAA,MAAA,MADU,kCAMd,KAvHY,mBA0Hd,mBACE,AAAA,kBACE,IAAA,MAAA,MADqB,2BAErB,iBAFqB,IAKvB,wBAAA,KACQ,IACJ,GAAI,KAAJ,WACE,KAAA,iBAAA,OAA6B,GAAA,OADX,yBAAA,OAIpB,KAAM,GAAO,GALe,cAM5B,KAAA,MAN4B,EAS5B,KAAM,GAAK,OAAS,mBAId,EAAgB,GAAA,kBAAA,eAAmB,EAAnB,UAAA,EAbM,GAc5B,EAAA,MAAA,EAd4B,GAgB5B,KAAM,GAAiB,GAAA,kBAAA,eAAA,EAAuB,EAAvB,UAhBK,GAiB5B,KAAA,gBAjB4B,EAkB5B,KAAA,iBAlB4B,UAoB5B,EAAA,KAAA,YAAiC,CAC/B,UAAW,KArBe,cADhC,MAyBS,IACL,KAAA,iBAAA,OACE,GAAA,OAAU,mCAAmC,EAAnC,gBAQlB,UACE,KAAA,UADQ,GAER,AAAI,KAAJ,YAEE,MAAA,WAFmB,YAGnB,KAAA,WAHmB,MAKrB,eAAA,OAAsB,KAPd,OAQR,KAAA,MARQ,KASR,AAAI,KAAJ,iBACE,MAAA,gBADwB,UAExB,KAAA,gBAFwB,YAU5B,UAAA,GACE,GAAI,CAAA,GAAW,CAAC,EAAhB,KACE,KAAM,IAAA,OADqB,kDAG7B,MAAI,gBAAA,IAAmB,EAAvB,MACS,eAAA,IAAmB,EADS,MAG9B,GAAA,WAPe,SAUxB,gBACE,MAAO,iBAGX,MAnX6C,0CA0X/C,sBACE,YAAA,EAAA,EAAA,EAAA,GACE,KAAA,eAD8D,EAE9D,KAAA,YAF8D,EAG9D,KAAA,WAAkB,GAH4C,YAI9D,KAAA,WAAkB,GAAA,cAAA,WAAe,CAC/B,MAAO,EADwB,MAE/B,qBAAsB,KAAA,sBAAA,KAFS,QAIjC,KAAA,QAR8D,EAS9D,KAAA,kBAAyB,GAAI,GAAJ,kBAA6B,CACpD,QAAS,EAD2C,QAEpD,aAAc,EAFsC,aAKtD,KAAA,UAd8D,GAe9D,KAAA,kBAf8D,KAgB9D,KAAA,oBAhB8D,KAkB9D,KAAA,eAlB8D,EAmB9D,KAAA,YAnB8D,KAoB9D,KAAA,cApB8D,KAsB9D,KAAA,UAtB8D,GAuB9D,KAAA,aAvB8D,GAwB9D,KAAA,uBAxB8D,GAAA,MAAA,2BA0B9D,KA1B8D,sBA6BhE,UACE,GAAI,KAAJ,kBACE,MAAO,MAAA,kBADmB,QAI5B,KAAA,UALQ,GAMR,KAAA,kBANQ,GAAA,MAAA,2BAQR,AAAI,KAAJ,qBACE,KAAA,oBAAA,OACE,GAAA,OAF0B,oDAM9B,KAAM,GAdE,GAiBR,KAAA,UAAA,QAAuB,SAAA,GACrB,AAAA,GACE,EAAA,KAAY,EADJ,cAIZ,KAAA,UAAA,OAtBQ,EAuBR,KAAA,aAAA,OAvBQ,EAyBR,KAAM,GAAa,KAAA,eAAA,gBAAA,YAzBX,MA0BR,SAAA,KA1BQ,GA2BR,QAAA,IAAA,GAAA,KAAyB,KACvB,KAAA,WAD6B,QAE7B,AAAI,KAAJ,gBACE,KAAA,eAAA,kBACE,GAAA,OAAA,eAFqB,2BAMzB,AAAI,KAAJ,gBACE,MAAA,eADuB,UAEvB,KAAA,eAFuB,MAIzB,KAAA,kBAZ6B,WAa5B,KAAA,kBAxCK,QAyCD,KAAA,kBAzCC,QA4CV,sBACE,KAAM,CAAA,iBAAA,eADc,KAGpB,EAAA,GAAA,YAA+B,CAAA,EAAA,KAC7B,AAAA,GAAA,MAAA,QACE,KADF,eAD6C,mDAK7C,KAAA,YAAmB,KAAA,eAL0B,gBAM7C,KAAA,YAAA,WAA8B,IAC5B,KAAA,cAAqB,CACnB,OAAQ,EADW,OAEnB,MAAO,EAFY,QAKvB,EAAA,OAAc,KACZ,KAAA,YAAA,OAAA,KAEQ,SAAU,CAAA,QAAV,SACJ,GAAA,GACE,EADQ,QAAA,OAIV,AAAA,GAAA,MAAA,QACE,GAAA,MAAA,eADF,GAL+B,wCAW/B,EAAA,QAAa,GAAA,YAAb,GAAA,EAAuC,CAXR,MAFnC,MAeS,IACL,EAAA,MADe,MAKrB,EAAA,SAAgB,IACd,KAAA,YAAA,OADwB,MAK5B,EAAA,GAAA,qBAAwC,IACtC,KAAM,GADwC,GAAA,MAAA,2BAExC,EAAa,KAF2B,YAG9C,SAAA,aAAA,KAA6B,KAG3B,AAAI,EAAC,EAAD,sBAAoC,CAAC,EAAzC,mBACE,CAAI,KAAA,eAAsB,EAA1B,YACE,EAAA,WAAuB,KADyB,eAGlD,EAAA,WAAwB,IACtB,AAAI,EAAJ,YACE,EAAA,WAAuB,CACrB,OAAQ,EADa,OAErB,MAAO,EAFc,UAQ7B,EAAA,QAA0B,CACxB,qBAAsB,EADE,qBAExB,iBAAkB,EAFM,iBAGxB,cAAe,EAHS,iBAKzB,EAzB2C,QA2BvC,EA3BuC,UA8BhD,EAAA,GAAA,iBAAoC,CAAA,EAAA,KAClC,AAAA,GAAA,MAAA,QACE,KADF,eADkD,wDAKlD,KAAM,GAAc,KAAA,eAAA,eAClB,EADkB,MAElB,EAPgD,KAoBlD,GAAI,CAAJ,GACE,EADgB,QAAA,OAKlB,EAAA,OAAc,KACZ,EAAA,OAAA,KAEQ,SAAU,CAAA,QAAV,SACJ,GAAA,GACE,EADQ,QAAA,OAIV,AAAA,GAAA,MAAA,QACE,GAAA,MAAA,eADF,GAL+B,6CAS/B,EAAA,QAAa,GAAA,YAAb,GAAA,EAAuC,CATR,MAFnC,MAaS,IACL,EAAA,MADe,MAKrB,EAAA,SAAgB,IACd,EAAA,OADwB,MAK5B,EAAA,GAAA,SAA4B,CAAC,CAAD,cAC1B,KAAA,UAAiB,EAD0B,SAE3C,EAAA,YAAA,QAAgC,GAAA,kBAAA,EAFW,SAK7C,EAAA,GAAA,eAAkC,SAAA,GAChC,GAD8C,GAE9C,OAAQ,EAAR,UACE,oBACE,EAAS,GAAA,OAAA,kBAAsB,EAAtB,QAAkC,EAD7C,MADF,UAIE,sBACE,EAAS,GAAA,OAAA,oBAAwB,EADnC,SAJF,UAOE,sBACE,EAAS,GAAA,OAAA,oBAAwB,EADnC,SAPF,UAUE,8BACE,EAAS,GAAA,OAAA,4BAAgC,EAAhC,QAA4C,EADvD,QAVF,UAaE,wBACE,EAAS,GAAA,OAAA,sBAA0B,EAA1B,QAAsC,EADjD,SAbF,MAuBA,EAAA,YAAA,OAzB8C,KA4BhD,EAAA,GAAA,kBAAqC,IAGnC,GAFA,KAAA,oBADgD,GAAA,MAAA,2BAG5C,EAAJ,YACE,KAAM,GAAiB,IACrB,KAAA,oBAAA,QAAiC,CADA,cAKnC,IACE,EAAA,WAAA,EAAuC,EADrC,YAEF,GACA,KAAA,oBAAA,OADW,QAIb,MAAA,oBAAA,OACE,GAAA,OAAA,kBAAsB,EAAtB,QAAyC,EAFtC,OAKP,MAAO,MAAA,oBAnByC,UAsBlD,EAAA,GAAA,aAAgC,IAG9B,AAAI,EAAJ,YACE,EAAA,WAAuB,CACrB,OAAQ,EADa,OAErB,MAAO,EAFc,SAKzB,KAAA,uBAAA,QATsC,KAYxC,EAAA,GAAA,kBAAqC,IACnC,GAAI,KAAJ,UAAoB,OAIpB,KAAM,GAAO,KAAA,UAAe,EALe,WAM3C,EAAA,iBAAsB,EAAtB,aAAyC,EANE,UAS7C,EAAA,GAAA,YAA+B,IAC7B,GAAI,KAAJ,UAAoB,OAIpB,KAAM,CAAA,EAAA,EAAA,GAL+B,EAMrC,GAAI,KAAA,WAAA,IAAJ,GAA6B,OAI7B,OAAA,OACE,OACE,KAAM,GAAS,KADjB,QAGE,GAAI,SAAJ,IACE,KAAM,GAAgB,EADK,MAE3B,AAAA,GAAA,MAAA,MAAK,8BAAA,KACL,KAAA,WAAA,QAAA,EAH2B,GAAA,MAO7B,GAAI,GAVN,KAWE,AACE,EAAA,QACA,WADA,eAEA,WAAA,cAHF,SAKE,GAAe,CACb,aAAA,EAAA,GACE,WAAA,cAAA,UAAA,EADsB,MAK5B,KAAM,GAAO,GAAA,cAAA,eAAA,EAAiC,CAC5C,gBAAiB,EAD2B,gBAE5C,gBAAiB,EAF2B,gBAG5C,aAAc,EAH8B,aAI5C,qBAAsB,KAAA,sBAAA,KAJsB,MAAA,iBAQ9C,KAAA,WAAA,KAAA,GAAA,MAES,GACE,EAAA,gBAAA,eAA+C,CADvC,QAFnB,QAKW,KACP,AAAI,CAAC,EAAD,qBAA+B,EAAnC,MAME,GAAA,KAN4C,MAQ9C,KAAA,WAAA,QAAA,EATa,KApCrB,UAAA,eAAA,mBAkDE,QACE,KAAA,WAAA,QAAA,EADF,GAlDF,cAsDI,KAAM,IAAA,OAAU,kCAAA,QAItB,EAAA,GAAA,MAAyB,IACvB,GAAI,KAAJ,UAEE,OAGF,KAAM,CAAA,EAAA,EAAA,EAAA,GANyB,EAOzB,EAAY,KAAA,UAPa,GAQ/B,GAAI,EAAA,KAAA,IAAJ,GACE,OAGF,OAAA,OACE,QACE,EAAA,KAAA,QAAA,EADF,GAIE,KAAM,GAJR,IAKE,AACE,GACA,QADA,IAEA,EAAA,KAAA,OAHF,GAKE,GAAA,mBADA,IAVN,cAeI,KAAM,IAAA,OAAU,2BAAA,KAEpB,SAGF,EAAA,GAAA,cAAiC,IAC/B,GAAI,KAAJ,UAAoB,OAIpB,AAAI,EAAJ,YACE,EAAA,WAAuB,CACrB,OAAQ,EADa,OAErB,MAAO,EAFc,UAO3B,EAAA,GAAA,qBAEE,KAAA,sBAAA,KAvTkB,OA0TpB,EAAA,GAAA,mBAAsC,CAAA,EAAA,KACpC,GAAI,KAAJ,WACE,EAAA,MAAW,GAAA,OADO,yBAAA,OAIpB,GAAI,GALgD,GAOpD,EAAA,OAAc,KACZ,GAAA,GACE,EADW,QAAA,OAIb,EALkB,GAOlB,KAAA,kBAAA,MAAA,GAAA,KACQ,SAAA,GACJ,EAAA,QAAA,EAAA,EAA6B,CAAC,EAAA,SADH,WAD/B,MAIS,SAAA,GACL,EAAA,MADuB,QAOjC,sBAAsB,CAAtB,cACE,GAAI,KAAJ,UAAoB,OAGpB,AAAI,KAAA,YAAJ,sBACE,KAAA,YAAA,qBADyC,GAK7C,UACE,MAAO,MAAA,eAAA,gBAAA,UADC,MAIV,QAAA,GACE,GACE,CAAC,OAAA,UAAD,IACA,GADA,GAEA,EAAa,KAHf,UAKE,MAAO,SAAA,OAAe,GAAA,OADtB,yBAIF,KAAM,GAAY,EATA,EAUlB,GAAI,IAAa,MAAjB,aACE,MAAO,MAAA,aAD2B,GAGpC,KAAM,GAAU,KAAA,eAAA,gBAAA,UACc,CADd,cAAA,KAIR,IACJ,GAAI,KAAJ,UACE,KAAM,IAAA,OADY,uBAGpB,KAAM,GAAO,GAAA,cAAA,EAAA,EAAA,KAIX,KAAA,QARc,QAUhB,YAAA,UAAA,GAVgB,EAAA,IAapB,YAAA,aAAA,GA9BkB,EAAA,EAkCpB,aAAA,GACE,MAAO,MAAA,eAAA,gBAAA,eAC4B,CAD5B,QAAA,MAIE,SAAA,GACL,MAAO,SAAA,OAAe,GAAA,OADC,MAK7B,eAAA,EAAA,GACE,MAAO,MAAA,eAAA,gBAAA,iBAAsD,CAAA,YAAA,WAM/D,kBACE,MAAO,MAAA,eAAA,gBAAA,kBADS,MAIlB,eAAA,GACE,MAAI,OAAA,IAAJ,SACS,QAAA,OAAe,GAAA,OADI,iCAGrB,KAAA,eAAA,gBAAA,iBAAsD,CAJ5C,OASnB,gBACE,MAAO,MAAA,eAAA,gBAAA,gBADO,MAIhB,gBACE,MAAO,MAAA,eAAA,gBAAA,gBADO,MAIhB,cACE,MAAO,MAAA,eAAA,gBAAA,cADK,MAId,uBACE,MAAO,MAAA,eAAA,gBAAA,uBADc,MAIvB,gBACE,MAAO,MAAA,eAAA,gBAAA,gBADO,MAIhB,iBACE,MAAO,MAAA,eAAA,gBAAA,iBADQ,MAIjB,gBACE,MAAO,MAAA,eAAA,gBAAA,gBADO,MAIhB,aACE,MAAO,MAAA,eAAA,gBAAA,aADI,MAIb,iBACE,MAAO,MAAA,eAAA,gBAAA,iBADQ,MAIjB,cACE,MAAO,MAAA,eAAA,gBAAA,cAAA,MAAA,KAEC,GACG,EACL,KAAM,EADD,GAEL,SAAU,EAAA,GAAa,GAAA,WAAA,SAAa,EAA1B,IAFL,KAGL,2BAA4B,KAAA,YACxB,KAAA,YADwB,SAHvB,QAUb,WACE,MAAO,MAAA,eAAA,gBAAA,WADE,MAIX,eACE,MAAO,MAAA,eAAA,gBAAA,UAAA,MAAA,KAA0D,KAC/D,OAAS,GAAJ,EAAW,EAAK,KAAA,UAArB,OAA4C,EAA5C,EAAoD,KAClD,KAAM,GAAO,KAAA,UAD0C,GAEvD,GAAA,GACE,KAAM,GAAoB,EADlB,UAGR,GAAI,CAAJ,EACE,KAAM,IAAA,OACJ,sBAAsB,EAAtB,8BAKR,KAAA,WAbqE,QAcrE,KAAA,WAdqE,aAkBzE,iBACE,KAAM,GAAS,KADG,QAElB,MAAO,GAAA,MAAA,QAAA,KAAA,gBAA8B,CACnC,iBAAkB,EADiB,iBAEnC,gBAAiB,EAFkB,mBAazC,iBACE,cACE,KAAA,MAAa,OAAA,OADD,MAQd,WAAA,GACE,MAAI,MAAA,MAAJ,GACS,KAAA,MADc,GAGf,KAAA,MAAA,GAAoB,CAC1B,WAD0B,GAAA,MAAA,2BAE1B,KAF0B,KAG1B,SAH0B,IAe9B,IAAA,EAAW,EAAX,MAGE,GAAA,EACE,YAAA,WAAA,GAAA,WAAA,QAAA,KADY,GAAA,KAMd,KAAM,GAAM,KAAA,MATc,GAY1B,GAAI,CAAA,GAAQ,CAAC,EAAb,SACE,KAAM,IAAA,OAAU,6CAAA,MAElB,MAAO,GAfmB,KAkB5B,IAAA,GACE,KAAM,GAAM,KAAA,MADH,GAET,MAAO,GAAM,EAAN,SAFE,GAQX,QAAA,EAAA,GACE,KAAM,GAAM,KAAA,WADO,GAGnB,EAAA,SAHmB,GAInB,EAAA,KAJmB,EAKnB,EAAA,WAAA,QALmB,GAQrB,QACE,KAAA,MAAa,OAAA,OADP,OASV,iBACE,YAAA,GACE,KAAA,oBAD8B,EAS9B,KAAA,WAT8B,QAgBhC,WACE,MAAO,MAAA,oBAAA,WADK,QASd,SACE,KAAA,oBADO,UASX,KAAM,oBAAsB,WAC1B,KAAM,GAAoB,GADqC,SAI/D,QACE,YAAY,CAAA,WAAA,SAAA,OAAA,aAAA,eAAA,YAAA,gBAAA,eASV,2BATU,GAUV,SAVF,KAYE,KAAA,SADC,EAED,KAAA,OAFC,EAGD,KAAA,KAHC,EAID,KAAA,WAJC,EAKD,KAAA,gBALC,KAMD,KAAA,aANC,EAOD,KAAA,WAPC,EAQD,KAAA,cARC,EASD,KAAA,aATC,EAUD,KAAA,QAVC,EAYD,KAAA,QAZC,GAaD,KAAA,sBAbC,KAcD,KAAA,cAdC,GAeD,KAAA,0BACE,IAAA,IAAqC,MAAA,SAhBtC,YAiBD,KAAA,UAjBC,GAkBD,KAAA,WAlBC,GAAA,MAAA,2BAmBD,KAAA,KAAY,GAAA,YAnBX,MAqBD,KAAA,eAAsB,KAAA,UAAA,KArBrB,MAsBD,KAAA,mBAA0B,KAAA,cAAA,KAtBzB,MAuBD,KAAA,WAAkB,KAAA,MAAA,KAvBjB,MAwBD,KAAA,QAAe,EAAA,cAxBd,OA2BH,mBAAmB,EAAnB,IACE,GAAI,KAAJ,UAAoB,OAGpB,GAAI,KAAJ,SACE,GAAI,EAAA,IAAsB,KAA1B,SACE,KAAM,IAAA,OACJ,mJAKJ,EAAA,IAAsB,KARN,SAWlB,AACE,KAAA,SACA,WADA,gBAEA,WAAA,eAHF,SAKE,MAAA,QAAe,WAAA,eAAA,OAAiC,KADhD,YAEA,KAAA,QAAA,KAAkB,KAFlB,cAGA,KAAA,QAAA,eAA8B,KAAA,QAH9B,qBAKF,KAAM,CAAA,gBAAA,WAAA,YAAA,aAAA,cAMF,KA9BmC,OAgCvC,KAAA,IAAW,GAAA,SAAA,eAAA,EAET,KAFS,WAGT,KAHS,KAIT,KAJS,cAKT,KALS,aAhC4B,GAwCvC,KAAA,IAAA,aAAsB,CAAA,YAAA,WAAA,eAAA,eAMtB,KAAA,gBA9CuC,EA+CvC,KAAA,cA/CuC,GAgDvC,AAAI,KAAJ,uBACE,KAD8B,wBAKlC,OAAO,EAAP,MACE,KAAA,QADmB,GAEnB,KAAA,UAFmB,GAGnB,AAAI,KAAJ,KACE,KAAA,IADY,aAGd,AAAI,KAAJ,SACE,EAAA,OAAyB,KADT,SAGlB,KAAA,SACE,GACE,GAAA,gBAAA,4BACE,6BAA6B,KAAA,WAA7B,IAZa,WAkBrB,sBACE,GAAI,CAAC,KAAL,eACE,AAAK,KAAL,uBACE,MAAA,sBAA6B,KADE,gBADV,OAWzB,GAJA,AAAI,KAAJ,SACE,KAAA,QAAA,mBAAgC,KADhB,cAId,KAAJ,QAAkB,OAGlB,KAfoB,YAkBtB,YAEE,GADA,KAAA,QADU,GAEN,KAAJ,UAAoB,OAGpB,AAAI,KAAA,KAAJ,WACE,KAAA,KAAA,WAAqB,KADG,oBAGxB,KADK,gBAKT,gBACE,AAAI,KAAJ,0BACE,OAAA,sBAA6B,KAC3B,KAAA,aAAA,MAAwB,KAAA,OAAA,KADS,SAInC,QAAA,UAAA,KAAuB,KAAvB,YAAA,MAA8C,KAAA,OAAA,KADzC,YAKT,SACE,GAAI,KAAJ,UAAoB,OAGpB,KAAA,gBAAuB,KAAA,IAAA,oBACrB,KADqB,aAErB,KAFqB,gBAGrB,KAHqB,eAIrB,KARU,SAUZ,AAAI,KAAA,kBAAyB,KAAA,aAAA,UAA7B,QACE,MAAA,QAD+D,GAE/D,AAAI,KAAA,aAAJ,WACE,MAAA,IAD+B,aAE/B,AAAI,KAAJ,SACE,EAAA,OAAyB,KADT,SAGlB,KAL+B,cAUvC,MAhL+D,MAmL3D,QA3uFN,kCA6uFA,KAAM,OA7uFN,mJCeA,GAAA,GAAA,EAAA,GAWA,QACE,YAAY,CAAA,QAAZ,yBACE,AAAI,KAAA,cAAJ,GACE,GAAA,EAAA,aADuC,qCAGzC,KAAA,MAJ2C,EAK3C,KAAA,sBAL2C,EAO3C,KAAA,gBAP2C,GAQ3C,KAAA,aAR2C,KAW7C,kBAAA,GACE,KAAA,gBAAA,KADgC,GAEhC,SAAA,MAAA,IAFgC,GAKlC,WAAA,GACE,GAAI,GAAe,KADJ,aAEf,AAAA,GACE,GAAe,KAAA,aAAoB,SAAA,cADlB,SAEjB,EAAA,GAAkB,wBAAwB,KAAxB,QAClB,SAAA,gBAAA,qBAAA,QAAA,GAAA,YAHiB,IAQnB,KAAM,GAAa,EAVJ,MAWf,EAAA,WAAA,EAA4B,EAAA,SAXb,QAcjB,QACE,KAAA,gBAAA,QAA6B,SAAA,GAC3B,SAAA,MAAA,OADqD,KAGvD,KAAA,gBAAA,OAJM,EAMN,AAAI,KAAJ,cAEE,MAAA,aAFqB,SAGrB,KAAA,aAHqB,WAOzB,MAAA,GAEE,GAAI,EAAA,UAAiB,EAArB,YAAuC,OAKvC,GAFA,EAAA,SALe,GAOX,KAAJ,2BACE,KAAM,GAAiB,EADW,uBAElC,GAAA,GACE,KAAA,kBADkB,GAElB,IACE,KAAM,GADJ,aAEF,GACA,WAAA,sBAA2B,CACzB,UAAW,EAAA,qBAFF,sBAIX,GAAA,EAAA,MAAK,wBAAwB,EAAxB,aAAA,OAGL,EAAA,gBAPW,GAAA,GANmB,OAqBpC,KAAM,GAAO,EA5BE,qBA6Bf,GAAA,GAGE,GAFA,KAAA,WADQ,GAGJ,KAAJ,2BAAqC,OAGrC,KAAM,IAAA,SAAY,IAChB,KAAM,GAAU,KAAA,sBADW,GAE3B,KAAA,sBAA2B,CAA3B,GAAmC,CAAnC,GAF2B,MAQjC,sBAAA,GACE,AAAA,GAAA,EAAA,aAD8B,+CAIhC,6BACE,KAAM,GAAY,MAAA,WAAA,aAAmC,CAAC,CAAC,SADzB,MAE9B,MAAO,GAAA,EAAA,QAAA,KAAA,4BAFuB,MAMhC,8BACE,AAAA,GAAA,EAAA,aAD+B,oDAKjC,iBACE,AAAA,GAAA,EAAA,aADkB,oCAIpB,sBAAA,EAAA,EAAA,GACE,AAAA,GAAA,EAAA,aADiD,6CAKrD,GAzIA,kBAmJE,EAAA,WAAA,EAAa,aAAA,GACX,YAAA,GACE,MADiB,GAEjB,KAAA,eAAsB,CACpB,SADoB,GAEpB,cAFoB,GAItB,KAAA,eANiB,KASnB,8BACE,GAAI,GAD2B,GAG7B,GAAI,MAAA,YAAJ,YAEE,EAFoC,QAMpC,KAAM,GAAI,mCAAA,KACR,UAJG,WAML,AAAI,GAAK,EAAA,IAAT,IACE,GADmB,IAMzB,MAAO,GAAA,EAAA,QAAA,KAAA,6BAlBwB,GAqBjC,sBAAA,GACE,aAKE,IAJA,GAAA,EAAA,QAAO,CAAC,EAAR,KADyB,6CAEzB,EAAA,KAFyB,GAKlB,EAAA,SAAA,OAAA,GAA+B,EAAA,SAAA,GAAtC,OACE,KAAM,GAAe,EAAA,SADyC,QAE9D,WAAW,EAAX,SAF8D,IAMlE,KAAM,GAAU,KAZc,eAaxB,EAAU,CACd,GAAI,sBAAsB,EAAtB,kBACJ,KAFc,GAGd,SAHc,EAAA,YAMhB,SAAA,SAAA,KAnB8B,GAAA,KAuBhC,iBACE,KAAM,GAAkB,WAGtB,MAAO,MACL,69CAwBJ,MAAO,GAAA,EAAA,QAAA,KAAA,gBAA8B,KAGvC,sBAAA,EAAA,EAAA,GAOE,WAAA,EAAA,GACE,MACG,GAAA,WAAA,IAAD,GACC,EAAA,WAAgB,EAAhB,IADD,GAEC,EAAA,WAAgB,EAAhB,IAFD,EAGC,EAAA,WAAgB,EAAhB,GALwB,IAQ7B,WAAA,EAAA,EAAA,EAAA,GACE,KAAM,GAAS,EAAA,UAAA,EADgC,GAEzC,EAAS,EAAA,UAAY,EAFoB,GAG/C,MAAO,GAAA,EAHwC,EAKjD,GAAA,GApB2C,EAuB3C,KAAM,GAAS,SAAA,cAvB4B,UAwB3C,EAAA,MAxB2C,EAyB3C,EAAA,OAzB2C,EA0B3C,KAAM,GAAM,EAAA,WA1B+B,MA4B3C,GAAI,GA5BuC,EA6B3C,WAAA,EAAA,GAGE,GAFA,IAEI,EAAJ,IACE,AAAA,GAAA,EAAA,MADe,gCAEf,IAFe,OAKjB,EAAA,KAAW,QARwB,EASnC,EAAA,SAAA,IAAA,EATmC,IAUnC,KAAM,GAAY,EAAA,aAAA,EAAA,EAAA,EAViB,GAWnC,GAAI,EAAA,KAAA,GAAJ,GACE,IADyB,OAI3B,WAAW,EAAA,KAAA,KAAA,EAfwB,IAkBrC,KAAM,GAAiB,KAAK,KAAL,QAAkB,KAAlB,mBAMvB,GAAI,GAAO,KArDgC,cAsD3C,KAAM,GAtDqC,IAuD3C,EAAO,EAAA,EAAA,EAGL,EAHK,OAvDoC,GA8D3C,KAAM,GA9DqC,GA+DrC,EA/DqC,WAgE3C,GAAI,GAAW,EAAA,EAhE4B,GAiE3C,IAAK,EAAA,EAAO,EAAK,EAAA,OAAjB,EAA4C,EAA5C,EAAoD,GAApD,EACE,EAAY,EAAA,EAAwB,EAAA,EAAzB,GAD+C,EAG5D,AAAI,EAAI,EAAR,QAEE,GACG,EAAA,EAAwB,EAAM,EAAN,MAAzB,GAH2B,GAK/B,EAAO,EAAA,EAAA,EAAA,EAA2C,GAAA,EAAA,UAzEP,IA2E3C,KAAM,GAAM,iCAAiC,KAAjC,OACN,EAAO,4BAAA,UAAA,KACb,KAAA,WA7E2C,GA+E3C,KAAM,GA/EqC,GAgF3C,IAAK,EAAA,EAAO,EAAK,EAAjB,OAA+B,EAA/B,EAAuC,IACrC,EAAA,KAAW,EAAA,GAD+B,YAG5C,EAAA,KAnF2C,GAqF3C,KAAM,GAAM,SAAA,cArF+B,OA2F3C,IALA,EAAA,MAAA,WAtF2C,SAuF3C,EAAA,MAAA,MAAkB,EAAA,MAAA,OAvFyB,OAwF3C,EAAA,MAAA,SAxF2C,WAyF3C,EAAA,MAAA,IAAgB,EAAA,MAAA,KAzF2B,MA2FtC,EAAA,EAAO,EAAK,EAAjB,OAA+B,EAA/B,EAAuC,EAAvC,GACE,KAAM,GAAO,SAAA,cAD6B,QAE1C,EAAA,YAF0C,KAG1C,EAAA,MAAA,WAAwB,EAHkB,GAI1C,EAAA,YAJ0C,GAM5C,SAAA,KAAA,YAjG2C,GAmG3C,EAAA,EAA4B,WAC1B,SAAA,KAAA,YADsC,GAEtC,EAFsC,eAS9C,QACE,YAAA,EAEE,CACE,kBADF,GAEE,kBAFF,GAGE,eAHF,GAIE,uBAJF,KAKE,eAPJ,OAUE,KAAA,eAAsB,OAAA,OADtB,MAGA,SAAA,KAAA,GACE,KAAA,GAAU,EADoB,GAGhC,KAAA,gBAAuB,IANvB,GAOA,KAAA,gBAAuB,IAPvB,GAQA,KAAA,aAAoB,IARpB,GASA,KAAA,sBATA,EAUA,KAAA,aAVA,EAaF,uBACE,GAAI,CAAC,KAAD,MAAc,KAAlB,gBACE,MADsC,MAGxC,KAAM,GAAiB,GAAA,UAAa,KAAb,WAA8B,KAA9B,KAJF,IAMrB,MAAI,MAAJ,cACE,KAAA,aAAA,aADqB,MANF,EAYvB,qBACE,GAAI,CAAC,KAAD,MAAc,KAAlB,gBACE,MADsC,MAGxC,KAAM,GAAO,GAAA,EAAA,eAAc,GAAA,YAAe,KAJvB,OAMb,EAAM,YAAY,KAAZ,mBAAoC,KAApC,OACN,EAAO,4BAA4B,KAA5B,mBAAA,KAEb,MAAI,MAAJ,cACE,KAAA,aAAA,aAAA,KADqB,GATJ,EAerB,iBAAA,EAAA,GACE,GAAI,KAAA,eAAA,KAAJ,OACE,MAAO,MAAA,eADyC,GAIlD,GAAA,GALgC,EAMhC,IACE,EAAO,EAAA,IAAS,KAAA,WAAA,SADd,SAEF,GACA,GAAI,CAAC,KAAL,aACE,KADsB,GAGxB,MAAI,MAAJ,uBACE,KAAA,sBAA2B,CACzB,UAAW,EAAA,qBAFiB,mBAKhC,GAAA,EAAA,MAAK,2CAAA,OAEG,KAAA,eAAA,GAAiC,SAAA,EAAA,KAM3C,GAAI,KAAA,iBAAwB,EAAA,sBAA5B,OACE,GAAA,GACE,EAFqD,GAGvD,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAkC,EAAlC,EAA0C,IACxC,EAAU,EADmC,GAG7C,AAAI,EAAA,OAAJ,OACE,EAAO,EAAA,KAAA,KADuB,KAG9B,EADK,GAGP,GAAM,KAAO,EAAP,IAAA,IAAA,EARuC;EAW/C,MAAQ,MAAA,eAAA,GAAiC,GAAA,UAAA,IAAA,OAdc,GAkBzD,MAAQ,MAAA,eAAA,GAAiC,SAAA,EAAA,GACvC,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAkC,EAAlC,EAA0C,IACxC,EAAU,EADmC,GAG7C,AAAI,EAAA,MAAJ,SACE,GAAA,KAAe,CAAA,EAAO,CAAP,IAEjB,EAAE,EAAF,KAAA,MAAA,EAAwB,EANqB,0ICnbrD,GAAA,GAAA,EAAA,GAiBA,KAAM,GAAsB,OAAA,OAjB5B,MAoBG,AAAA,YAEC,AAAA,EAAA,UACE,GAAA,gBADY,QAKlB,KAAM,GAAyB,OAAA,OA3B/B,qICeA,GAAA,GAAA,EAAA,GAcA,EAAA,EAAA,GAMI,EAnCJ,GAqCI,EArCJ,IAsCI,EAtCJ,KAyCI,EAzCJ,IA2CI,EA3CJ,GA4CI,EA5CJ,IA8CI,EA9CJ,GAgDA,WAAA,GAEE,AAAK,EAAL,qBACE,GAAA,cAAoB,EADQ,KAE5B,EAAA,iBAAuB,EAFK,QAG5B,EAAA,gBAAsB,EAHM,OAI5B,EAAA,eAAqB,EAJO,MAK5B,EAAA,mBAAyB,EALG,UAM5B,EAAA,mBAAyB,EANG,UAO5B,EAAA,sBAA4B,EAPA,aAS5B,EAAA,iBAAuB,EAAA,kBAAwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAC/C,EAAA,gBAV4B,GAY5B,OAAA,eAAA,EAAA,sBAAkD,CAChD,IAAK,WACH,MAAO,MAD2B,oBAKtC,OAAA,eAAA,EAAA,6BAAyD,CACvD,IAAK,WAKH,GAAI,GAAI,KALiC,iBAMrC,EAAI,EAAR,GACE,EAAI,EADN,GAEE,EAAI,EAFN,GAGE,EAAI,EAHN,GAIE,EAAI,EAJN,GAKE,EAAI,EAXmC,GAarC,EAAQ,EAAA,EAAQ,EAbqB,EAcrC,EAAQ,EAAA,EAAQ,EAdqB,EAgBzC,MAAO,CACL,EADK,EAEL,EAFK,EAGL,EAHK,EAIL,EAJK,EAKJ,GAAA,EAAQ,EAAT,GALK,EAMJ,GAAA,EAAQ,EAAT,GANK,MAWX,EAAA,KAAW,WACT,GAAI,GAAM,KADkB,iBAE5B,KAAA,gBAAA,KAF4B,GAG5B,KAAA,iBAAwB,EAAA,MAAA,EAHI,GAK5B,KAL4B,iBAQ9B,EAAA,QAAc,WACZ,GAAI,GAAO,KAAA,gBADuB,MAElC,AAAA,GACE,MAAA,iBADQ,EAER,KAFQ,qBAMZ,EAAA,UAAgB,SAAA,EAAA,GACd,GAAI,GAAI,KADkC,iBAE1C,EAAA,GAAO,EAAA,GAAA,EAAW,EAAA,GAAX,EAAsB,EAFa,GAG1C,EAAA,GAAO,EAAA,GAAA,EAAW,EAAA,GAAX,EAAsB,EAHa,GAK1C,KAAA,mBAAA,EAL0C,IAQ5C,EAAA,MAAY,SAAA,EAAA,GACV,GAAI,GAAI,KAD0B,iBAElC,EAAA,GAAO,EAAA,GAF2B,EAGlC,EAAA,GAAO,EAAA,GAH2B,EAIlC,EAAA,GAAO,EAAA,GAJ2B,EAKlC,EAAA,GAAO,EAAA,GAL2B,EAOlC,KAAA,eAAA,EAPkC,IAUpC,EAAA,UAAgB,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACd,GAAI,GAAI,KAD8C,iBAEtD,KAAA,iBAAwB,CACtB,EAAA,GAAA,EAAW,EAAA,GADW,EAEtB,EAAA,GAAA,EAAW,EAAA,GAFW,EAGtB,EAAA,GAAA,EAAW,EAAA,GAHW,EAItB,EAAA,GAAA,EAAW,EAAA,GAJW,EAKtB,EAAA,GAAA,EAAW,EAAA,GAAX,EAAsB,EALA,GAMtB,EAAA,GAAA,EAAW,EAAA,GAAX,EAAsB,EANA,IASxB,EAAA,mBAAA,EAAA,EAAA,EAAA,EAAA,EAXsD,IAcxD,EAAA,aAAmB,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACjB,KAAA,iBAAwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAExB,EAAA,sBAAA,EAAA,EAAA,EAAA,EAAA,EAH4D,IAM9D,EAAA,OAAa,SAAA,GACX,GAAI,GAAW,KAAA,IADsB,GAEjC,EAAW,KAAA,IAFsB,GAIjC,EAAI,KAJ6B,iBAKrC,KAAA,iBAAwB,CACtB,EAAA,GAAA,EAAkB,EAAA,GADI,EAEtB,EAAA,GAAA,EAAkB,EAAA,GAFI,EAGtB,EAAA,GAAO,CAAP,EAAmB,EAAA,GAHG,EAItB,EAAA,GAAO,CAAP,EAAmB,EAAA,GAJG,EAKtB,EALsB,GAMtB,EANsB,IASxB,KAAA,gBAdqC,KAmB3C,GAAI,GAAkB,WAEpB,WAAA,GACE,KAAA,cADqC,EAErC,KAAA,MAAa,OAAA,OAFwB,MAIvC,SAAA,UAA2B,CACzB,UAAW,SAAA,EAAA,EAAA,EAAA,GAMT,GADA,GAEA,MAAI,MAAA,MAAA,KAAJ,OACE,GAAc,KAAA,MADkB,GAEhC,KAAA,cAAA,MAAA,EAAA,EAFgC,GAIhC,EAAA,QAAA,aAAA,EAAA,EAAA,EAAA,EAAA,EAJgC,IAMhC,GAAc,KAAA,cAAA,OAAA,EADT,GAEL,KAAA,MAAA,GAFK,GAIP,AAAA,GACE,EAA2B,EADT,SAXpB,GAgBF,QACE,OAAA,KAAe,MAAf,OACE,GAAI,GAAc,KAAA,MADO,GAEzB,KAAA,cAAA,QAFyB,GAGzB,MAAO,MAAA,MAHkB,MA7BsB,KAuCvD,WAAA,GACE,GAAI,GAD8B,IAG9B,EAAQ,EAAZ,MACE,EAAS,EAJuB,OAKlC,EAAA,EAAA,EAGE,EAAS,EARuB,EAS9B,EAAS,GAAA,YAAe,EAAU,GATJ,IAW9B,EACA,GAAA,YAAe,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAGf,EAAY,EAAD,EAAc,CAA7B,EACE,EAAQ,EAhBwB,KAiB9B,EAAO,GAAA,YAAe,EAA1B,GACE,EADF,EAjBkC,EAoBlC,IAAK,EAAA,EAAO,EAAK,EAAjB,OAA+B,EAA/B,EAAuC,IAGrC,OAFI,GAAJ,IACE,EAAO,EAFiC,GAGnC,EAAP,GACE,EAAK,KAAS,EAAA,EAAA,EADC,IAEf,IAFe,EAgBnB,GAAI,GAvC8B,EA6ClC,IALA,EAxCkC,EAyClC,AAAI,EAAA,KAAJ,GACE,GAAA,GADmB,EAEnB,EAFmB,GAIhB,EAAL,EAAY,EAAZ,EAAuB,IACrB,AAAI,EAAA,KAAc,EAAK,EAAvB,IACE,GAAA,GAAY,EAAA,GAAA,EADmB,EAE/B,EAF+B,GAIjC,IAMF,IAJA,AAAI,EAAA,KAAJ,GACE,GAAA,GADmB,EAEnB,EAFmB,GAIhB,EAAL,EAAY,EAAZ,EAAwB,KACtB,EAAM,EADqB,EAE3B,EAAK,EAFsB,EAG3B,AAAI,EAAK,EAAL,KAAyB,EAA7B,IACE,GAAA,GAAa,EAAA,GAAA,EADyB,EAEtC,EAFsC,GAMxC,GAAI,GAAO,GAAA,GAAA,EAAD,GAAuB,GAAK,EAAL,GAAA,EATN,GAU3B,IAAK,EAAL,EAAY,EAAZ,EAAuB,IACrB,EACG,IAAD,GACC,GAAK,EAAL,GAAA,EADD,GAEC,GAAK,EAAA,EAAL,GAAA,EAJuB,GAK1B,AAAI,EAAJ,IACE,GAAO,EAAP,GAAiB,EADG,GAEpB,EAFoB,GAItB,IAOF,GALA,AAAI,EAAK,EAAL,KAAyB,EAA7B,IACE,GAAO,EAAP,GAAiB,EAAA,GAAA,EADqB,EAEtC,EAFsC,GAKpC,EAAJ,EACE,MADkC,MAWtC,IANA,EAAM,EAAY,GAvFgB,GAwFlC,EAAK,EAxF6B,EAyFlC,AAAI,EAAA,KAAJ,GACE,GAAA,GADmB,EAEnB,EAFmB,GAIhB,EAAL,EAAY,EAAZ,EAAuB,IACrB,AAAI,EAAA,KAAc,EAAK,EAAvB,IACE,GAAO,EAAP,GAAiB,EAAA,GAAA,EADc,EAE/B,EAF+B,GAIjC,IAMF,GAJA,AAAI,EAAA,KAAJ,GACE,GAAO,EAAP,GADmB,EAEnB,EAFmB,GAIjB,EAAJ,EACE,MADkC,MAKpC,GAAI,GAAQ,GAAA,YAAe,CAAA,EAAA,EAAY,GAAZ,EAAmB,CAAnB,EAAA,EAAA,EAAA,EAAA,IACvB,EA9G8B,GA+GlC,IAAK,EAAL,EAAY,GAAS,GAArB,EAAkC,KAGhC,OAFI,GAAI,EAD6B,EAEjC,EAAM,EAF2B,EAG9B,EAAA,GAAW,CAAC,EAAnB,IACE,IAEF,GAAI,IAAJ,EAAe,SAGf,GAAI,GAAS,CAAC,EAAD,EAAA,GAET,EAAO,EAAX,GACE,EADF,EAXqC,EAcrC,GACE,GAAI,GAAO,EADV,GAED,EACE,IADC,QAEM,CAAC,EAJT,IAMD,EAAK,EANJ,GAOD,AAAI,IAAA,GAAY,IAAhB,GAEE,GAFyB,EAIzB,EAAA,GAJyB,GAQzB,GAAO,EAAO,GAAD,GAHR,EAKL,EAAA,IAAc,GAAD,EAAe,GALvB,GAQP,EAAA,KAAY,EApBX,GAqBD,EAAA,KAAa,EAAD,EArBX,GAuBD,AAAK,EAAL,IACE,EADc,QAGT,IAxC4B,GAyCrC,EAAA,KAzCqC,GA0CrC,EA1CqC,EA6CvC,GAAI,GAAc,SAAA,GAChB,EAD6B,OAG7B,EAAA,MAAQ,EAAR,EAAmB,GAHU,GAI7B,EAAA,UAAA,EAAe,CAJc,GAK7B,EAL6B,YAM7B,OAAS,GAAJ,EAAW,GAAK,EAArB,OAAsC,EAAtC,GAA8C,KAC5C,GAAI,GAAI,EADyC,GAEjD,EAAA,OAAS,EAAT,GAAe,EAFkC,IAGjD,OAAS,GAAJ,EAAW,GAAK,EAArB,OAA+B,EAA/B,GAAuC,GAAvC,EACE,EAAA,OAAS,EAAT,GAAe,EAAE,EAD4B,IAIjD,EAb6B,OAc7B,EAd6B,YAe7B,EAf6B,WAkB/B,MA9KkC,GAiLpC,GAAI,GAAoB,WAEtB,aAEE,KAAA,aAF0B,GAG1B,KAAA,SAH0B,EAI1B,KAAA,cAJ0B,EAK1B,KAAA,WAL0B,EAAA,gBAM1B,KAAA,gBAN0B,EAO1B,KAAA,WAP0B,EAAA,qBAQ1B,KAAA,QAR0B,EAU1B,KAAA,EAV0B,EAW1B,KAAA,EAX0B,EAa1B,KAAA,MAb0B,EAc1B,KAAA,MAd0B,EAgB1B,KAAA,YAhB0B,EAiB1B,KAAA,YAjB0B,EAkB1B,KAAA,WAlB0B,EAmB1B,KAAA,kBAAyB,EAAA,kBAnBC,KAoB1B,KAAA,SApB0B,EAsB1B,KAAA,UAtB0B,UAuB1B,KAAA,YAvB0B,UAwB1B,KAAA,YAxB0B,GA0B1B,KAAA,UA1B0B,EA2B1B,KAAA,YA3B0B,EA4B1B,KAAA,UA5B0B,EA6B1B,KAAA,YA7B0B,KA8B1B,KAAA,eA9B0B,KAiC5B,SAAA,UAA6B,CAC3B,MAAO,WACL,MAAO,QAAA,OADgC,OAGzC,gBAAiB,SAAA,EAAA,GACf,KAAA,EAD+D,EAE/D,KAAA,EAF+D,IAvCV,KA+CvD,EAAkB,WAGpB,GAAI,GAHiD,GAKjD,EALiD,GAQrD,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAQE,KAAA,IADA,EAEA,KAAA,QAAe,GAFf,GAGA,KAAA,WAHA,GAIA,KAAA,YAJA,KAKA,KAAA,cALA,GAMA,KAAA,IANA,KAOA,KAAA,MAPA,KAQA,KAAA,WARA,EASA,KAAA,KATA,EAUA,KAAA,cAVA,EAWA,KAAA,aAXA,EAYA,KAAA,WAZA,EAaA,KAAA,WAbA,GAcA,KAAA,gBAdA,KAiBA,KAAA,cAjBA,KAkBA,KAAA,mBAlBA,GAmBA,KAAA,WAnBA,EAoBA,KAAA,WApBA,GAqBA,KAAA,aArBA,EAsBA,KAAA,UAtBA,KAuBA,KAAA,eAAsB,GAAA,GAAmB,KAvBzC,eAwBA,AAAA,GAGE,EAHa,GAKf,KAAA,2BA7BA,KAgCF,WAAA,EAAA,GACE,GAAI,MAAA,YAAA,aAAoC,YAAxC,YACE,EAAA,aAAA,EAAA,EADoE,GAAA,OAgBtE,GAAI,GAAS,EAAb,OACE,EAAQ,EAlB8B,MAmBpC,EAAqB,EAnBe,EAoBpC,EAAc,GAAD,GApBuB,EAqBpC,EAAc,IAAA,EAAA,EAAwC,EArBlB,EAuBpC,EAAe,EAAA,gBAAA,EAvBqB,GAwBpC,EAAJ,EAxBwC,EA0BpC,EAAM,EA1B8B,KA2BpC,EAAO,EA3B6B,KA4BxC,EAAA,EAAA,GA5BwC,EAgCxC,GAAI,EAAA,OAAiB,EAAA,UAArB,gBAEE,GAAI,IAAY,EAF6B,WAGzC,GAAS,GAAA,aAAgB,EAAhB,OAAA,EAAgC,EAAA,YAHA,GAIzC,GAAmB,GAJsB,OAKzC,GAAe,EAAD,GAL2B,EAMzC,GANyC,WAOzC,GAAQ,EAAA,qBAAA,MAAA,WAPiC,IAQ7C,IAAK,EAAL,EAAY,EAAZ,EAA6B,KAI3B,IAHA,GACE,EAAA,EAAA,EAF8B,EAGhC,EAHgC,EAI3B,EAAL,EAAY,EAAZ,GAAiC,KAO/B,OANI,IAAU,GADsB,EAEhC,GAFgC,EAGhC,GAAO,GAAA,GAAA,EAAgC,GAAA,EAHP,EAIhC,GAAe,GAAO,CAJU,EAKhC,GALgC,EAMhC,GANgC,EAO7B,GAAP,GAAyB,IAAzB,EACE,GAAU,EAAI,KACd,GAAO,KAAa,GAAA,IAAA,GAFW,GAG/B,GAAO,KAAa,GAAA,GAAA,GAHW,GAI/B,GAAO,KAAa,GAAA,GAAA,GAJW,GAK/B,GAAO,KAAa,GAAA,GAAA,GALW,GAM/B,GAAO,KAAa,GAAA,EAAA,GANW,GAO/B,GAAO,KAAa,GAAA,EAAA,GAPW,GAQ/B,GAAO,KAAa,GAAA,EAAA,GARW,GAS/B,GAAO,KAAa,GAAA,EAAA,GATW,GAWjC,KAAO,GAAP,GAAiB,KACf,AAAI,KAAJ,GACE,IAAU,EAAI,KACd,GAFc,KAKhB,GAAO,KAAa,GAAA,GAAA,GANA,GAOpB,KAPoB,EAWxB,KAAO,EAAP,IACE,GAAO,KAD0B,EAInC,EAAA,aAAA,EAAA,EAAkC,EArCF,YAuCzB,EAAA,OAAiB,EAAA,UAArB,YAKL,IAFA,EAHgD,EAIhD,EAAmB,EAAA,EAJ6B,EAK3C,EAAL,EAAY,EAAZ,EAA4B,IAC1B,EAAA,IAAS,EAAA,SAAA,EAAqB,EADC,IAE/B,GAF+B,EAI/B,EAAA,aAAA,EAAA,EAJ+B,GAK/B,GAL+B,EAOjC,AAAI,EAAJ,GACE,GAAmB,EAAA,EADA,EAEnB,EAAA,IAAS,EAAA,SAAA,EAAqB,EAFX,IAGnB,EAAA,aAAA,EAAA,EAHmB,YAKZ,EAAA,OAAiB,EAAA,UAArB,UAIL,IAFA,GAF+C,EAG/C,EAAmB,EAH4B,GAI1C,EAAL,EAAY,EAAZ,EAA6B,KAO3B,IANA,AAAI,GAAJ,GACE,IADmB,EAEnB,EAAmB,EAFA,IAKrB,EANgC,EAO3B,EAAL,EAA2B,KACzB,EAAK,KAAa,EAAI,KACtB,EAAK,KAAa,EAAI,KACtB,EAAK,KAAa,EAAI,KACtB,EAAK,KAJ2B,IAMlC,EAAA,aAAA,EAAA,EAAkC,EAbF,OAgBlC,MAAM,IAAA,OAAU,mBAAmB,EAAnB,QAIpB,WAAA,EAAA,GAYE,OAXI,GAAS,EAAb,OACE,EAAQ,EAF8B,MAGpC,EAAqB,EAHe,EAIpC,EAAc,GAAD,GAJuB,EAKpC,EAAc,IAAA,EAAA,EAAwC,EALlB,EAOpC,EAAe,EAAA,gBAAA,EAPqB,GAQpC,EARoC,EASpC,EAAM,EAT8B,KAUpC,EAAO,EAV6B,KAY/B,EAAT,EAAgB,EAAhB,EAAiC,KAO/B,OANI,GACF,EAAA,EAAA,EAFkC,EAMhC,EANgC,EAO3B,GAAT,EAAgB,GAAhB,EAAqC,KAEnC,OADI,GADoC,EAE/B,GAAT,EAAgB,GAAhB,EAA2B,MACzB,GAAI,CAAJ,GACE,GAAI,IAAO,EAAI,KACf,EAFS,IAIX,EAAA,GAAgB,GAAA,EAAA,EALc,IAM9B,GAN8B,EAO9B,IAP8B,EAUlC,EAAA,aAAA,EAAA,EAAkC,EAnBE,IAuBxC,WAAA,EAAA,GAaE,OAZI,GAAa,CAAA,cAAA,YAAA,WAAA,cAAA,YAAA,UAAA,WAAA,aAAA,2BAAA,QAYR,EAAJ,EAAW,EAAK,EAArB,OAAwC,EAAxC,EAAgD,KAC9C,GAAI,GAAW,EADoC,GAEnD,AAAI,EAAA,KAAJ,QACE,GAAA,GAAoB,EADiB,IAIzC,AAAI,EAAA,cAAJ,QACE,GAAA,YAAoB,EADmB,eAEvC,EAAA,eAAyB,EAFc,gBAM3C,WAAA,GACE,EAAA,YAD8B,UAE9B,EAAA,UAF8B,UAG9B,EAAA,SAH8B,UAI9B,EAAA,YAJ8B,EAK9B,EAAA,UAL8B,EAM9B,EAAA,QAN8B,OAO9B,EAAA,SAP8B,QAQ9B,EAAA,WAR8B,GAS9B,EAAA,yBAT8B,cAU9B,EAAA,KAV8B,kBAW9B,AAAI,EAAA,cAAJ,QACE,GAAA,YADiC,IAEjC,EAAA,eAFiC,GAMrC,WAAA,EAAA,EAAA,EAAA,GAEE,OADI,GAAS,EADkC,OAEtC,EAAT,EAAgB,EAAhB,EAA4B,GAA5B,GACE,GAAI,GAAQ,EADsB,GAElC,GAAI,IAAJ,EACE,EAAM,EAAN,GADe,EAEf,EAAM,EAAN,GAFe,EAGf,EAAM,EAAN,GAHe,UAIN,EAAJ,KACL,GAAI,GAAS,IADS,EAEtB,EAAM,EAAN,GAAgB,EAAM,EAAN,GAAA,EAAuB,EAAxB,GAFO,EAGtB,EAAM,EAAN,GAAgB,EAAM,EAAN,GAAA,EAAuB,EAAxB,GAHO,EAItB,EAAM,EAAN,GAAgB,EAAM,EAAN,GAAA,EAAuB,EAAxB,GAJO,IAS5B,WAAA,EAAA,EAAA,GAGE,OAFI,GAAS,EAD8C,OAEvD,EAAQ,EAF+C,IAGlD,EAAT,EAAgB,EAAhB,EAA4B,GAA5B,GACE,GAAI,GAAQ,EAAc,EAAY,EAA1B,IAAyC,EADnB,GAElC,EAAA,GAAgB,EAAA,GAAA,EAAD,EAFmB,GAMtC,WAAA,EAAA,EAAA,GAEE,OADI,GAAS,EADmD,OAEvD,EAAT,EAAgB,EAAhB,EAA4B,GAA5B,GACE,GAAI,GACF,EAAS,EAAT,GAAA,GACA,EAAS,EAAT,GADA,IAEA,EAAS,EAAT,GAJgC,GAKlC,EAAA,GAAe,EACV,EAAA,GAAe,EAAY,GAA5B,IADW,EAEV,EAAA,GAAD,GAP8B,IAWtC,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GASE,GAAI,GAAc,CAAC,CADnB,EAEI,EAAK,EAAc,EAAd,GAFT,EAGI,EAAK,EAAc,EAAd,GAHT,EAII,EAAK,EAAc,EAAd,GAJT,EAAA,EAOA,AAAI,IAAJ,aACE,EAD4B,EAG5B,EADK,EAOP,OAFI,GAdJ,QAeI,EAAY,KAAA,IAAA,EAAiB,KAAA,KAAU,EAf3C,IAgBS,GAAT,EAAkB,GAAlB,EAAgC,IAAhC,GACE,GAAI,GAAc,KAAA,IAAA,EAAoB,EADU,IAE5C,GAAW,EAAA,aAAA,EAAA,GAAA,EAFiC,GAG5C,GAAY,EAAA,aAAA,EAAA,GAAA,EAHgC,GAKhD,AAAA,GACE,EAAqB,GAArB,KAAA,EAAA,EADe,GAGjB,EAAU,GAAV,KAAyB,GAAzB,KARgD,GAUhD,EAAA,aAAA,GAAA,EAVgD,KAcpD,WAAA,EAAA,EAAA,EAAA,GACE,GAAI,GAAO,EAD6C,OAEpD,EAAU,EAF0C,QAIxD,EAAA,aACE,EADF,OAAA,EAAA,EAIE,EAJF,OAKE,EALF,QAME,EAVsD,SAaxD,GAAI,GAAW,EAAA,UAbyC,KAcxD,GAAI,CAAC,EAAD,aAAsB,EAA1B,WACE,KAAM,GAAW,EAAA,aAA0B,CACzC,MAAO,EADkC,OAAA,OAGzC,WAAY,CACV,QAAS,EADC,QAAA,cAKd,EAAA,aAAA,EAAA,EAAA,EAAA,EAAA,EATgD,GAUhD,EAAA,UAAA,EAAwB,EAAxB,QAAuC,EAVS,SAAA,OAalD,EAAA,EAAA,EAGE,EAHF,MAIE,EAJF,OAKE,EALF,QAAA,EAOE,EAlCsD,aAoCxD,EAAA,UAAA,EAAA,EApCwD,GAuC1D,GAAI,GAAkB,CAAA,OAAA,QAAA,UAClB,EAAmB,CAAA,QAAA,QAAA,SACnB,EA1WiD,GA2WjD,EA3WiD,GA6WrD,EAAA,UAA2B,CACzB,aAAa,CAAA,YAAA,WAGX,eAHW,GAIX,aAJF,OAWE,GAAI,GAAQ,KAAA,IAAA,OANX,MAOG,EAAS,KAAA,IAAA,OAPZ,OAcD,GALA,KAAA,IATC,OAUD,KAAA,IAAA,UAAqB,GAVpB,qBAWD,KAAA,IAAA,SAAA,EAAA,EAAA,EAXC,GAYD,KAAA,IAZC,UAcD,GACE,GAAI,GAAoB,KAAA,eAAA,UAAA,cAAA,EAAA,EADR,IAOhB,KAAA,aAAoB,KAPJ,IAQhB,KAAA,kBAAyB,EART,OAShB,KAAA,IAAW,EATK,QAUhB,KAAA,IAVgB,OAahB,KAAA,IAAA,UAAA,MACE,KADF,IAEE,KAAA,aAfc,qBAmBlB,KAAA,IAjCC,OAkCD,EAAkB,KAlCjB,KAmCD,AAAA,GACE,KAAA,IAAA,UAAA,MAAyB,KAAzB,IADa,GAGf,KAAA,IAAA,UAAA,MAAyB,KAAzB,IAAmC,EAtClC,WAwCD,KAAA,cAAqB,KAAA,IAAA,oBAxCpB,QA0CD,AAAI,KAAJ,YACE,KAAA,WADmB,eAKvB,oBAAqB,SAAA,EAAA,EAAA,EAAA,GAMnB,GAAI,GAAY,EADhB,UAEI,EAAU,EAFd,QAGI,EAAI,GAHR,EAII,EAAe,EAJnB,OAOA,GAAI,IAAJ,EACE,MADsB,GAcxB,OAVI,GACF,EAAA,EAAA,GACA,MAAA,IAbF,WAcI,EAAU,EAAkB,KAAA,MAAlB,EAdd,EAeI,EAfJ,EAiBI,EAAa,KAjBjB,WAkBI,EAAO,KAlBX,KAAA,MAsBE,GAAI,IAAA,QAAyB,IAAM,EAAnC,eACE,SAAA,QAAA,EADyD,GAAA,EAO3D,GAFA,GAAO,EANI,GAQP,KAAS,EAAA,IAAb,WACE,KAAA,IAAA,MAAA,KAAuB,EADI,QAG3B,UAAA,KAAuB,GAAvB,IACE,KAAM,IAAW,EAAA,WAAA,MAAA,EADkB,EAKnC,GAAI,CAAC,GAAA,IAAL,GACE,UAAA,IAAA,EAD2B,GAAA,EAUjC,GAHA,IAGI,IAAJ,EACE,MADsB,GAMxB,GAAI,GAAmB,EAAA,EAAvB,GACE,GAAI,KAAA,MAAJ,EACE,WADwB,EAI1B,EALgD,KAatD,WAAY,WAEV,AAAI,KAAA,QAAA,cAAJ,MACE,KADqC,gBAIvC,KAAA,IAN+C,UAQ/C,AAAI,KAAJ,mBACE,MAAA,IAAW,KADe,aAE1B,KAAA,IAF0B,OAG1B,KAAA,IAAA,aAAA,EAAA,EAAA,EAAA,EAAA,EAH0B,GAI1B,KAAA,IAAA,UAAmB,KAAnB,kBAAA,EAJ0B,GAK1B,KAAA,IAL0B,UAM1B,KAAA,kBAN0B,MAS5B,KAAA,eAjB+C,QAkB/C,KAAA,aAlB+C,QAoB/C,AAAI,KAAJ,YACE,KAAA,WADmB,aAMvB,aAAc,SAAA,GACZ,KAAA,QAAA,UADwD,EAExD,KAAA,IAAA,UAFwD,GAI1D,WAAY,SAAA,GACV,KAAA,IAAA,QAAmB,EADiC,IAGtD,YAAa,SAAA,GACX,KAAA,IAAA,SAAoB,EADkC,IAGxD,cAAe,SAAA,GACb,KAAA,IAAA,WAD0D,GAG5D,QAAS,SAAA,EAAA,GACP,GAAI,GAAM,KADmD,IAE7D,AAAI,EAAA,cAAJ,QACE,GAAA,YADiC,GAEjC,EAAA,eAFiC,IAKrC,mBAAA,KAGA,YAAA,KAGA,UAAW,SAAA,GACT,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAoC,EAApC,EAA4C,KAC1C,GAAI,GAAQ,EADmC,GAE3C,EAAM,EAFqC,GAG3C,EAAQ,EAHmC,GAK/C,OAAA,OACE,KACE,KAAA,aADF,GADF,UAIE,KACE,KAAA,WADF,GAJF,UAOE,KACE,KAAA,YADF,GAPF,UAUE,KACE,KAAA,cADF,GAVF,UAaE,IACE,KAAA,QAAa,EAAb,GAAuB,EADzB,IAbF,UAgBE,KACE,KAAA,mBADF,GAhBF,UAmBE,KACE,KAAA,YADF,GAnBF,UAsBE,OACE,KAAA,QAAa,EAAb,GAAuB,EADzB,IAtBF,UAyBE,KACE,KAAA,QAAA,YAA2B,EAD7B,GAzBF,UA4BE,KACE,KAAA,QAAA,UAAyB,EAD3B,GAEE,KAAA,IAAA,YAAuB,EAFzB,GA5BF,UAgCE,KACE,KAAA,IAAA,yBADF,EAhCF,UAmCE,QACE,AAAI,KAAA,QAAJ,aAIE,CACE,KAAA,WAAA,OAAA,GACA,KAAA,WAAgB,KAAA,WAAA,OAAhB,GAAA,cACE,KAAA,QAHJ,YAKE,KADA,oBAGA,KADK,iBAIT,KAAA,QAAA,YAA2B,EAAQ,KAAR,UAf7B,KAgBE,AAAI,KAAA,QAAJ,aACE,KAD4B,kBAG9B,KAAA,UAnBF,KAnCF,SA2DJ,gBAAiB,WACf,GAAI,GAAc,KAAA,QADuC,YAErD,EAAa,EAAA,OAFwC,MAGrD,EAAc,EAAA,OAHuC,OAIrD,EAAU,eAAiB,KAJ0B,WAKrD,EAAgB,KAAA,eAAA,UAAA,EAAA,EAAA,EALqC,IAYrD,EAAa,KAZwC,IAarD,EAAmB,EAbkC,oBAczD,KAAA,IAdyD,OAgBzD,GAAI,GAAW,EAhB0C,QAiBzD,EAAA,MAAe,EAAI,EAAnB,OAAuC,EAAI,EAjBc,QAkBzD,EAAA,UAAmB,CAAC,EAApB,QAAyC,CAAC,EAlBe,SAmBzD,EAAA,UAAA,MAAA,EAnByD,GAqBzD,EAAA,sBAAoC,EArBqB,2BAuBzD,EAAA,EAvByD,GAwBzD,KAAA,IAxByD,EAyBzD,KAAA,UAAe,CACb,CAAA,KAAA,eACA,CAAA,KAAA,GACA,CAAA,KAAA,KAEF,KAAA,WAAA,KA9ByD,GA+BzD,KA/ByD,cAiC3D,kBAAmB,WAGjB,GAAI,GAAW,KAH0C,IAIzD,KAJyD,aAKzD,KAAA,IAAW,KAAA,WAL8C,MAOzD,EACE,KADF,IAEE,KAAA,QAFF,YAAA,EAIE,KAXuD,cAazD,KAAA,IAbyD,UAczD,KAAA,IAdyD,OAezD,EAAA,EAAuB,KAfkC,KAkBzD,KAAA,QAAA,eAlByD,EAqBzD,GAAI,GAAiB,EAAA,KAAA,UACnB,KAAA,QAAA,YADmB,sBAEnB,EAvBuD,qBAyBzD,KAAA,IAAA,UAAA,MAAyB,KAAzB,IAzByD,GA4BzD,EA5ByD,OA6BzD,EAAA,aAAA,EAAA,EAAA,EAAA,EAAA,EA7ByD,GA8BzD,EAAA,UAAA,EAAA,EAAyB,EAAA,OAAzB,MAAgD,EAAA,OA9BS,QA+BzD,EA/ByD,WAiC3D,iBAAkB,WAIhB,GAAI,GAAW,KAAA,QAJyC,eAKpD,EAAa,KALuC,IAMxD,KAAA,IANwD,EAOxD,KAAA,WAAA,KAPwD,GAQxD,KARwD,cAU1D,cAAe,WACb,GAAI,GAAW,KADsC,IAErD,KAFqD,aAGrD,KAAA,IAAW,KAAA,WAH0C,MAKrD,EACE,KADF,IAEE,KAAA,QAFF,YAAA,EAIE,KATmD,cAWrD,KAAA,IAXqD,UAYrD,EAAA,EAAuB,KAZ8B,KAerD,GAAI,GAAiB,EAAA,KAAA,UACnB,KAAA,QAAA,YADmB,sBAEnB,EAjBmD,qBAmBrD,KAAA,IAAA,UAAA,MAAyB,KAAzB,IAnBqD,IAqBvD,KAAM,WACJ,KAAA,IADmC,OAEnC,GAAI,GAAM,KAFyB,QAGnC,KAAA,WAAA,KAHmC,GAInC,KAAA,QAAe,EAJoB,QAKnC,KAAA,QAAA,eALmC,MAOrC,QAAS,WAEP,AAAI,KAAA,QAAJ,gBACE,KAD+B,mBAKjC,AACE,KAAA,QAAA,cAAA,MACC,MAAA,WAAA,SAAA,GACC,KAAA,WAAgB,KAAA,WAAA,OAAhB,GAAA,cACE,KAAA,QAJN,cAME,KADA,gBAIF,AAAI,KAAA,WAAA,SAAJ,GACE,MAAA,QAAe,KAAA,WADiB,MAEhC,KAAA,IAFgC,UAKhC,KAAA,YALgC,KAOhC,KAAA,2BAPgC,OAUpC,UAAW,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACT,KAAA,IAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAD6D,GAG7D,KAAA,2BAH6D,MAO/D,cAAe,SAAA,EAAA,GAKb,OAJI,GAAM,KADoD,IAE1D,EAAU,KAFgD,QAG1D,EAAI,EAAR,EACE,EAAI,EAJwD,EAKrD,EAAJ,EAAW,EAAX,EAAkB,EAAK,EAA5B,OAAwC,EAAxC,EAAgD,IAC9C,OAAQ,EAAA,GAAR,OACO,GAAA,IAAL,UACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,GAAI,GAAQ,EAAK,KACb,EAAS,EAAK,KAClB,AAAI,IAAJ,GACE,GAAQ,KADO,uBAGjB,AAAI,IAAJ,GACE,GAAS,KADO,uBAGlB,GAAI,GAAK,EAXX,EAYM,EAAK,EAZX,EAaE,KAAA,IAAA,OAAA,EAbF,GAcE,KAAA,IAAA,OAAA,EAdF,GAeE,KAAA,IAAA,OAAA,EAfF,GAgBE,KAAA,IAAA,OAAA,EAhBF,GAiBE,KAAA,IAAA,OAAA,EAjBF,GAkBE,KAAA,IAlBF,YADF,UAqBO,GAAA,IAAL,OACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,EAAA,OAAA,EAHF,GArBF,UA0BO,GAAA,IAAL,OACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,EAAA,OAAA,EAHF,GA1BF,UA+BO,GAAA,IAAL,QACE,EAAI,EAAK,EADX,GAEE,EAAI,EAAK,EAFX,GAGE,EAAA,cACE,EADF,GAEE,EAAK,EAFP,GAGE,EAAK,EAHP,GAIE,EAAK,EAJP,GAAA,EAHF,GAWE,GAXF,EA/BF,UA4CO,GAAA,IAAL,SACE,EAAA,cAAA,EAAA,EAGE,EAHF,GAIE,EAAK,EAJP,GAKE,EAAK,EALP,GAME,EAAK,EAPT,IASE,EAAI,EAAK,EATX,GAUE,EAAI,EAAK,EAVX,GAWE,GAXF,EA5CF,UAyDO,GAAA,IAAL,SACE,EAAI,EAAK,EADX,GAEE,EAAI,EAAK,EAFX,GAGE,EAAA,cAAkB,EAAlB,GAA2B,EAAK,EAAhC,GAAA,EAAA,EAAA,EAHF,GAIE,GAJF,EAzDF,UA+DO,GAAA,IAAL,UACE,EADF,YA/DF,MAoEF,EAAA,gBAAA,EA1E8D,IA4EhE,UAAW,WACT,KAAA,IAD6C,aAG/C,OAAQ,SAAA,GACN,EAAc,MAAA,IAAA,YAAA,EADoC,GAElD,GAAI,GAAM,KAFwC,IAG9C,EAAc,KAAA,QAHgC,YAOlD,GADA,EAAA,YAAkB,KAAA,QANgC,YAQhD,GACA,EAAA,eADA,SAEA,EAAA,OAHF,WAOE,EAHA,OAQA,KAAM,GAAY,EARlB,oBASM,EAAQ,EAAA,KAAA,8BAAA,GATd,GAUA,EAAA,YAAkB,EAAA,WAAA,EAVlB,MAWA,EAAA,UAAgB,KAAA,IACd,KAAA,sBADc,EAEd,KAAA,QAAA,UAbF,GAeA,EAfA,SAgBA,EAhBA,cAmBA,GAAA,UAAgB,KAAA,IACd,KAAA,sBADc,EAEd,KAAA,QAJG,WAML,EANK,SAQP,AAAA,GACE,KADe,cAIjB,EAAA,YAAkB,KAAA,QAxCgC,WA0CpD,YAAa,WACX,KADiD,YAEjD,KAFiD,UAInD,KAAM,SAAA,GACJ,EAAc,MAAA,IAAA,YAAA,EADgC,GAE9C,GAAI,GAAM,KAFoC,IAG1C,EAAY,KAAA,QAH8B,UAI1C,EAAgB,KAAA,QAJ0B,YAK1C,EAL0C,GAO9C,AAAA,GACE,GADiB,OAEjB,AAAI,KAAJ,eACE,EAAA,aAAA,MAAA,EAA4B,KADN,eAGxB,EAAA,UAAgB,EAAA,WAAA,EALC,MAMjB,EANiB,IASnB,AAAI,KAAJ,cACE,GAAA,KADsB,WAEtB,KAAA,cAFsB,IAItB,EADK,OAIP,AAAA,GACE,EADe,UAGjB,AAAA,GACE,KADe,eAInB,OAAQ,WACN,KAAA,cADuC,GAEvC,KAFuC,QAIzC,WAAY,WACV,KAAA,KAD+C,IAE/C,KAAA,OAF+C,IAI/C,KAJ+C,eAMjD,aAAc,WACZ,KAAA,cADmD,GAEnD,KAFmD,cAIrD,gBAAiB,WACf,KADyD,YAEzD,KAFyD,cAI3D,kBAAmB,WACjB,KAAA,cAD6D,GAE7D,KAF6D,YAG7D,KAH6D,cAK/D,QAAS,WACP,KADyC,eAK3C,KAAM,WACJ,KAAA,YADmC,GAGrC,OAAQ,WACN,KAAA,YADuC,GAKzC,UAAW,WACT,KAAA,QAAA,WAD6C,EAAA,gBAE7C,KAAA,QAAA,gBAF6C,EAG7C,KAAA,QAAA,EAAiB,KAAA,QAAA,MAH4B,EAI7C,KAAA,QAAA,EAAiB,KAAA,QAAA,MAJ4B,GAM/C,QAAS,WACP,GAAI,GAAQ,KAD6B,iBAErC,EAAM,KAF+B,IAGzC,GAAI,IAAJ,QACE,EADuB,YAAA,OAKzB,EARyC,OASzC,EATyC,YAUzC,OAAS,GAAT,EAAgB,EAAI,EAApB,OAAkC,KAChC,GAAI,GAAO,EAD0B,GAErC,EAAA,aAAA,MAAA,EAA4B,EAFS,WAGrC,EAAA,UAAc,EAAd,EAAsB,EAHe,GAIrC,EAAA,UAAA,EAAoB,EAJiB,UAMvC,EAhByC,UAiBzC,EAjByC,OAkBzC,EAlByC,YAmBzC,MAAO,MAnBkC,kBAqB3C,eAAgB,SAAA,GACd,KAAA,QAAA,YAD8D,GAGhE,eAAgB,SAAA,GACd,KAAA,QAAA,YAD8D,GAGhE,UAAW,SAAA,GACT,KAAA,QAAA,WAA0B,EADwB,KAGpD,WAAY,SAAA,GACV,KAAA,QAAA,QAAuB,CAD+B,GAGxD,QAAS,SAAA,EAAA,GACP,GAAI,GAAU,KAAA,WAAA,IAD4C,GAEtD,EAAU,KAF4C,QAI1D,GAAI,CAAJ,EACE,KAAM,IAAA,OAAU,uBAAA,KAyBlB,GAtBA,EAAA,WAAqB,EAAA,WACjB,EADiB,WARqC,EAAA,qBAc1D,AAAI,GAAA,WAAA,KAAA,GAA+B,EAAA,WAAA,KAAnC,IACE,GAAA,EAAA,MAAK,gCADyD,GAMhE,AAAI,EAAJ,EACE,GAAO,CADK,EAEZ,EAAA,cAAwB,IAExB,EAAA,cADK,EAIP,KAAA,QAAA,KA3B0D,EA4B1D,KAAA,QAAA,SA5B0D,EA8BtD,EAAJ,YAAyB,OAIzB,GAAI,GAAO,EAAA,YAlC+C,aAoC1D,GAAI,GApCsD,SAqC1D,AAAI,EAAJ,MACE,EADiB,MAEZ,AAAI,EAAJ,MACL,GADuB,QAGzB,GAAI,GAAS,EAAA,OAAA,SA1C6C,SA2CtD,EAAW,IAAA,OAAc,EAAd,eAMf,GAAI,GAjDsD,EAkD1D,AAAI,EAAJ,EACE,EADwB,EAEnB,AAAI,EAAJ,GACL,GAD+B,GAGjC,KAAA,QAAA,cAA6B,EAvD6B,EAyD1D,KAAA,IAAA,KAAgB,GAAA,KAAA,KAAA,OAAA,KAElB,qBAAsB,SAAA,GACpB,KAAA,QAAA,kBADuE,GAGzE,YAAa,SAAA,GACX,KAAA,QAAA,SADqD,GAGvD,SAAU,SAAA,EAAA,GACR,KAAA,QAAA,EAAiB,KAAA,QAAA,OAD8B,EAE/C,KAAA,QAAA,EAAiB,KAAA,QAAA,OAF8B,GAIjD,mBAAoB,SAAA,EAAA,GAClB,KAAA,WAAgB,CADmD,GAEnE,KAAA,SAAA,EAFmE,IAIrE,cAAe,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACb,KAAA,QAAA,WAA0B,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAC1B,KAAA,QAAA,gBAA+B,KAAA,KAAU,EAAA,EAAQ,EAFoB,GAIrE,KAAA,QAAA,EAAiB,KAAA,QAAA,MAJoD,EAKrE,KAAA,QAAA,EAAiB,KAAA,QAAA,MALoD,GAOvE,SAAU,WACR,KAAA,SAAA,EAAiB,KAAA,QAD0B,UAI7C,UAAA,EAAA,EAAA,EAAA,GACE,GAAI,GAAM,KADiC,IAEvC,EAAU,KAF6B,QAGvC,EAAO,EAHgC,KAIvC,EAAoB,EAJmB,kBAKvC,EAAW,EAAA,SAAmB,EALS,cAMvC,EACF,EAAoB,EAAA,kBAPqB,iBAQvC,EAAiB,CAAC,CACpB,GAAoB,EAAA,kBATqB,kBAW3C,KAAM,GAAc,EAAA,aAAuB,CAAC,EAXD,YAa3C,GAb2C,GAsD3C,GAxCA,AAAI,GAAA,iBAAA,GAAJ,IACE,GAAY,EAAA,iBAAsB,KAAtB,WAD6C,IAI3D,AAAI,EAAA,iBAAJ,EACE,GADuC,OAEvC,EAAA,UAAA,EAFuC,GAGvC,EAHuC,YAIvC,EAAA,EAJuC,GAKvC,AAAA,GACE,EAAA,aAAA,MAAA,EADoB,GAGtB,AACE,KAAmB,EAAA,kBAAnB,MACA,IAAmB,EAAA,kBAFrB,cAIE,EADA,OAGF,AACE,KAAmB,EAAA,kBAAnB,QACA,IAAmB,EAAA,kBAFrB,cAIE,EADA,SAGF,EApBuC,WAsBvC,CACE,KAAmB,EAAA,kBAAnB,MACA,IAAmB,EAAA,kBAFrB,cAIE,EAAA,SAAA,EAAA,EADA,GAGF,AACE,KAAmB,EAAA,kBAAnB,QACA,IAAmB,EAAA,kBAFrB,cAIE,EAAA,WAAA,EAAA,EADA,IAKJ,GACE,GAAI,GAAQ,KAAA,kBAA0B,MAAA,iBADpB,IAElB,EAAA,KAAW,CACT,UAAW,EADF,oBAAA,IAAA,IAAA,WAAA,mBAUf,2BAGE,KAAM,CAAE,QAAF,GAAmB,KAAA,eAAA,UAAA,0BAAA,GAHG,IAQ5B,EAAA,MAAA,IAR4B,GAS5B,EAAA,SAAA,IAAA,EAT4B,IAY5B,OAFI,GAAO,EAAA,aAAA,EAAA,EAAA,GAAA,IAViB,KAWxB,EAXwB,GAYnB,EAAT,EAAgB,EAAI,EAApB,OAAiC,GAAjC,EACE,GAAI,EAAA,GAAA,GAAe,EAAA,GAAnB,KACE,EADgC,GAAA,MAKpC,MAAO,GAAA,EAAA,QAAA,KAAA,0BAlBqB,IAqB9B,SAAU,SAAA,GACR,GAAI,GAAU,KADmC,QAE7C,EAAO,EAFsC,KAGjD,GAAI,EAAJ,YACE,MAAO,MAAA,cADa,GAItB,GAAI,GAAW,EAPkC,SAQjD,GAAI,IAAJ,EACE,OAGF,GAAI,GAAM,KAZuC,IAa7C,EAAgB,EAb6B,cAc7C,EAAc,EAd+B,YAe7C,EAAc,EAf+B,YAgB7C,EAAgB,EAhB6B,cAiB7C,EAAa,EAAA,WAjBgC,EAkB7C,EAAe,EAlB8B,OAmB7C,EAAW,EAnBkC,SAoB7C,EAAa,EAAA,EAAe,GAC5B,GAAkB,EArB2B,gBAsB7C,EAAoB,EAAW,EAAA,WAtBc,GAwB7C,GACF,EAAA,oBAA8B,EAAA,kBAA9B,MACA,CAAC,EADD,iBAEA,CAAC,EA3B8C,YA6BjD,EA7BiD,OA8BjD,GA9BiD,IA+BjD,GAAI,EAAJ,aAGE,EAHuB,OAIvB,KAAM,IAAU,EAAA,UAAA,WAAA,EAJO,MAKvB,GAAmB,EALI,oBAMvB,EANuB,UAOvB,EAAA,UAPuB,GASzB,EAAA,UAAA,MAAA,EAAyB,EAxCwB,YAyCjD,EAAA,UAAc,EAAd,EAAyB,EAAA,EAAY,EAzCY,UA2CjD,AAAI,EAAJ,EACE,EAAA,MAAA,EAAsB,IAEtB,EAAA,MAAA,EADK,GAIP,GAAI,IAAY,EAjDiC,UAkD7C,GAAQ,EAlDqC,gBAmDjD,GAAI,KAAA,GAAe,KAAnB,GACE,GAAI,IACF,EAAA,kBAA4B,EAAA,kBAFI,iBAGlC,AACE,MAAmB,EAAA,kBAAnB,QACA,KAAmB,EAAA,kBAFrB,cAIE,MAAA,2BADA,KAEA,GAAY,KAAA,sBAFZ,OAKF,KADK,GAIP,AAAI,IAAJ,GACE,GAAA,MAAA,EADyB,GAEzB,IAFyB,GAK3B,EAAA,UAtEiD,GAwEjD,GAAI,IAAJ,EAxEiD,GA0EjD,IAAK,GAAL,EAAY,GAAZ,EAA8B,EAA9B,IACE,GAAI,IAAQ,EADqB,IAEjC,GAAI,GAAA,EAAA,OAAJ,KACE,IAAM,EAAA,GAAD,EADW,IAAA,SAKlB,GAAI,IAP6B,GAQ7B,GAAW,IAAA,QAAA,EAAD,GARmB,EAS7B,GAAY,GATiB,SAU7B,GAAS,GAVoB,OAWjC,GAAA,GAAA,GAXiC,GAY7B,EAAQ,GAZqB,MAajC,GAAA,GACE,GAAA,GAAA,EADY,EAEZ,EAAU,GAAA,SAFE,GAGZ,EAAK,GAAA,QAAgB,EAAhB,GAA6B,EAHtB,GAIZ,EAAK,CAAA,EAJO,EAKZ,EAAK,EAAA,GALO,EAOZ,EAAQ,EAAU,CAAC,EAAX,GAPI,EAQZ,GAAU,EARE,EASZ,GAAW,IAAD,GATE,MAWZ,IAAU,GADL,EAEL,GAFK,EAKP,GAAI,EAAA,WAAkB,EAAtB,GAIE,GAAI,IACA,EAAA,YAAA,IAAA,MAAD,IAAD,EAL6B,EAO/B,GAAI,EAAA,IAAyB,KAA7B,yBACE,GAAI,IAAkB,EADmC,GAEzD,GAFyD,GAGzD,EAHyD,OAIzD,EAAA,MAAA,GAJyD,GAKzD,IALyD,OAMpD,AAAI,KAAJ,IACL,KACK,GAAD,IAAD,IAAD,EAFgC,GAQtC,AAAI,IAAA,UAAkB,EAAtB,cACE,CAAI,IAAkB,CAAtB,GAEE,EAAA,SAAA,GAAA,GAF6B,IAI7B,MAAA,UAAA,GAAA,GAAA,GADK,IAEL,AAAA,IACE,IAAgB,GAAU,GAAA,OAAA,EADhB,EAEV,GAAgB,GAAU,GAAA,OAAA,EAFhB,EAGV,KAAA,UACE,GADF,SAAA,GAAA,GAHU,OAahB,GApEiC,IAqEjC,AAAA,EACE,GAAY,EAAA,EAA4B,GAD5B,EAGZ,GAAY,EAAA,EAA4B,GADnC,EAGP,IA1EiC,GA4EjC,AAAA,IACE,EADiB,UAIrB,AAAA,EACE,EAAA,GADY,GAGZ,EAAA,GAAa,GADR,EAGP,EA/JiD,WAkKnD,cAAe,SAAA,GAEb,GAAI,GAAM,KAFiD,IAGvD,EAAU,KAH6C,QAIvD,EAAO,EAJgD,KAKvD,EAAW,EAL4C,SAMvD,EAAgB,EANuC,cAOvD,EAAa,EAAA,SAAA,EAAoB,GACjC,EAAc,EARyC,YASvD,EAAc,EATyC,YAUvD,EAAa,EAAA,WAV0C,EAWvD,EAAa,EAAA,YAX0C,EAAA,qBAYvD,EAAe,EAZwC,OAavD,EACF,EAAA,oBAA8B,EAAA,kBAd2B,UAe3D,GAAA,EAAA,GAf2D,GAiB3D,GAAI,GAAmB,IAAvB,EAAuC,OAWvC,IARA,KAAA,2BApB2D,KAsB3D,EAtB2D,OAuB3D,EAAA,UAAA,MAAA,EAAyB,EAvBkC,YAwB3D,EAAA,UAAc,EAAd,EAAyB,EAxBkC,GA0B3D,EAAA,MAAA,EA1B2D,GA4BtD,GAAL,EAAY,GAAZ,EAA8B,EAA9B,IAEE,GADA,EAAQ,EADyB,IAE7B,GAAA,EAAA,OAAJ,IACE,GAAiB,EAAA,EAAD,EADA,IAEhB,KAAA,IAAA,UAAA,GAFgB,GAGhB,EAAA,GAAa,GAHG,EAAA,SAOlB,GAAI,IAAW,GAAA,QAAA,EAAD,GATmB,EAU7B,GAAe,EAAA,qBAA0B,EAVZ,gBAWjC,GAAI,CAAJ,IACE,AAAA,GAAA,EAAA,MAAK,oBAAoB,EAApB,qCADY,SAInB,KAAA,gBAfiC,EAgBjC,KAhBiC,OAiBjC,EAAA,MAAA,EAjBiC,GAkBjC,EAAA,UAAA,MAAA,EAlBiC,GAmBjC,KAAA,oBAnBiC,IAoBjC,KApBiC,UAsBjC,GAAI,IAAc,EAAA,KAAA,eAAoB,CAAC,EAAD,MAAA,GAtBL,GAuBjC,GAAQ,GAAA,GAAA,EAvByB,GAyBjC,EAAA,UAAA,GAzBiC,GA0BjC,EAAA,GAAa,GA1BoB,EA4BnC,EAxD2D,UAyD3D,KAAA,gBAzD2D,MA6D7D,aAAc,SAAA,EAAA,KAId,sBAAuB,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAUrB,KAAA,IAAA,KAAA,EAAA,EAAwB,EAAxB,EAAmC,EAHnC,GAIA,KAJA,OAKA,KALA,WASF,kBAAmB,SAAA,GACjB,GAD+D,GAE/D,GAAI,EAAA,KAAJ,iBACE,GAAI,GAAQ,EADiB,GAEzB,EACF,KAAA,eAAsB,KAAA,IAAA,oBAHK,QAIzB,EAAwB,CAC1B,qBAAsB,GACb,GAAA,GAAA,EAEL,KAFK,WAGL,KAHK,KAIL,KAJK,cAKL,KANyB,eAU/B,EAAU,GAAA,GAAA,cAAA,EAAA,EAGR,KAHQ,IAAA,EAfmB,OAuB7B,GAAU,GAAA,EAAA,yBADL,GAGP,MA3B+D,IA6BjE,gBAAiB,WACf,KAAA,QAAA,YAA2B,KAAA,kBAD8B,YAG3D,cAAe,WACb,KAAA,QAAA,UAAyB,KAAA,kBAD4B,WAErD,KAAA,QAAA,YAFqD,IAIvD,kBAAmB,SAAA,EAAA,EAAA,GACjB,GAAI,GAAQ,EAAA,KAAA,WAAA,EAAA,EADwD,GAEpE,KAAA,IAAA,YAFoE,EAGpE,KAAA,QAAA,YAHoE,GAKtE,gBAAiB,SAAA,EAAA,EAAA,GACf,GAAI,GAAQ,EAAA,KAAA,WAAA,EAAA,EADoD,GAEhE,KAAA,IAAA,UAFgE,EAGhE,KAAA,QAAA,UAHgE,EAIhE,KAAA,QAAA,YAJgE,IAOlE,YAAa,SAAA,GACX,GAAI,GAAM,KADgD,IAG1D,KAH0D,OAI1D,GAAI,GAAU,GAAA,EAAA,yBAJ4C,GAK1D,EAAA,UAAgB,EAAA,WAAA,EAAA,KAL0C,IAO1D,GAAI,GAAM,EAPgD,2BAQ1D,GAAA,GACE,GAAI,GAAS,EADN,OAEH,EAAQ,EAFL,MAGH,EAAS,EAHN,OAKH,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GALtB,GAMH,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GANtB,GAOH,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GAPtB,GAQH,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GARtB,GAUH,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAVhC,IAWH,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAXhC,IAYH,GAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAZhC,IAaH,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAbhC,IAeP,KAAA,IAAA,SAAA,EAAA,EAA0B,GAA1B,EAAmC,EAf5B,OAuBP,MAAA,IAAA,SAAkB,MAAO,MAAzB,KAPK,MAUP,KAlC0D,WAsC5D,iBAAkB,WAChB,AAAA,GAAA,EAAA,aAD2D,qCAG7D,eAAgB,WACd,AAAA,GAAA,EAAA,aADuD,mCAIzD,sBAAuB,SAAA,EAAA,GAarB,GATA,KADA,OAEA,KAAA,mBAAA,KAA6B,KAF7B,eAIA,AAAI,MAAA,QAAA,IAAyB,EAAA,SAA7B,GACE,KAAA,UAAA,MAAA,KADgD,GAIlD,KAAA,cAAqB,KAAA,IARrB,oBAUA,GACE,GAAI,GAAQ,EAAA,GAAU,EADd,GAEJ,EAAS,EAAA,GAAU,EAFf,GAGR,KAAA,IAAA,KAAc,EAAd,GAAuB,EAAvB,GAAA,EAHQ,GAIR,KAJQ,OAKR,KALQ,YASZ,oBAAqB,WACnB,KADiE,UAEjE,KAAA,cAAqB,KAAA,mBAF4C,OAKnE,WAAY,SAAA,GACV,KADoD,OAEpD,GAAI,GAAa,KAFmC,IAgBpD,AAAK,EAAL,UACE,GAAA,EAAA,MADmB,sCAMrB,AAAI,EAAJ,UACE,GAAA,EAAA,MADkB,kCAIpB,GAAI,GAAmB,EA1B6B,oBA8BpD,GAHA,AAAI,EAAJ,QACE,EAAA,UAAA,MAAA,EAAuC,EADvB,QAGd,CAAC,EAAL,KACE,KAAM,IAAA,OADS,6BAMjB,GAAI,GAAS,EAAA,KAAA,2BACX,EADW,KAEX,EAtCkD,qBAyChD,EAAe,CAAA,EAAA,EAGjB,EAAA,OAHiB,MAIjB,EAAA,OAJiB,QAMnB,EAAS,EAAA,KAAA,UAAA,EAAA,IAAwC,CAAA,EAAA,EAAA,EAAA,GAGjD,GAAI,GAAU,KAAA,MAAW,EAlD2B,IAmDhD,EAAU,KAAA,MAAW,EAnD2B,IAoDhD,EAAa,KAAA,IAAS,KAAA,KAAU,EAAV,IAAT,EApDmC,GAqDhD,EAAc,KAAA,IAAS,KAAA,KAAU,EAAV,IAAT,EArDkC,GAsDhD,EAAJ,EACE,EAvDkD,EAwDpD,AAAI,EAAJ,GACE,GAAS,EADsB,EAE/B,EAF+B,GAIjC,AAAI,EAAJ,GACE,GAAS,EADuB,EAEhC,EAFgC,GAKlC,GAAI,GAAU,UAAY,KAjE0B,WAkEpD,AAAI,EAAJ,OAEE,IAAW,UAAa,KAAA,eAFT,GAIjB,GAAI,GAAgB,KAAA,eAAA,UAAA,EAAA,EAAA,EAtEgC,IA4EhD,GAAW,EA5EqC,QAgFpD,GAAA,MAAe,EAAf,EAA2B,EAhFyB,GAiFpD,GAAA,UAAmB,CAAnB,EAA6B,CAjFuB,GAkFpD,GAAA,UAAA,MAAA,GAlFoD,GAoFpD,AAAI,EAAJ,MAEE,KAAA,WAAA,KAAqB,CACnB,OAAQ,EADW,OAEnB,QAFmB,GAAA,UAAA,UAAA,SAAA,SAOnB,QAAS,EAAA,MAPU,QAQnB,SAAU,EAAA,MARS,SASnB,YAAa,EAAA,MAAA,aATM,KAUnB,sBAVmB,OAerB,GAAA,aAAA,EAAA,EAAA,EAAA,EAAA,EAHK,GAIL,EAAA,UAAA,EAJK,GAKL,EAAA,MAAA,EALK,IASP,EAAA,EA3GoD,IA4GpD,KAAA,IA5GoD,GA6GpD,KAAA,UAAe,CACb,CAAA,KAAA,eACA,CAAA,KAAA,GACA,CAAA,KAAA,KAEF,KAAA,WAAA,KAlHoD,GAmHpD,KAnHoD,aAsHpD,KAAA,QAAA,YAtHoD,MAyHtD,SAAU,SAAA,GACR,KADgD,aAEhD,GAAI,GAAW,KAFiC,IAGhD,KAAA,IAAW,KAAA,WAHqC,MAMhD,AAAI,KAAA,IAAA,wBAAJ,OACE,KAAA,IAAA,sBADgD,GAGhD,KAAA,IAAA,yBADK,GAGP,AAAI,EAAJ,MACE,KAAA,UAAiB,KAAA,WADF,MAGf,KAAA,IAAA,UAAmB,EAAnB,OAAA,EADK,GAGP,KAhBgD,WAmBlD,iBAAkB,WAChB,KAD2D,OAE3D,AAAI,KAAJ,eACE,KAAA,IAAA,aAAA,MAA4B,KAA5B,IAAsC,KADhB,gBAK1B,eAAgB,WACd,KADuD,WAIzD,gBAAiB,SAAA,EAAA,EAAA,GASf,GAJA,KADA,OAEA,EAAkB,KAFlB,KAGA,KAAA,QAAe,GAHf,GAKI,MAAA,QAAA,IAAuB,EAAA,SAA3B,GACE,GAAI,GAAQ,EAAA,GAAU,EADsB,GAExC,EAAS,EAAA,GAAU,EAFqB,GAG5C,KAAA,IAAA,KAAc,EAAd,GAAuB,EAAvB,GAAA,EAH4C,GAI5C,KAJ4C,OAK5C,KAL4C,UAQ9C,KAAA,UAAA,MAAA,KAbA,GAcA,KAAA,UAAA,MAAA,KAdA,IAiBF,cAAe,WACb,KADqD,WAIvD,sBAAuB,SAAA,GACrB,GAAI,GAAM,KAD8D,IAEpE,EAAQ,EAAZ,MACE,EAAS,EAH6D,OAIpE,EAAY,KAAA,QAJwD,UAKpE,EAAgB,KAAA,QALoD,YAOpE,EAAQ,KAP4D,gBAiBxE,GARA,AAAI,GAAA,GAAiC,EAAA,WAArC,QACE,CAAI,GAAA,GAAgC,GAApC,EACE,EAAA,SAAiB,EAAkB,CAAE,KAAM,EAAR,KAAA,QAAA,WAEnC,EAAA,SADK,MAKL,GAAS,EAAb,UACE,EAAA,SAD2B,GAAA,OAK7B,GAAI,GAAa,KAAA,eAAA,UAAA,aAAA,EAtBuD,GA2BpE,EAAU,EA3B0D,QA4BxE,EA5BwE,OA8BxE,EAAA,EA9BwE,GAgCxE,EAAA,yBAhCwE,YAkCxE,EAAA,UAAoB,EAChB,EAAA,WAAA,EADgB,MAlCoD,EAqCxE,EAAA,SAAA,EAAA,EAAA,EArCwE,GAuCxE,EAvCwE,UAyCxE,KAAA,wBAA6B,EAzC2C,SA4C1E,4BAA6B,SAAA,EAAA,EAAA,EAAA,GAM3B,GAAI,GAAQ,EADZ,MAEI,EAAS,EAFb,OAGI,EAAY,KAAA,QAHhB,UAII,EAAgB,KAAA,QAJpB,YAMI,EAAa,KAAA,eAAA,UAAA,aAAA,EANjB,GAWI,EAAU,EAXd,QAYA,EAZA,OAcA,EAAA,EAdA,GAgBA,EAAA,yBAhBA,YAkBA,EAAA,UAAoB,EAChB,EAAA,WAAA,EADgB,MAlBpB,EAqBA,EAAA,SAAA,EAAA,EAAA,EArBA,GAuBA,EAvBA,UA0BA,OADI,GAAM,KAzBV,IA0BS,EAAJ,EAAW,EAAK,EAArB,OAAuC,EAAvC,EAA+C,GAA/C,EACE,EADqD,OAErD,EAAA,UAAA,EAAA,EAAA,EAAA,EAAoC,EAApC,GAAkD,EAAU,EAFP,IAGrD,EAAA,MAAA,EAAa,IACb,EAAA,UAAc,EAAd,OAAA,EAAA,EAAA,EAAA,EAAA,EAAyD,GAAzD,EAJqD,GAKrD,EALqD,WASzD,2BAA4B,SAAA,GAO1B,OAJI,GAAM,KADV,IAGI,EAAY,KAAA,QAHhB,UAII,EAAgB,KAAA,QAJpB,YAKS,EAAJ,EAAW,EAAK,EAArB,OAAoC,EAApC,EAA4C,KAC1C,GAAI,GAAQ,EADmC,GAE3C,EAAQ,EAAZ,MACE,EAAS,EAHoC,OAK3C,EAAa,KAAA,eAAA,UAAA,aAAA,EAL8B,GAU3C,EAAU,EAViC,QAW/C,EAX+C,OAa/C,EAAA,EAb+C,GAe/C,EAAA,yBAf+C,YAiB/C,EAAA,UAAoB,EAChB,EAAA,WAAA,EADgB,MAjB2B,EAoB/C,EAAA,SAAA,EAAA,EAAA,EApB+C,GAsB/C,EAtB+C,UAwB/C,EAxB+C,OAyB/C,EAAA,UAAA,MAAA,EAAyB,EAzBsB,WA0B/C,EAAA,MAAA,EAAa,IACb,EAAA,UAAc,EAAd,OAAA,EAAA,EAAA,EAAA,EAAA,EAAyD,GAAzD,EA3B+C,GA4B/C,EA5B+C,YAgCnD,kBAAmB,SAAA,GACjB,KAAM,GAAU,EAAA,WAAA,MACZ,KAAA,WAAA,IADY,GAEZ,KAAA,KAAA,IAH8D,GAIlE,GAAI,CAAJ,GACE,AAAA,GAAA,EAAA,MADY,mCAAA,OAKd,KAAA,wBATkE,IAYpE,wBAAyB,SAAA,EAAA,EAAA,EAAA,GAMvB,KAAM,GAAU,EAAA,WAAA,MACZ,KAAA,WAAA,IADY,GAEZ,KAAA,KAAA,IAHJ,GAIA,GAAI,CAAJ,GACE,AAAA,GAAA,EAAA,MADY,mCAAA,OAQd,OAHI,GAAQ,EATZ,MAUI,EAAS,EAVb,OAWI,EAXJ,GAYS,EAAJ,EAAW,EAAK,EAArB,OAAuC,EAAvC,EAA+C,GAA/C,EACE,EAAA,KAAS,CACP,UAAW,CAAA,EAAA,EAAA,EAAA,EAAuB,EAAvB,GAAqC,EAAU,EAA/C,IACX,EAFO,EAGP,EAHO,EAIP,EAJO,EAKP,EALO,IAQX,KAAA,6BAAA,EArBA,IAwBF,wBAAyB,SAAA,GAGvB,GAAI,GAAQ,EADZ,MAEI,EAAS,EAFb,OAGI,EAAM,KAHV,IAKA,KALA,OAOA,EAAA,MAAU,EAAV,EAAqB,GAPrB,GASA,GAAI,GAAmB,EATvB,2BAUI,EAAI,EAAR,GACE,EAAI,EAXN,GAYI,EAAa,KAAA,IAAS,KAAA,KAAU,EAAA,EAAQ,EAA3B,GAZjB,GAaI,EAAI,EAAR,GACE,EAAI,EAdN,GAeI,EAAc,KAAA,IAAS,KAAA,KAAU,EAAA,EAAQ,EAA3B,GAflB,GAiBA,EAjBA,EAmBA,GACG,MAAA,cAAA,YAAqC,YAAtC,cACA,CAAC,EAFH,KAIE,EADA,OAGA,EAAY,KAAA,eAAA,UAAA,cAAA,EADP,GAEL,GAAI,IAAS,EAFR,QAGL,EAAA,GAHK,GAIL,EAAa,EAJR,OAaP,OANI,GAAJ,EACE,GAhCF,EAiCI,GAjCJ,YAsCG,EAAA,GAAkB,EAAnB,GACC,EAAA,GAAmB,GAFtB,IAIE,GAAI,IAAJ,EACE,GAFF,GAGA,AAAI,EAAA,GAAkB,EAAtB,GACE,IAAW,KAAA,KAAU,EADe,GAEpC,GAAc,EAFsB,IAItC,AAAI,EAAA,GAAmB,GAAvB,GACE,IAAY,KAAA,KAAU,GADgB,GAEtC,GAAe,GAFuB,IAIxC,EAAY,KAAA,eAAA,UAAA,GAAA,GAXZ,IAgBA,GAAS,EAhBT,QAiBA,GAAA,UAAA,EAAA,EAAA,GAjBA,IAkBA,GAAA,UAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAlBA,IA6BA,EAAa,EA7Bb,OA8BA,EA9BA,GA+BA,GA/BA,GAgCA,GAAc,KAAA,YAAA,YAhCd,YA8CF,GAZA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAOE,CAPF,EAAA,EA1EA,GAsFI,KAAJ,YACE,GAAI,IAAW,KAAA,kBAAA,EAA0B,CADtB,GAEnB,KAAA,WAAA,YAA4B,CAAA,UAE1B,KAAM,GAFoB,GAG1B,IAAK,GAHqB,GAI1B,MAAO,EAAQ,EAJW,GAK1B,OAAQ,EAAS,EALS,KAQ9B,KAhGA,WAmGF,6BAA8B,SAAA,EAAA,GAI5B,GAAI,GAAM,KADV,IAEI,EAAI,EAFR,MAGI,EAAI,EAHR,OAKI,EAAY,KAAA,eAAA,UAAA,cAAA,EALhB,GAMI,EAAS,EANb,QAOA,EAAA,EAPA,GASA,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAiC,EAAjC,EAAyC,KACvC,GAAI,GAAQ,EADgC,GAgB5C,GAdA,EAF4C,OAG5C,EAAA,UAAA,MAAA,EAAyB,EAHmB,WAI5C,EAAA,MAAA,EAAa,IACb,EAAA,UACE,EADF,OAEE,EAFF,EAGE,EAHF,EAIE,EAJF,EAKE,EALF,EAAA,EAOE,GAPF,EAL4C,GAgBxC,KAAJ,YACE,GAAI,GAAW,KAAA,kBAAuB,EAAvB,EAAgC,EAD5B,GAEnB,KAAA,WAAA,YAA4B,CAAA,UAE1B,KAAM,EAFoB,GAG1B,IAAK,EAHqB,GAI1B,MAJ0B,EAK1B,OAL0B,IAQ9B,EA1B4C,YA8BhD,yBAA0B,WACxB,KAAA,IAAA,SAAA,EAAA,EAAA,EAD2E,IAI7E,aAAc,WACZ,AAAA,GAAA,EAAA,MADmD,wCAMrD,UAAW,SAAA,KAGX,eAAgB,SAAA,EAAA,KAGhB,mBAAoB,SAAA,KAGpB,wBAAyB,SAAA,EAAA,KAMzB,iBAAkB,aAMlB,YAAa,aAGb,UAAW,aAMX,YAAa,WACX,GAAI,GAAM,KADuC,IAEjD,AAAI,KAAJ,aACE,CAAI,KAAA,cAAJ,EACE,EAAA,KADgC,WAGhC,EADK,OAGP,KAAA,YANoB,MAQtB,EAViD,aAYnD,oBAAA,GACE,GAAI,KAAA,6BAAJ,MACE,KAAM,GAAU,KAAA,IAD4B,2BAG5C,KAAA,2BAAkC,KAAA,KAChC,KAAA,IACE,EAAA,GAAa,EAAb,GAA0B,EAAA,GAAa,EADzC,GAEE,EAAA,GAAa,EAAb,GAA0B,EAAA,GAAa,EANC,KAU9C,MAAO,MAXkB,4BAa3B,kBAAmB,SAAA,EAAA,GACjB,GAAI,GAAY,KAAA,IADiD,oBAEjE,MAAO,CACL,EAAA,GAAA,EAAmB,EAAA,GAAnB,EAAsC,EADjC,GAEL,EAAA,GAAA,EAAmB,EAAA,GAAnB,EAAsC,EAFjC,MAOX,OAAA,KAAA,GAAA,IACE,EAAA,UAAyB,EAAA,IAAzB,IAAoC,EAAA,UADlB,GAIpB,MAphEqD,2JCjavD,GAAA,GAAA,EAAA,GAEI,EAjBJ,GAmBA,WAAA,EAAA,GACE,GAAI,CAAA,GAAS,MAAA,SAAb,YAA4C,OAG5C,KAAM,GAAQ,EAAA,GAAU,EAJW,GAK7B,EAAS,EAAA,GAAU,EALU,GAM7B,EAAS,GANoB,QAOnC,EAAA,KAAY,EAAZ,GAAqB,EAArB,GAAA,EAPmC,GAQnC,EAAA,KARmC,GAWrC,EAAA,YAAyB,CACvB,OAAQ,SAAA,GACN,GAAI,GAAO,EAD4B,GAEnC,EAAO,EAF4B,GAGnC,EAAa,EAHsB,GAInC,EAAK,EAJ8B,GAKnC,EAAK,EAL8B,GAMnC,EAAK,EAN8B,GAOnC,EAAK,EAP8B,GAQvC,MAAO,CACL,KADK,UAEL,WAAY,SAAA,GACV,EAAA,EAD+C,GAE/C,GAF+C,GAG/C,AAAI,IAAJ,QACE,EAAO,EAAA,qBAAyB,EAAzB,GAAgC,EAAhC,GAAuC,EAAvC,GAA8C,EADjC,IAEf,AAAI,IAAJ,UACL,GAAO,EAAA,qBAAyB,EAAzB,GAAgC,EAAhC,GAAA,EAA2C,EAA3C,GAAkD,EAAlD,GADqB,IAI9B,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAwC,EAAxC,EAAgD,EAAhD,GACE,GAAI,GAAI,EAD2C,GAEnD,EAAA,aAAkB,EAAlB,GAAwB,EAF2B,IAIrD,MAb+C,OAmBvD,GAAI,GAAoB,WACtB,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEE,GAAI,GAAS,EAAb,OACE,EAAS,EAHgD,OAIvD,EAAQ,EAAZ,KACE,EAAU,EAAA,MAL+C,EAAA,EAO3D,AAAI,EAAO,EAAP,GAAiB,EAAO,EAA5B,IACE,GADmC,EAEnC,EAFmC,EAGnC,EAHmC,EAInC,EAJmC,EAKnC,EALmC,EAMnC,EANmC,GAQrC,AAAI,EAAO,EAAP,GAAiB,EAAO,EAA5B,IACE,GADmC,EAEnC,EAFmC,EAGnC,EAHmC,EAInC,EAJmC,EAKnC,EALmC,EAMnC,EANmC,GAQrC,AAAI,EAAO,EAAP,GAAiB,EAAO,EAA5B,IACE,GADmC,EAEnC,EAFmC,EAGnC,EAHmC,EAInC,EAJmC,EAKnC,EALmC,EAMnC,EANmC,GAQrC,GAAI,GAAM,GAAA,GAAa,EAAd,SAAiC,EA/BiB,OAgCvD,EAAM,GAAO,EAAP,GAAiB,EAAlB,SAAqC,EAhCa,OAiCvD,EAAM,GAAA,GAAa,EAAd,SAAiC,EAjCiB,OAkCvD,EAAM,GAAO,EAAP,GAAiB,EAAlB,SAAqC,EAlCa,OAmCvD,EAAM,GAAA,GAAa,EAAd,SAAiC,EAnCiB,OAoCvD,EAAM,GAAO,EAAP,GAAiB,EAAlB,SAAqC,EApCa,OAqC3D,GAAI,GAAJ,EAAc,OAiBd,OAdI,GAAM,EAAV,GACE,EAAM,EAAO,EADf,GAEE,EAAM,EAAO,EA1C4C,GA2CvD,EAAM,EAAV,GACE,EAAM,EAAO,EADf,GAEE,EAAM,EAAO,EA7C4C,GA8CvD,EAAM,EAAV,GACE,EAAM,EAAO,EADf,GAEE,EAAM,EAAO,EAhD4C,GAkDvD,EAAO,KAAA,MAAX,GACE,EAAO,KAAA,MAnDkD,GAoD3D,EAAA,EAAA,EApD2D,EAqD3D,EAAA,EAAA,GArD2D,EAsDlD,GAAT,EAAmB,IAAnB,EAA8B,MAC5B,GAAI,GAAJ,GACE,GADU,IAEV,AAAI,GAAJ,EACE,GADU,EAEL,AAAI,IAAJ,EACL,GADoB,EAGpB,GAAK,GAAD,IAAY,GADX,GAGP,EAAK,EAAM,GAAD,GATA,GAUV,EAAM,EAAO,GAAD,GAVF,GAWV,EAAM,EAAO,GAAD,GAXF,GAYV,EAAM,EAAO,GAAD,GAZF,QAcV,GADK,IAEL,AAAI,GAAJ,EACE,GADU,EAEL,AAAI,IAAJ,EACL,GADoB,EAGpB,GAAK,GAAD,IAAY,GADX,GAGP,EAAK,EAAM,GAAD,GATL,GAUL,EAAM,EAAO,GAAD,GAVP,GAWL,EAAM,EAAO,GAAD,GAXP,GAYL,EAAM,EAAO,GAAD,GAZP,GAeP,GA7BiC,IA8BjC,AAAI,GAAJ,EACE,GADU,EAEL,AAAI,GAAJ,EACL,GADiB,EAGjB,GAAK,GAAD,IAAY,GADX,GAGP,EAAK,EAAM,GAAD,GArCuB,GAsCjC,EAAM,EAAO,GAAD,GAtCqB,GAuCjC,GAAM,EAAO,GAAD,GAvCqB,GAwCjC,EAAM,EAAO,GAAD,GAxCqB,GA4CjC,OAHI,IAAM,KAAA,MAAW,KAAA,IAAA,EAzCY,IA0C7B,GAAM,KAAA,MAAW,KAAA,IAAA,EA1CY,IA2C7B,GAAI,EAAA,GAAc,GA3CW,EA4CxB,GAAT,GAAkB,IAAlB,GAA4B,KAC1B,GAAK,GAAD,IAAY,GADe,GAE/B,AAAI,GAAJ,EACE,GADS,EAEJ,AAAI,GAAJ,GACL,IADgB,GAGlB,EAAM,MAAQ,EAAO,GAAD,GAAP,GAPkB,EAQ/B,EAAM,MAAQ,EAAO,GAAD,IAAP,GARkB,EAS/B,EAAM,MAAQ,EAAO,GAAD,GAAP,GATkB,EAU/B,EAAM,MAVyB,KAerC,WAAA,EAAA,EAAA,GACE,GAAI,GAAK,EADgC,OAErC,EAAK,EAFgC,OAGzC,EAHyC,EAIzC,OAAQ,EAAR,UACE,UACE,GAAI,GAAiB,EADvB,eAEM,EAAO,KAAA,MAAW,EAAA,OAAX,GAFb,EAGM,EAAO,EAHb,EAIE,IAAK,EAAL,EAAY,EAAZ,EAAsB,IAEpB,OADI,GAAI,EADiB,EAEhB,EAAT,EAAgB,EAAhB,EAA0B,IAAK,IAC7B,EAAA,EAAA,EAGE,EAHF,GAIE,EAAG,EAJL,GAKE,EAAG,EALL,GAME,EANF,GAOE,EAAG,EAPL,GAQE,EAAG,EAT6B,IAWlC,EAAA,EAAA,EAGE,EAAG,EAAA,EAHL,GAIE,EAAG,EAJL,GAKE,EAAG,EALL,GAME,EAAG,EAAA,EANL,GAOE,EAAG,EAPL,GAQE,EAAG,EAnB6B,IAP1C,UA+BE,YACE,IAAK,EAAA,EAAO,EAAK,EAAjB,OAA4B,EAA5B,EAAoC,GAApC,EACE,EAAA,EAAA,EAGE,EAHF,GAIE,EAAG,EAJL,GAKE,EAAG,EALL,GAME,EANF,GAOE,EAAG,EAPL,GAQE,EAAG,EATqC,IAhChD,cA8CI,KAAM,IAAA,OA9CV,mBAmDF,WAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAYE,GAAI,GAHJ,IAKI,EALJ,IAQI,EARJ,EAUI,EAAU,KAAA,MAAW,EAVzB,IAWI,EAAU,KAAA,MAAW,EAXzB,IAYI,EAAc,KAAA,KAAU,EAAV,IAZlB,EAaI,EAAe,KAAA,KAAU,EAAV,IAbnB,EAeI,EAAQ,KAAA,IACV,KAAA,KAAU,KAAA,IAAS,EAAc,EAAd,GADT,IAfZ,GAmBI,EAAS,KAAA,IACX,KAAA,KAAU,KAAA,IAAS,EAAe,EAAf,GADR,IAnBb,GAuBI,EAAS,EAvBb,EAwBI,EAAS,EAxBb,EA0BI,EAAU,CAAA,SAAA,SAGZ,QAAS,CAHG,EAIZ,QAAS,CAJG,EAKZ,OAAQ,EALI,EAMZ,OAAQ,EANI,GASV,EAAc,EAAQ,EAnC1B,EAoCI,EAAe,EAAS,EApC5B,EAsCA,EAAA,EAAA,EAtCA,EAuCA,GAAI,EAAJ,UACE,EAAS,EAAA,YAAyB,CAAA,QAAA,SAAA,kBAAA,UAAA,YAQlC,EAAY,EAAA,UAAA,OAAA,EAAA,EATc,IAe1B,EAAA,QAAA,UAAA,EAAA,EAf0B,GAgB1B,EAAS,EAhBiB,YAkB1B,EAAY,EAAA,UAAA,OAAA,EAAA,EADP,IAOL,GAAI,GAAS,EAPR,QASD,EAAO,EAAA,gBAAA,EATN,GAUL,GAAA,GACE,GAAI,GAAQ,EADO,KAEnB,IAAK,EAAA,EAAO,EAAK,EAAjB,OAA+B,EAA/B,EAAuC,GAAvC,EACE,EAAA,GAAW,EADkC,GAE7C,EAAM,EAAN,GAAe,EAF8B,GAG7C,EAAM,EAAN,GAAe,EAH8B,GAI7C,EAAM,EAAN,GAJ6C,IAOjD,IAAK,EAAL,EAAY,EAAI,EAAhB,OAAgC,IAC9B,EAAA,EAAiB,EAAjB,GADmC,GAGrC,EAAA,aAAA,EAAA,EAtBK,GAuBL,EAAS,EAvBJ,OA0BP,MAAO,CAAA,SAEL,QAAS,EAAU,EAFd,EAGL,QAAS,EAAU,EAHd,EAAA,SAAA,UAQT,MA5QyD,MA+Q3D,EAAA,KAAkB,CAChB,OAAQ,SAAA,GAEN,GAAI,GAAS,EAFmB,GAG5B,EAAS,EAHmB,GAI5B,EAAU,EAJkB,GAK5B,EAAS,EALmB,GAM5B,EAAS,EANmB,GAO5B,EAAO,EAPqB,GAQ5B,EAAa,EARe,GAShC,MAAO,CACL,KADK,UAEL,WAAY,SAAA,EAAA,EAAA,GACV,EAAA,EAD4D,GAE5D,GAF4D,GAG5D,GAAA,EACE,EAAQ,EAAA,KAAA,8BAAmC,EAD5B,6BAIf,EAAQ,EAAA,KAAA,8BAAmC,EAFtC,eAGL,GACE,GAAI,GAAc,EAAA,KAAA,8BADR,GAEV,EAAQ,CAAC,EAAA,GAAW,EAAZ,GAA4B,EAAA,GAAW,EAAvC,IAMZ,GAAI,GAAyB,EAAA,EAAA,EAAA,EAAA,EAAA,EAM3B,EAAA,KAN2B,EAO3B,EAP2B,eAQ3B,EAxB0D,cA2B5D,MAAA,IACE,GAAA,aAAA,MAAA,EAA4B,EADZ,eAEhB,AAAA,GACE,EAAA,UAAA,MAAA,EADU,IAKd,EAAA,UACE,EADF,QAEE,EApC0D,SAsC5D,EAAA,MAAU,EAAV,OAAyC,EAtCmB,QAwCrD,EAAA,cAAkB,EAAlB,OAxCqD,iBA8CpE,EAAA,MAAmB,CACjB,OAAQ,WACN,MAAO,CACL,KADK,UAEL,WAAY,WACV,MAD6C,cAOrD,WAAA,GACE,GAAI,GAAY,EAAW,EADS,IAEpC,GAAI,CAAJ,EACE,KAAM,IAAA,OAAU,oBAAoB,EAApB,MAElB,MAAO,GAAA,OAL6B,GAQtC,GAAI,GAAiB,WACnB,GAAI,GAAY,CACd,QADc,EAEd,UAFc,GAKZ,EAN+C,IASnD,WAAA,EAAA,EAAA,EAAA,EAAA,GACE,KAAA,aAAoB,EADuD,GAE3E,KAAA,OAAc,EAAA,IAAS,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACvB,KAAA,KAAY,EAH+D,GAI3E,KAAA,MAAa,EAJ8D,GAK3E,KAAA,MAAa,EAL8D,GAM3E,KAAA,UAAiB,EAN0D,GAO3E,KAAA,WAAkB,EAPyD,GAQ3E,KAAA,MAR2E,EAS3E,KAAA,sBAT2E,EAU3E,KAAA,cAV2E,EAW3E,KAAA,KAX2E,UAY3E,KAAA,IAZ2E,EAe7E,SAAA,UAA0B,CACxB,oBAAqB,SAAA,GACnB,GAAI,GAAe,KADiD,aAEhE,EAAO,KAFyD,KAGhE,EAAQ,KAHwD,MAIhE,EAAQ,KAJwD,MAKhE,EAAY,KALoD,UAMhE,EAAa,KANmD,WAOhE,EAAQ,KAPwD,MAQhE,EAAwB,KARwC,sBAUpE,AAAA,GAAA,EAAA,MAAK,eAV+D,GAgCpE,GAAI,GAAK,EAAT,GACE,EAAK,EADP,GAEE,EAAK,EAFP,GAGE,EAAK,EAnC6D,GAsChE,EAAc,EAAA,KAAA,8BAAmC,KAtCe,QAuChE,EAAiB,EAAA,KAAA,8BACnB,KAxCkE,eA0ChE,EAAgB,CAClB,EAAA,GAAiB,EADC,GAElB,EAAA,GAAiB,EAFC,IAQhB,EAAO,KAAA,gBAAA,EAET,KAAA,IAAA,OAFS,MAGT,EArDkE,IAuDhE,EAAO,KAAA,gBAAA,EAET,KAAA,IAAA,OAFS,OAGT,EA1DkE,IA6DhE,EAAY,EAAA,eAAA,UAAA,UAEd,EAFc,KAGd,EAHc,KA7DoD,IAmEhE,EAAS,EAnEuD,QAoEhE,EAAW,EAAA,qBApEqD,GAqEpE,SAAA,WAAsB,EArE8C,WAuEpE,KAAA,+BAAA,EAAA,EAvEoE,GAyEpE,EAAA,UAAmB,EAAnB,MAAA,EAAA,EAAqC,EAArC,MAAA,EAzEoE,GA4EpE,EAAA,UAAA,EAAA,EAAA,EAAA,EAA+B,CAA/B,EAAoC,CA5EgC,GA8EpE,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EA9EoE,GAgFpE,EAAA,oBAhFoE,GAkFpE,KAAA,IAAA,UAAA,EAAA,EAAA,EAAA,EAAA,EAlFoE,GAsFpE,KAAA,IAAA,MAAe,EAAI,EAAnB,MAA+B,EAAI,EAtFiC,OAuF7D,EAvF6D,QA0FtE,gBAAiB,SAAA,EAAA,EAAA,GAMf,EAAO,KAAA,IAFP,GAOA,GAAI,GAAU,KAAA,IAAA,EAPd,GAQI,EAAO,KAAA,KAAU,EARrB,GASA,MAAI,IAAJ,EACE,EADmB,EAGnB,EAAQ,EADH,EAGA,CAAA,QAAA,SAGT,SAAU,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACR,GAAI,MAAA,QAAA,IAAuB,EAAA,SAA3B,GACE,GAAI,GAAY,EAD4B,EAExC,EAAa,EAF2B,EAG5C,EAAA,IAAA,KAAA,EAAA,EAAA,EAH4C,GAI5C,EAJ4C,OAK5C,EAL4C,YAShD,+BAAgC,SAAA,EAAA,EAAA,GAK9B,KAAM,GAAU,EAAhB,IACE,EAAU,EAFZ,QAGA,OAAA,OACO,GAAL,QACE,GAAI,GAAM,KADZ,IAEE,EAAA,UAAoB,EAFtB,UAGE,EAAA,YAAsB,EAHxB,YAIE,EAAA,UAAoB,EAJtB,UAKE,EAAA,YAAsB,EALxB,YADF,UAQO,GAAL,UACE,GAAI,GAAW,EAAA,KAAA,WAAgB,EAAhB,GAA0B,EAA1B,GAAoC,EADrD,IAEE,EAAA,UAFF,EAGE,EAAA,YAHF,EAKE,EAAA,UALF,EAME,EAAA,YANF,EARF,cAiBI,KAAM,IAAA,GAAA,YAAgB,2BAAA,OAI5B,WAAY,SAAA,EAAA,GACV,EAAM,KADkD,IAGxD,EAAA,aAAA,MAAA,EAA4B,KAH4B,eAIxD,EAAA,UAAA,MAAA,EAAyB,KAJ+B,QAMxD,GAAI,GAAyB,KAAA,oBAN2B,GAQxD,MAAO,GAAA,cAAA,EARiD,YA9KT,mICzYrD,KAAM,GAAsB,OAAA,OAf5B,8BAqBA,EAAA,WACE,EAAA,aAAA,OAAA,KAEI,EAxBN,WAiCA,EAAA,UACE,EAAA,YAAA,OAAA,GAEI,EApCN,iHCgBA,GAAA,GAAA,EAAA,GASA,KAAM,GAAe,CACnB,QADmB,EAEnB,KAFmB,EAGnB,MAHmB,GAMf,EAAa,CACjB,QADiB,EAEjB,OAFiB,EAGjB,gBAHiB,EAIjB,MAJiB,EAKjB,QALiB,EAMjB,MANiB,EAOjB,KAPiB,EAQjB,cARiB,EASjB,eATiB,GAYnB,WAAA,GAWI,GAAI,MAAA,IAAA,UAA8B,IAAlC,KACE,MADiD,GAIrD,OAAQ,EAAR,UACE,iBACE,MAAO,IAAA,GAAA,eAAmB,EAF9B,aAGE,sBACE,MAAO,IAAA,GAAA,oBAAwB,EAJnC,aAKE,8BACE,MAAO,IAAA,GAAA,4BAAgC,EAAhC,QAAgD,EAN3D,YAOE,wBACE,MAAO,IAAA,GAAA,sBAA0B,EAA1B,QAA0C,EARrD,iBAUI,MAAO,IAAA,GAAA,sBAA0B,EAA1B,QAA0C,EAVrD,aAcF,QACE,YAAA,EAAA,EAAA,GACE,KAAA,WAD0C,EAE1C,KAAA,WAF0C,EAG1C,KAAA,OAH0C,EAI1C,KAAA,WAJ0C,EAK1C,KAAA,SAL0C,EAM1C,KAAA,qBAN0C,GAO1C,KAAA,YAAmB,OAAA,OAPuB,MAQ1C,KAAA,kBAAyB,OAAA,OARiB,MAS1C,KAAA,qBAA4B,OAAA,OATc,MAU1C,KAAA,cAAqB,OAAA,OAVqB,MAY1C,KAAA,mBAA0B,IACxB,KAAM,GAAO,EADoB,KAEjC,GAAI,EAAA,aAAoB,KAAxB,WAAyC,OAGzC,GAAI,EAAJ,QACE,KAAA,sBADe,GAAA,OAIjB,GAAI,EAAJ,UACE,KAAM,GAAa,EADF,WAEX,EAAa,KAAA,qBAFF,GAGjB,GAAI,CAAJ,EACE,KAAM,IAAA,OAAU,2BAAA,KAIlB,GAFA,MAAO,MAAA,qBANU,GAQb,EAAA,WAAkB,EAAtB,KACE,EAAA,QAAmB,EADoB,cAE9B,EAAA,WAAkB,EAAtB,MACL,EAAA,OAAkB,EAAW,EADkB,aAG/C,MAAM,IAAA,OADD,4BAZU,OAiBnB,KAAM,GAAS,KAAA,cAAmB,EA1BD,QA2BjC,GAAI,CAAJ,EACE,KAAM,IAAA,OAAU,+BAA+B,EAA/B,UAElB,GAAI,EAAJ,YACE,KAAM,GAAe,KADF,WAEb,EAAe,EAFF,WAGnB,GAAA,SAAY,SAAA,GACV,EAAQ,EAAO,EADc,SAA/B,KAGE,SAAA,GACE,EAAA,YAAmB,CACjB,WADiB,EAEjB,WAFiB,EAGjB,SAAU,EAHO,KAIjB,WAAY,EAJK,WAKjB,KALiB,KAQrB,SAAA,GACE,EAAA,YAAmB,CACjB,WADiB,EAEjB,WAFiB,EAGjB,SAAU,EAHO,MAIjB,WAAY,EAJK,WAKjB,OAAQ,EALS,OAhBJ,OA2BrB,GAAI,EAAJ,UACE,KAAA,kBADiB,GAAA,OAInB,EAAO,EA7D0B,OA+DnC,EAAA,iBAAA,UAAmC,KA3EO,oBA8E5C,GAAA,EAAA,GAUE,KAAM,GAAK,KAVW,cAWtB,GAAI,EAAJ,GACE,KAAM,IAAA,OAAU,0CAAA,MAElB,EAAA,GAdsB,EAuBxB,KAAA,EAAA,EAAA,GACE,KAAA,aACE,CACE,WAAY,KADd,WAEE,WAAY,KAFd,WAGE,OAHF,EAAA,QAF8B,GAoBlC,gBAAA,EAAA,EAAA,GACE,KAAM,GAAa,KADwB,aAErC,EAFqC,GAAA,EAAA,2BAG3C,KAAA,qBAAA,GAH2C,EAI3C,IACE,KAAA,aACE,CACE,WAAY,KADd,WAEE,WAAY,KAFd,WAGE,OAHF,EAAA,aAAA,QAFA,SAWF,GACA,EAAA,OADW,GAGb,MAAO,GAlBoC,QA+B7C,eAAA,EAAA,EAAA,EAAA,GACE,KAAM,GAAW,KAD2C,WAEtD,EAAa,KAFyC,WAGtD,EAAa,KAHyC,WAItD,EAAS,KAJ6C,OAM5D,MAAO,IAAA,gBACL,CACE,MAAO,IACL,KAAM,GADa,GAAA,EAAA,2BAEnB,YAAA,kBAAA,GAAmC,CAAA,aAEjC,UAFiC,EAGjC,SAHiC,KAIjC,WAJiC,KAKjC,SALiC,IAOnC,KAAA,aACE,CAAA,aAAA,aAGE,OAHF,EAAA,WAAA,OAME,YAAa,EANf,aAViB,GAqBZ,EArBY,SAwBrB,KAAM,IACJ,KAAM,GADY,GAAA,EAAA,2BAElB,YAAA,kBAAA,GAAA,SAFkB,EAGlB,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,KAAA,WAKjB,YAAa,EALI,cASZ,EAZW,SAepB,OAAQ,IACN,AAAA,GAAA,EAAA,QAAO,YAAP,OADgB,mCAEhB,KAAM,GAFU,GAAA,EAAA,2BAGhB,YAAA,kBAAA,GAAA,WAHgB,EAIhB,KAAA,kBAAA,GAAA,SAJgB,GAKhB,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,OAAA,WAKjB,OAAQ,EALS,KAQZ,EAbS,UA/CsC,GAsE9D,kBAAA,GACE,KAAM,GADgB,KAEhB,EAAS,KAAA,cAAmB,EAFZ,QAGhB,EAAW,EAHK,SAIhB,EAAa,KAJG,WAKhB,EAAa,EALG,WAMhB,EAAS,KANO,OAQhB,EAAa,CACjB,QAAA,EAAe,EAAf,EAAA,GACE,GAAI,KAAJ,YAAsB,OAGtB,KAAM,GAAkB,KAJU,YAKlC,KAAA,aALkC,EASlC,AAAI,EAAA,GAAuB,KAAA,aAA3B,GACE,MAAA,eADgD,GAAA,EAAA,2BAEhD,KAAA,MAAa,KAAA,eAFmC,SAIlD,EAAA,aACE,CAAA,aAAA,aAGE,OAAQ,EAHV,QAAA,WAAA,SAdgC,IAyBpC,QACE,GAAI,KAAJ,YAAsB,OAGtB,KAAA,YAJM,GAKN,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,MAAA,aAMnB,MAAO,GAAA,YAXD,IAcR,MAAA,GAEE,GADA,GAAA,EAAA,QAAO,YAAP,OADY,kCAER,KAAJ,YAAsB,OAGtB,KAAA,YALY,GAMZ,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,MAAA,WAKjB,OAAQ,EALS,MASrB,eAvDiB,GAAA,EAAA,2BAwDjB,OAxDiB,KAyDjB,SAzDiB,KA0DjB,YA1DiB,GA2DjB,YAAa,EA3DI,YA4DjB,MA5DiB,MA+DnB,EAAA,eAvEsB,UAwEtB,EAAA,MAAmB,EAAA,eAxEG,QAyEtB,KAAA,YAAA,GAzEsB,EA0EtB,GAAA,SAAY,SAAA,GACV,EAAQ,EAAO,EAAP,KADqB,MAA/B,KAGE,WACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,eAAA,WAKjB,QALiB,MAQrB,SAAA,GACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,eAAA,WAKjB,OAAQ,EALS,OAczB,sBAAA,GACE,KAAM,GAAW,EADS,SAEpB,EAAa,KAFO,WAGpB,EAAa,EAHO,WAIpB,EAAS,KAJW,OAM1B,OAAQ,EAAR,YACO,GAAL,eACE,AAAI,EAAJ,QACE,KAAA,kBAAA,GAAA,UADgB,UAGhB,KAAA,kBAAA,GAAA,UAAA,OACE,EAAW,EAFR,SAJX,UAUO,GAAL,cACE,AAAI,EAAJ,QACE,KAAA,kBAAA,GAAA,SADgB,UAGhB,KAAA,kBAAA,GAAA,SAAA,OACE,EAAW,EAFR,SAbX,UAmBO,GAAL,KAEE,GAAI,CAAC,KAAA,YAAL,IACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,cAAA,WAKjB,QALiB,KADY,MAajC,AACE,KAAA,YAAA,GAAA,aAAA,GACA,EAAA,YAFF,GAIE,KAAA,YAAA,GAAA,eADA,UAIF,KAAA,YAAA,GAAA,YAAyC,EAtB3C,YAuBE,KAAM,CAAA,UAAa,KAAA,YAAiB,EAvBtC,UAwBE,GAAA,SAAY,SAAA,GACV,EAAQ,GAAU,OADpB,KAGE,WACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,cAAA,WAKjB,QALiB,MAQrB,SAAA,GACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,cAAA,WAKjB,OAAQ,EALS,OAxD3B,UAkEO,GAAL,QAKE,GAJA,GAAA,EAAA,QACE,KAAA,kBADF,GADF,yCAKM,KAAA,kBAAA,GAAJ,SAA+C,MAG/C,KAAA,kBAAA,GAAA,WAAA,QAAoD,EARtD,OAlEF,UA4EO,GAAL,MAKE,GAJA,GAAA,EAAA,QACE,KAAA,kBADF,GADF,uCAKM,KAAA,kBAAA,GAAJ,SAA+C,MAG/C,KAAA,kBAAA,GAAA,SARF,GASE,KAAA,kBAAA,GAAA,WATF,QAUE,KAAA,wBAVF,GA5EF,UAwFO,GAAL,MACE,AAAA,GAAA,EAAA,QACE,KAAA,kBADF,GADF,uCAKE,KAAA,kBAAA,GAAA,WAAA,MACE,EAAW,EANf,SAQE,KAAA,wBARF,GAxFF,UAkGO,GAAL,gBACE,AAAI,EAAJ,QACE,KAAA,kBAAA,GAAA,WADgB,UAGhB,KAAA,kBAAA,GAAA,WAAA,OACE,EAAW,EAFR,SAKP,KAAA,wBARF,GAlGF,UA4GO,GAAL,OACE,GAAI,CAAC,KAAA,YAAL,GAAiC,MAGjC,KAAM,CAAA,YAAe,KAAA,YAAiB,EAJxC,UAKE,GAAA,SAAY,SAAA,GACV,EAAQ,GAAY,EAAS,EAAW,EADX,YAA/B,KAGE,WACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,gBAAA,WAKjB,QALiB,MAQrB,SAAA,GACE,EAAA,YAAmB,CAAA,aAAA,aAGjB,OAAQ,EAHS,gBAAA,WAKjB,OAAQ,EALS,OASvB,KAAA,YAAA,GAAA,eAAA,OACE,EAAW,EA5Bf,SA8BE,KAAA,YAAA,GAAA,YA9BF,GA+BE,MAAO,MAAA,YA/BT,GA5GF,cA8II,KAAM,IAAA,OA9IV,gCAqJF,yBAAA,GAGE,KAAM,SAAA,WACJ,CACE,KAAA,kBAAA,GADF,UAEE,KAAA,kBAAA,GAFF,SAGE,KAAA,kBAAA,GAHF,YAAA,IAIM,SAAA,GACJ,MAAO,IAAc,EADK,WAI9B,MAAO,MAAA,kBAZ+B,GAqBxC,aAAA,EAAA,GACE,AAAI,GAAa,KAAjB,qBACE,KAAA,OAAA,YAAA,EAD0C,GAG1C,KAAA,OAAA,YADK,GAKT,UACE,KAAA,OAAA,oBAAA,UAA2C,KADnC,yICpkBZ,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,IAkBA,QACE,YAAA,GACE,AAAA,GAAA,EAAA,QAAO,MAAA,IAAP,SADgB,mCAIhB,EAAO,KAAA,QAJS,GAOhB,KAAM,GAAS,GAPC,GAAA,gBAQV,EAAc,EAAA,gBARJ,GAUhB,KAAA,aAAoB,GAVJ,KAYhB,AAAA,GACE,KAAA,OADe,GAKnB,QAAA,GAEE,MAAO,GAAA,QAAA,SAAA,IAAA,QAAA,sBAE2B,SAAA,EAAA,GAC9B,KAAM,GAAQ,EAAA,QAAA,2BACyB,SAAA,EAAA,EAAA,EAAA,GACnC,MAAO,QAAA,aAAoB,EAAA,GAAU,EAAV,EAAmB,EADiB,KADrD,QAAA,2BAIyB,SAAA,EAAA,GACnC,OAAA,OACE,MACE,MAFJ,QAGE,OACE,MAJJ,QAKE,KACE,MANJ,QAOE,KACE,MARJ,QASE,OACE,MAVJ,IAYA,KAAM,IAAA,OAAU,YAAA,sBAGpB,GAAI,GArBgD,GAsBpD,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAmC,EAAnC,EAA2C,GAA3C,GACE,KAAM,GAAO,EAAA,WAAA,GAAA,IAA4B,EAAA,WAAiB,EADT,GAEjD,AACE,GAAA,IACA,EADA,KAEA,IAFA,IAGA,IAHA,IAIA,IALF,GAOE,GAAS,OAAA,aADT,GAGA,GAAS,MAAS,OAAD,GAAA,SAAA,IAAA,UAAR,GADJ,IAKT,MAAO,IArC6C,IAyC1D,OAAA,GACE,GAAI,GAAM,EADQ,gBAGlB,GAAI,EAAA,SAAA,gBAAJ,UAGE,IADA,EAAM,EAFsC,WAGrC,GAAO,EAAA,SAAA,gBAAd,WACE,EAAM,EADgD,YAK1D,KAAM,GAAW,EAAM,EAAA,SAAN,cAXC,KAYlB,GAAI,CAAA,GAAQ,IAAR,WAAkC,CAAC,EAAvC,gBAA4D,OAI5D,KAAM,GAAW,EAhBC,WAiBlB,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAsC,EAAtC,EAA8C,KAC5C,KAAM,GAAO,EADoC,GAEjD,GAAI,EAAA,SAAA,gBAAJ,kBAAuD,SAIvD,OAAS,GAAJ,EAAW,EAAK,EAAA,WAArB,OAA6C,EAA7C,EAAqD,IACnD,GAAI,EAAA,WAAA,GAAA,SAAA,gBAAJ,SACE,KAAM,GAAQ,EAAA,WAD2C,GAEnD,EAAO,EAAA,SAF4C,cAIzD,KAAA,aAAA,IAAA,EAA4B,EAAA,YAJ6B,UAUjE,IAAA,GACE,MAAO,MAAA,aAAA,IAAA,GAA8B,KAAA,aAAA,IAA9B,GADC,KAIV,SACE,KAAM,GAAM,OAAA,OADL,MAEP,SAAW,CAAA,EAAX,IAA2B,MAA3B,aACE,EAAA,GAD4C,EAG9C,MALO,GAQT,IAAA,GACE,MAAO,MAAA,aAAA,IADC,yHC7GZ,KAAM,GAAqB,CACzB,QADyB,EAEzB,cAAe,GACf,iBAAkB,GAClB,2BAA4B,GAC5B,+BAAgC,GAChC,oBAAqB,GACrB,iBAAkB,GAClB,YAAa,GACb,2BAA4B,GAC5B,oBAAqB,GACrB,kBAAmB,KAGrB,WAAA,EAAA,GACE,KAAM,GAAK,EADmB,GAE9B,MAAO,KAAA,KAAc,IAAd;GAA6B,IAA7B,MAA4C,IAFrB,IAKhC,WAAA,GACE,OAAS,GAAJ,EAAW,EAAK,EAArB,OAA+B,EAA/B,EAAuC,IACrC,GAAI,CAAC,EAAA,EAAL,GACE,MADuB,GAI3B,MAN6B,GAS/B,QACE,iBAAA,GACE,MAAO,GAAA,QAAA,aAAwB,CAAA,EAAA,KAC7B,GAAI,EAAA,UAAA,EAAA,KAAJ,KACE,MAAO,QAAA,aAAoB,SAAS,EAAA,UAAT,GADQ,KAE9B,GAAI,EAAA,UAAA,EAAA,KAAJ,IACL,MAAO,QAAA,aAAoB,SAAS,EAAA,UAAT,GADc,KAG3C,OAAA,OACE,KACE,MAFJ,QAGE,KACE,MAJJ,QAKE,MACE,MANJ,QAOE,OACE,MARJ,IAUA,MAAO,MAAA,gBAhBuC,KAoBlD,cAAA,EAAA,GACE,KAAM,GADgB,GAEtB,GAAI,GAFkB,EAItB,aACE,KAAO,EAAM,EAAN,QAAkB,EAAA,EAAzB,IACE,EAD6C,EAKjD,KACE,EAAM,EAAN,QACA,CAAC,EAAA,EADD,IAEA,EAAA,KAFA,KAGA,EAAA,KAJF,KAME,EADA,EAGF,KAAM,GAAO,EAAA,UAAA,EAlBS,GAoBtB,IADA,IAEE,EAAM,EAAN,QACA,EAAA,KADA,KAEA,EAAA,KAFA,KAGA,EAAA,KAJF,MAME,IACA,GAAI,GAAJ,GACE,EAHF,GAIA,KAAO,EAAM,EAAN,QAAkB,CAAC,EAAA,EAAnB,IAA2C,EAAA,KAAlD,KACE,GAAY,EADoD,GAEhE,EAFgE,EAKlE,GADA,IACI,EAAA,KAAJ,IACE,MADkB,MAGpB,EAZA,EAaA,IACA,KAAM,GAAc,EAdpB,GAeA,GAAI,IAAA,KAAuB,IAA3B,IACE,MAD8C,MAGhD,KAAM,GAAe,EAAA,QAAA,EAAuB,EAlB5C,GAmBA,GAAI,EAAJ,EACE,MADoB,MAGtB,EAAY,EAAA,UAAA,EAtBZ,GAuBA,EAAA,KAAgB,CACd,KADc,EAEd,MAAO,KAAA,iBAFO,KAIhB,EAAM,EA3BN,EA4BA,IAEF,MAAO,CAAA,OAAA,aAGL,OAAQ,EAHH,GAOT,4BAAA,EAAA,GACE,GAAI,GADgC,EAGpC,aACE,KAAO,EAAM,EAAN,QAAkB,EAAA,EAAzB,IACE,EAD6C,EAKjD,KACE,EAAM,EAAN,QACA,CAAC,EAAA,EADD,IAEA,EAAA,KAFA,KAGA,EAAA,KAJF,KAME,EADA,EAGF,KAAM,GAAO,EAAA,UAAA,EAjBuB,GAkBpC,IACA,KAAM,GAnB8B,EAoBpC,KAAO,EAAM,EAAN,QAAmB,GAAA,KAAA,KAAkB,EAAE,EAAF,KAA5C,MACE,EAD+D,EAGjE,KAAM,GAAQ,EAAA,UAAA,EAvBsB,GAwBpC,MAAO,CAAA,OAAA,QAGL,OAAQ,EAHH,GAOT,SAAA,GACE,GAAI,GADM,EAEV,KAAO,EAAI,EAAX,SACE,KAAM,GAAK,EADQ,GAEnB,GAAI,GAFe,EAGnB,GAAI,IAAJ,KACE,EADc,EAEd,KAAM,GAAM,EAFE,GAGd,GAHc,GAId,OAAA,OACE,IAGE,GAFA,EADF,EAEE,EAAI,EAAA,QAAA,IAFN,GAGM,EAAJ,GACE,KAAA,QAAa,EADJ,qBAAA,OAIX,KAAA,aAAkB,EAAA,UAAA,EAPpB,IAQE,EAAI,EARN,EADF,UAWE,IACE,EADF,EAEE,KAAM,GAAK,KAAA,4BAAA,EAFb,GAGE,GAAI,EAAA,UAAY,EAAI,EAAhB,OAA2B,EAAI,EAAJ,OAA3B,KAAJ,MACE,KAAA,QAAa,EAD6C,4BAAA,OAI5D,KAAA,KAAU,EAAV,KAAmB,EAPrB,OAQE,GAAK,EAAA,OARP,EAXF,UAqBE,IACE,GAAI,EAAA,UAAY,EAAZ,EAAmB,EAAnB,KAAJ,MAEE,GADA,EAAI,EAAA,QAAA,MAAiB,EADiB,GAElC,EAAJ,GACE,KAAA,QAAa,EADJ,qBAAA,OAIX,KAAA,UAAe,EAAA,UAAY,EAAZ,EANuB,IAOtC,EAAI,EAPkC,UAQ7B,EAAA,UAAY,EAAZ,EAAmB,EAAnB,KAAJ,WAEL,GADA,EAAI,EAAA,QAAA,MAAiB,EAD6B,GAE9C,EAAJ,GACE,KAAA,QAAa,EADJ,kBAAA,OAIX,KAAA,QAAa,EAAA,UAAY,EAAZ,EANqC,IAOlD,EAAI,EAP8C,UAQzC,EAAA,UAAY,EAAZ,EAAmB,EAAnB,KAAJ,WACL,KAAM,GAAK,EAAA,QAAA,IAAe,EADwB,GAElD,GAAI,GAF8C,GAIlD,GADA,EAAI,EAAA,QAAA,IAAe,EAH+B,GAI9C,EAAJ,GACE,KAAA,QAAa,EADJ,gCAAA,OAIX,GAAI,EAAA,GAAU,EAAd,GAEE,GADA,EAAI,EAAA,QAAA,KAAgB,EADA,GAEhB,EAAJ,GACE,KAAA,QACE,EAFO,gCAAA,OAMX,EARoB,GAUtB,KAAM,GAAiB,EAAA,UACrB,EADqB,EAErB,EAAK,GAAA,EApB2C,IAsBlD,KAAA,UAtBkD,GAuBlD,EAAI,EAAK,GAAA,EAvByC,QAyBlD,KAAA,QAAa,EADR,kBAAA,OA9DX,cAoEI,KAAM,GAAU,KAAA,cAAA,EADlB,GAEE,GAAI,IAAJ,MACE,KAAA,QAAa,EADO,kBAAA,OAItB,GAAI,GANN,GAOE,GACE,EAAA,UAAY,EAAI,EAAhB,OAAgC,EAAI,EAAJ,OAAhC,KADF,KAGE,EADA,WAGA,EAAA,UAAY,EAAI,EAAhB,OAAgC,EAAI,EAAJ,OAAhC,KADK,KAGL,KAAA,QAAa,EADb,qBAAA,OAIF,KAAA,eAAoB,EAApB,KAAkC,EAAlC,WAjBF,GAkBE,GAAK,EAAA,OAAkB,GAAA,EAlBzB,GAnEF,YAyFA,KAAO,EAAI,EAAJ,QAAgB,EAAA,KAAvB,KACE,IAEF,KAAM,GAAO,EAAA,UAAA,EAJR,GAKL,KAAA,OAAY,KAAA,iBALP,IAOP,EAtGmB,GA0GvB,gBAAA,GACE,MAAO,IAAA,KAGT,KAAA,EAAA,IAEA,UAAA,IAEA,QAAA,IAEA,UAAA,IAEA,OAAA,IAEA,eAAA,EAAA,EAAA,IAEA,aAAA,IAEA,QAAA,KAGF,QACE,YAAA,EAAA,GACE,KAAA,SAD+B,EAE/B,KAAA,UAF+B,EAI/B,OAAA,eAAA,KAAA,aAA0C,CAAE,MAAF,KAAe,SAAf,QAG5C,cACE,MAAO,MAAA,YAAmB,KAAA,WADX,MAIjB,eACE,KAAM,GAAa,KAAA,WADH,WAEhB,GAAI,CAAJ,EACE,OAEF,KAAM,GAAQ,EAAA,QALE,MAMhB,MAAI,KAAU,GACZ,OAEK,EAAW,EATF,MAYlB,eACE,MAAK,MAAL,WAGO,KAAA,WAAA,IACA,SAAA,GACH,MAAO,GADa,cADjB,KAJS,IAEP,KAAA,WADa,GAUxB,gBACE,MAAO,MAAA,YAAmB,KAAA,WAAA,OADZ,GAKlB,eAAA,GACE,cAAc,QAEZ,KAAA,iBAFY,KAGZ,KAAA,OAHY,KAIZ,KAAA,WAAkB,EAJN,QAOd,gBAAA,GAOE,GANA,KAAA,iBADoB,GAEpB,KAAA,OAFoB,GAGpB,KAAA,WAAkB,EAHE,QAKpB,KAAA,SALoB,GAOhB,KAAA,aAAoB,EAAxB,QACE,OAIF,KAAM,CAAA,GAAoB,KAZN,iBAapB,MAAA,GAGO,CAhBa,mBAclB,OAKJ,gBAAA,GACE,OAAA,OACE,OACE,MAFJ,IAIA,MAAO,OAAA,gBALa,GAQtB,OAAA,GACE,GAAI,EAAJ,GAA8B,OAG9B,KAAM,GAAO,GAAA,GAAA,QAJF,GAKX,KAAA,iBAAA,KALW,GAQb,QAAA,GACE,KAAM,GAAO,GAAA,GAAA,QADD,GAEZ,KAAA,iBAAA,KAFY,GAKd,eAAA,EAAA,EAAA,GACE,KAAM,GAAO,GAAA,GAD2B,GAIxC,GAFA,EAAA,WAFwC,GAGxC,KAAA,iBAAA,KAHwC,GAIxC,EAAa,OAGb,KAAA,OAAA,KAAiB,KAPuB,kBAQxC,KAAA,iBAAwB,EARgB,WAW1C,aAAA,GACE,KAAA,iBAAwB,KAAA,OAAA,OADP,GAEjB,KAAM,GAAc,KAAA,iBAAsB,KAAA,iBAAA,OAFzB,GAGjB,GAAI,CAAJ,EAAkB,OAGlB,OAAS,GAAJ,EAAW,EAAK,EAAA,WAArB,OAAoD,EAApD,EAA4D,IAC1D,EAAA,WAAA,GAAA,WAD+D,EAKnE,QAAA,GACE,KAAA,WADY,sIChYhB,GAAA,GAAA,EAAA,GAGA,QACE,YAAA,EAAA,GACE,AAAA,GAAA,EAAA,QAAA,EADyC,+EAMzC,KAAA,cANyC,GAOzC,KAAA,iBAAwB,EAAA,iBAPiB,GASzC,KAAM,GAAc,EATqB,YAUzC,GAAI,GAAe,EAAA,OAAnB,GACE,KAAM,GAAS,GAAA,YAAA,GAD0B,OAEzC,KAAA,cAAA,KAFyC,GAK3C,KAAA,uBAfyC,EAgBzC,KAAA,sBAA6B,CAAC,EAhBW,cAiBzC,KAAA,kBAAyB,CAAC,EAjBe,aAkBzC,KAAA,eAAsB,EAlBmB,OAoBzC,KAAA,mBApByC,KAqBzC,KAAA,cArByC,GAuBzC,KAAA,uBAAA,iBAA6C,CAAA,EAAA,KAC3C,KAAA,eAAoB,CAAA,QAAA,YAGtB,KAAA,uBAAA,oBAAgD,CAAA,EAAA,KAC9C,KAAA,YAAiB,CAAA,SAAA,YAGnB,KAAA,uBAAA,2BAAuD,IACrD,KAAA,eAAoB,CAD0C,YAIhE,KAAA,uBAAA,2BAAuD,KACrD,KAD2D,uBAI7D,KAAA,uBAvCyC,iBA0C3C,eAAA,GACE,KAAM,GAAS,GAAA,YAAe,EAAf,OADI,OAEnB,GAAI,EAAA,QAAJ,OACE,AAAI,KAAJ,mBACE,KAAA,mBAAA,SAD2B,GAG3B,KAAA,cAAA,KADK,QAIP,KAAM,GAAQ,KAAA,cAAA,KAAwB,SAAA,GACpC,MAAI,GAAA,SAAuB,EAA3B,MAAuC,GAGvC,GAAA,SAJ2D,GAAA,MAO7D,AAAA,GAAA,EAAA,QAAA,EARK,+EAeT,0BACE,MAAO,MAAA,mBAA0B,KAAA,mBAA1B,QADoB,EAI7B,YAAA,GACE,GAAI,EAAA,QAAJ,QAEE,KAAM,GAAc,KAAA,cAFO,GAG3B,AAAI,GAAe,EAAnB,YACE,EAAA,WAAuB,CAAE,OAAQ,EADQ,cAI3C,KAAM,GAAa,KADd,mBAEL,AAAI,GAAc,EAAlB,YACE,EAAA,WAAsB,CAAE,OAAQ,EAAV,OAAsB,MAAO,EAA7B,SAK5B,qBACE,AAAI,KAAJ,oBACE,KAAA,mBAD2B,kBAG7B,KAAA,iBAJmB,GAOrB,mBAAA,GACE,KAAM,GAAI,KAAA,cAAA,QADe,GAEzB,AAAI,GAAJ,GACE,KAAA,cAAA,OAAA,EADU,GAKd,gBACE,AAAA,GAAA,EAAA,QACE,CAAC,KADH,mBADc,iEAKd,KAAM,GAAe,KALP,cAMd,YAAA,cANc,KAOP,GAAA,GAAA,KAAA,EAGL,KAVY,kBAchB,eAAA,EAAA,GACE,GAAI,GAAO,KAAX,uBACE,MADsC,MAGxC,KAAM,GAAS,GAAA,GAAA,KAAA,EAJU,GAKzB,YAAA,uBAAA,iBAAA,EALyB,GAMzB,KAAA,cAAA,KANyB,GAAA,EAU3B,kBAAA,GACE,AAAI,KAAJ,oBACE,KAAA,mBAAA,OAD2B,GAG7B,KAAM,GAAU,KAAA,cAAA,MAJQ,GAKxB,EAAA,QAAgB,SAAA,GACd,EAAA,OADqC,KAGvC,KAAA,uBARwB,oCAa5B,QACE,YAAA,EAAA,EAAkC,EAAlC,IACE,KAAA,QADyD,EAEzD,KAAA,MAAa,GAF4C,GAGzD,KAAA,UAHyD,KAIzD,KAAA,cAAqB,GAJoC,GAKzD,KAAA,QALyD,EAMzD,SAAA,KAAoB,MAApB,cACE,KAAA,SAAgB,EADsB,WAGxC,KAAA,UATyD,GAUzD,KAAA,cAAqB,QAVoC,UAWzD,EAAA,mBAXyD,KAazD,KAAA,WAbyD,KAgB3D,SAAA,GACE,GAAI,KAAJ,MAAgB,OAGhB,GAAI,KAAA,UAAA,OAAJ,GACE,KAAM,GAAoB,KAAA,UADG,QAE7B,EAAA,QAA0B,CAAE,MAAF,EAAgB,KAAhB,SAE1B,MAAA,cAAA,KADK,GAGP,KAAA,SAAgB,EAVF,cAahB,gBACE,MAAO,MADU,iBAInB,YACE,MAAO,MADM,aAIf,oBACE,MAAO,MAAA,QADc,qBAIvB,wBACE,MAAO,MAAA,QADkB,yBAI3B,iBACE,MAAO,MAAA,QADW,oBAIpB,QACE,GAAI,KAAA,cAAA,OAAJ,GACE,KAAM,GAAQ,KAAA,cADmB,QAEjC,MAAO,CAAE,MAAF,EAAgB,KAAhB,IAET,GAAI,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,KAAM,GARK,GAAA,EAAA,2BASX,YAAA,UAAA,KATW,GAUJ,EAVI,QAab,OAAA,GACE,KAAA,MADa,GAEb,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UALa,GAQf,kBACE,GAAI,KAAJ,MAAgB,OAGhB,KAAA,MAJgB,IASpB,QACE,YAAA,EAAA,EAAA,GACE,KAAA,QAD8B,EAE9B,KAAA,OAF8B,EAG9B,KAAA,KAH8B,EAI9B,KAAA,aAJ8B,KAK9B,KAAA,UAL8B,GAM9B,KAAA,MAN8B,GAQ9B,KAAA,WAR8B,KAWhC,SAAA,GACE,GAAI,KAAJ,MAAgB,OAGhB,GAAI,KAAA,UAAA,SAAJ,EACE,KAAA,aAD+B,OAG/B,KAAM,GAAqB,KAAA,UADtB,QAEL,EAAA,QAA2B,CAAE,MAAF,EAAgB,KAAhB,KAC3B,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UANK,GAQP,KAAA,MAdc,GAed,KAAA,QAAA,mBAfc,SAkBhB,wBACE,MADyB,QAI3B,QACE,GAAI,KAAJ,cACE,KAAM,GAAQ,KADO,aAErB,YAAA,aAFqB,KAGd,CAAE,MAAF,EAAgB,KAAhB,IAET,GAAI,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,KAAM,GATK,GAAA,EAAA,2BAUX,YAAA,UAAA,KAVW,GAWJ,EAXI,QAcb,OAAA,GACE,KAAA,MADa,GAEb,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UALa,GAMb,KAAA,QAAA,mBANa,6GC3RjB,GAAA,GAAA,EAAA,GAkBA,QACE,YAAY,CAAE,SAAF,KACV,KAAA,SAAgB,IADc,MAIhC,aACE,GAAI,GAAU,KADA,SAEd,MAAA,IACE,GAAU,EADC,aAGN,GAAA,EAAA,QAAA,KAAA,YALO,GAQhB,aAAa,CAAA,QAAA,OAAb,eACE,MAAO,GAAA,aAAA,EAAA,EADiC,GAI1C,YAAY,CAAA,QAAA,SAAA,kBAAA,UAAZ,YACE,MAAO,GAAA,YAAA,EAAA,EAAA,EAAA,EADyD,GAUlE,QACE,EADM,4BAKV,GAAI,GAAc,WAChB,WAAA,EAAA,EAAA,GACE,GAAI,GAAS,EAAA,aAD2B,GAExC,EAAA,aAAA,EAFwC,GAGxC,EAAA,cAHwC,GAIxC,GAAI,GAAW,EAAA,mBAAA,EAA8B,EAJL,gBAKxC,GAAI,CAAJ,GACE,GAAI,GAAW,EAAA,iBADF,GAEb,KAAM,IAAA,OAAU,oCAFH,GAIf,MATwC,GAW1C,WAAA,EAAA,GACE,MAAO,GAAA,EAAA,EAAqB,EADQ,eAGtC,WAAA,EAAA,GACE,MAAO,GAAA,EAAA,EAAqB,EADU,iBAGxC,WAAA,EAAA,GAEE,OADI,GAAU,EADoB,gBAEzB,EAAJ,EAAW,EAAK,EAArB,OAAqC,EAArC,EAA6C,EAA7C,EACE,EAAA,aAAA,EAAyB,EADuB,IAGlD,EAAA,YALkC,GAMlC,GAAI,GAAS,EAAA,oBAAA,EAAgC,EANX,aAOlC,GAAI,CAAJ,GACE,GAAI,GAAW,EAAA,kBADJ,GAEX,KAAM,IAAA,OAAU,iCAFL,GAIb,MAXkC,GAapC,WAAA,EAAA,EAAA,GACE,EAAA,cAD2C,GAE3C,GAAI,GAAU,EAF6B,gBAG3C,SAAA,YAAe,EAAf,WAH2C,GAM3C,EAAA,cAAiB,EAAjB,WAAgC,EAAhC,eAAmD,EANR,eAO3C,EAAA,cAAiB,EAAjB,WAAgC,EAAhC,eAAmD,EAPR,eAQ3C,EAAA,cAAiB,EAAjB,WAAgC,EAAhC,mBAAuD,EARZ,SAS3C,EAAA,cAAiB,EAAjB,WAAgC,EAAhC,mBAAuD,EATZ,SAY3C,EAAA,WAAc,EAAd,WAAA,EAAgC,EAAhC,KAAyC,EAAzC,KAAkD,EAAlD,cAZ2C,GAAA,EAgB7C,GAAA,GA/C6C,EAgD7C,aACE,GAAA,EAAe,OAKf,EAAgB,SAAA,cANI,UAOpB,EAAY,EAAA,WAAA,QAAkC,CAC5C,mBARkB,KAYtB,GAAI,GACF,m0BAeE,EACF,msDA6BE,EA1GyC,KA4G7C,aACE,GAAA,GADqB,EAGrB,IACA,EAJqB,EAKrB,EALqB,KAMrB,EANqB,EAOrB,EAPqB,KAUrB,GAAI,GAAe,EAAA,EAVE,GAWjB,EAAiB,EAAA,EAXA,GAYjB,EAAU,EAAA,EAAkB,CAAA,EAAA,IAChC,EAAA,WAbqB,GAerB,GAAI,GAfiB,GAgBrB,EAAA,GAhBqB,EAiBrB,EAAA,OAjBqB,EAkBrB,EAAA,mBAA2B,EAAA,mBAAA,EAlBN,gBAmBrB,EAAA,iBAAyB,EAAA,kBAAA,EAnBJ,cAoBrB,EAAA,iBAAyB,EAAA,mBAAA,EApBJ,cAqBrB,EAAA,gBAAwB,EAAA,mBAAA,EArBH,aAuBrB,GAAI,GAAmB,EAAA,kBAAA,EAvBF,cAwBjB,EAAmB,EAAA,mBAAA,EAxBF,WAyBjB,EAAkB,EAAA,mBAAA,EAzBD,UA4BjB,EAAiB,EA5BA,eA6BrB,EAAA,WAAc,EAAd,aA7BqB,GA+BrB,EAAA,WAAc,EAAd,aAA+B,GAAA,cAAiB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAMlC,EArCO,aAsCrB,EAAA,wBAtCqB,GAuCrB,EAAA,oBAAA,EAAA,EAA4C,EAA5C,MAAA,GAAA,EAvCqB,GAyCrB,EAAA,UAAA,EAzCqB,GA0CrB,EAAA,UAAA,EA1CqB,GA4CrB,EA5CqB,EA+CvB,WAAA,EAAA,EAAA,GACE,GAAI,GAAQ,EAAZ,MACE,EAAS,EAFkC,OAI7C,AAAA,GACE,IAEF,GAAI,GAAJ,EACE,EAAS,EADX,OAEE,EAAK,EATsC,GAU7C,EAAA,MAV6C,EAW7C,EAAA,OAX6C,EAY7C,EAAA,SAAA,EAAA,EAAkB,EAAlB,mBAAyC,EAZI,qBAa7C,EAAA,UAAa,EAAb,mBAAA,EAb6C,GAe7C,AAAI,EAAJ,SACE,EAAA,UACE,EADF,mBAEE,EAAA,SAFF,GAGE,EAAA,SAHF,GAIE,EAAA,SAJF,GADuB,GASvB,EAAA,UAAa,EAAb,mBAAA,EAAA,EAAA,EADK,GAGP,EAAA,UACE,EADF,gBAEE,EAAA,UAAA,aAAA,EA5B2C,GAgC7C,GAAI,GAAU,EAAA,EAAA,EAAyB,EAhCM,UAiCzC,EAAc,EAAA,EAAA,EAAwB,EAjCG,UAqCzC,EAAS,EArCgC,eAsC7C,SAAA,WAAc,EAAd,aAtC6C,GAwC7C,EAAA,WAAc,EAAd,aAA+B,GAAA,cAAiB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAM7B,EA9C0B,aA+C7C,EAAA,wBAA2B,EA/CkB,kBAgD7C,EAAA,oBAAuB,EAAvB,iBAAA,EAAkD,EAAlD,MAAA,GAAA,EAhD6C,GAmD7C,EAAA,WAAA,EAAA,EAAA,EAnD6C,GAoD7C,EAAA,OAAU,EApDmC,OAqD7C,EAAA,UAAa,EAAb,IAAqB,EArDwB,qBAsD7C,EAAA,MAAS,EAtDoC,kBAwD7C,EAAA,WAAc,EAAd,UAAA,EAxD6C,GA0D7C,EA1D6C,QA4D7C,EAAA,cA5D6C,GA6D7C,EAAA,cA7D6C,GA8D7C,EAAA,aA9D6C,GAAA,EAmE/C,GAAI,GACF,mgCAkBE,EACF,mcASE,EA3PyC,KA6P7C,aACE,GAAA,GADuB,EAGvB,IACA,EAJuB,EAKvB,EALuB,KAMvB,EANuB,EAOvB,EAPuB,KAUvB,GAAI,GAAe,EAAA,EAVI,GAWnB,EAAiB,EAAA,EAXE,GAYnB,EAAU,EAAA,EAAkB,CAAA,EAAA,IAChC,EAAA,WAbuB,GAevB,GAAI,GAfmB,GAgBvB,EAAA,GAhBuB,EAiBvB,EAAA,OAjBuB,EAkBvB,EAAA,mBAA2B,EAAA,mBAAA,EAlBJ,gBAmBvB,EAAA,cAAsB,EAAA,mBAAA,EAnBC,WAoBvB,EAAA,eAAuB,EAAA,mBAAA,EApBA,YAqBvB,EAAA,iBAAyB,EAAA,kBAAA,EArBF,cAsBvB,EAAA,cAAsB,EAAA,kBAAA,EAtBC,WAwBvB,EAxBuB,EA2BzB,WAAA,EAAA,EAAA,EAAA,EAAA,GACE,AAAA,GACE,IAEF,GAAI,GAAJ,EACE,EAAS,EADX,OAEE,EAAK,EAN8D,GAQrE,EAAA,MARqE,EASrE,EAAA,OATqE,EAUrE,EAAA,SAAA,EAAA,EAAkB,EAAlB,mBAAyC,EAV4B,qBAWrE,EAAA,UAAa,EAAb,mBAAA,EAXqE,GAcrE,GAAI,GAdiE,EAerE,EAAA,EAfqE,EAgBrE,IAAK,EAAA,EAAO,EAAK,EAAjB,OAAiC,EAAjC,EAAyC,IACvC,OAAQ,EAAA,GAAR,UACE,UACE,EAAQ,EAAA,GAAA,OAAA,OAA2B,EAAA,GAA5B,eADT,EAEE,GAAU,GAAD,GAAc,GAAA,GAAA,eAAd,GAFX,EADF,UAKE,YACE,GAAS,EAAA,GAAA,OADX,OALF,MAWF,GAAI,GAAS,GAAA,cAAiB,EA5BuC,GA6BjE,EAAS,GAAA,YAAe,EA7ByC,GA8BjE,EAAY,EAAhB,OACE,EAAY,EA/BuD,OAgCjE,EAAJ,EACE,EAjCmE,EAkCrE,IAAK,EAAA,EAAO,EAAK,EAAjB,OAAiC,EAAjC,EAAyC,KACvC,GAAI,GAAS,EAAb,GACE,EAAK,EADP,OAEE,EAAK,EAHqC,OAI5C,OAAQ,EAAR,UACE,UACE,GAAI,GAAO,EADb,eAEE,EAAQ,EAAA,OAAD,EAFT,EAGE,OAAS,GAAT,EAAkB,EAAlB,EAA8B,IAE5B,OADI,GAAS,EAAA,EADsB,EAE1B,GAAT,EAAkB,GAAlB,EAA8B,KAAO,IACnC,EAAA,GAAiB,EAAU,EAAG,EAAA,EADe,IAE7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAA,EAAH,GAFc,GAG7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAHW,IAI7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GAJc,GAK7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EALW,IAM7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GANc,GAO7C,EAAA,GAAiB,EAAU,EAAG,EAAA,EAPe,IAQ7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAA,EAAH,GARc,GAS7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAA,EAAH,GATc,GAU7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAVW,IAW7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GAXc,GAY7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GAZc,GAa7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAbW,IAc7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GAdc,GAe7C,EAAO,EAAP,GAAqB,EAAU,EAAG,EAAH,GAfc,GAiB7C,EAAO,EAAP,GAAqB,EAAO,EAjBiB,GAkB7C,EAAO,EAAP,GAAqB,EAAO,EAlBiB,GAmB7C,EAAO,EAAP,GAAqB,EAAO,EAnBiB,GAoB7C,EAAO,EAAP,GAAqB,EAAO,EApBiB,GAqB7C,EAAO,EAAP,IAAsB,EAAU,EArBa,IAsB7C,EAAO,EAAP,IAAsB,EAAU,EAAA,GAtBa,GAuB7C,EAAO,EAAP,GAAqB,EAAO,EAvBiB,GAwB7C,EAAO,EAAP,IAAsB,EAAO,EAxBgB,GAyB7C,EAAO,EAAP,IAAsB,EAAO,EAzBgB,GA0B7C,EAAO,EAAP,IAAsB,EAAO,EA1BgB,GA2B7C,EAAO,EAAP,IAAsB,EAAO,EA3BgB,GA4B7C,EAAO,EAAP,IAAsB,EAAO,EA5BgB,GA6B7C,EAAO,EAAP,IAAsB,EAAU,EA7Ba,IA8B7C,EAAO,EAAP,IAAsB,EAAU,EAAA,GA9Ba,GA+B7C,EAAO,EAAP,IAAsB,EAAU,EAAA,GA/Ba,GAgC7C,GAhC6C,GAiC7C,GAjC6C,GANrD,UA2CE,YACE,OAAS,GAAJ,EAAW,GAAK,EAArB,OAAgC,EAAhC,GAAwC,IACtC,EAAA,GAAiB,EAAU,EADgB,IAE3C,EAAO,EAAP,GAAqB,EAAU,EAAA,GAFY,GAG3C,EAAA,GAAiB,EAAU,EAHgB,IAI3C,EAAO,EAAP,GAAqB,EAAU,EAAA,GAJY,GAK3C,EAAO,EAAP,GAAqB,EAAU,EAAA,GALY,GAM3C,GAN2C,EAO3C,GAP2C,EA5CjD,OA0DF,AAAA,EACE,EAAA,WACE,EAAA,GADF,IAEE,EAAA,GAFF,IAGE,EAAA,GAHF,IADmB,GAQnB,EAAA,WAAA,EAAA,EAAA,EADK,GAGP,EAAA,MAAS,EA1G4D,kBA4GrE,GAAI,IAAe,EA5GkD,eA6GrE,EAAA,WAAc,EAAd,aA7GqE,IA8GrE,EAAA,WAAc,EAAd,aAAA,EAAuC,EA9G8B,aA+GrE,EAAA,wBAA2B,EA/G0C,kBAgHrE,EAAA,oBAAuB,EAAvB,iBAAA,EAAkD,EAAlD,MAAA,GAAA,EAhHqE,GAkHrE,GAAI,IAAe,EAlHkD,eAmHrE,SAAA,WAAc,EAAd,aAnHqE,IAoHrE,EAAA,WAAc,EAAd,aAAA,EAAuC,EApH8B,aAqHrE,EAAA,wBAA2B,EArH0C,eAsHrE,EAAA,oBACE,EADF,cAAA,EAGE,EAHF,cAAA,GAAA,EAtHqE,GA+HrE,EAAA,UAAa,EAAb,cAAkC,EAAlC,OAAkD,EA/HmB,QAgIrE,EAAA,UAAa,EAAb,eAAmC,EAAnC,QAAoD,EAhIiB,SAkIrE,EAAA,WAAc,EAAd,UAAA,EAlIqE,GAoIrE,EApIqE,QAsIrE,EAAA,aAtIqE,IAuIrE,EAAA,aAvIqE,IAAA,EA4IvE,MAAO,CACL,YACE,IACE,WACO,CAAC,CAFN,QAGF,IACF,MALU,IADP,eAAA,cAaL,UACE,AAAI,GAAc,EAAlB,QACE,GAAA,OAAA,MADmC,EAEnC,EAAA,OAAA,OAFmC,GAIrC,AAAI,GAAgB,EAApB,QACE,GAAA,OAAA,MADuC,EAEvC,EAAA,OAAA,OAFuC,GAIzC,EATQ,KAUR,EAVQ,kHCndd,GAAA,GAAA,EAAA,GAOA,EAAA,EAAA,GAuBA,cAKE,QAAA,GACE,KAAM,GAAU,EAAA,KADQ,eAGxB,OAAA,OACO,GAAA,eAAL,KACE,MAAO,IAAA,GAFX,OAIO,GAAA,eAAL,KACE,MAAO,IAAA,GALX,OAOO,GAAA,eAAL,OACE,KAAM,GAAY,EAAA,KADpB,UAGE,OAAA,OACE,KACE,MAAO,IAAA,GAFX,OAGE,MACE,MAAI,GAAA,KAAJ,YACS,GAAA,GADwB,GAEtB,EAAA,KAAJ,SACE,GAAA,GAD4B,GAG9B,GAAA,GATX,OAUE,KACE,MAAO,IAAA,GAXX,GAaA,MAAO,IAAA,GAvBX,OAyBO,GAAA,eAAL,MACE,MAAO,IAAA,GA1BX,OA4BO,GAAA,eAAL,SACE,MAAO,IAAA,GA7BX,OA+BO,GAAA,eAAL,KACE,MAAO,IAAA,GAhCX,OAkCO,GAAA,eAAL,OACE,MAAO,IAAA,GAnCX,OAqCO,GAAA,eAAL,OACE,MAAO,IAAA,GAtCX,OAwCO,GAAA,eAAL,SACE,MAAO,IAAA,GAzCX,OA2CO,GAAA,eAAL,MACE,MAAO,IAAA,GA5CX,OA8CO,GAAA,eAAL,IACE,MAAO,IAAA,GA/CX,OAiDO,GAAA,eAAL,QACE,MAAO,IAAA,GAlDX,OAoDO,GAAA,eAAL,UACE,MAAO,IAAA,GArDX,OAuDO,GAAA,eAAL,UACE,MAAO,IAAA,GAxDX,OA0DO,GAAA,eAAL,SACE,MAAO,IAAA,GA3DX,OA6DO,GAAA,eAAL,UACE,MAAO,IAAA,GA9DX,OAgEO,GAAA,eAAL,MACE,MAAO,IAAA,GAjEX,OAmEO,GAAA,eAAL,eACE,MAAO,IAAA,GApEX,WAuEI,MAAO,IAAA,GAvEX,KA4EJ,QACE,YAAA,EAAwB,EAAxB,GAA8C,EAA9C,IACE,KAAA,aADkE,EAElE,KAAA,KAAY,EAFsD,KAGlE,KAAA,MAAa,EAHqD,MAIlE,KAAA,KAAY,EAJsD,KAKlE,KAAA,SAAgB,EALkD,SAMlE,KAAA,YAAmB,EAN+C,YAOlE,KAAA,gBAAuB,EAP2C,gBAQlE,KAAA,mBAA0B,EARwC,mBASlE,KAAA,uBAA8B,EAToC,uBAUlE,KAAA,WAAkB,EAVgD,WAYlE,AAAA,GACE,MAAA,UAAiB,KAAA,iBADD,IAapB,iBAAiB,EAAjB,IACE,KAAM,GAAO,KAAb,KACE,EAAO,KADT,KAEE,EAAW,KAHwB,SAI/B,EAAY,SAAA,cAJmB,WAKrC,GAAI,GAAQ,EAAA,KAAA,GAAe,EAAA,KALU,GAMjC,EAAS,EAAA,KAAA,GAAe,EAAA,KANS,GAQrC,EAAA,aAAA,qBAA6C,EARR,IAYrC,KAAM,GAAO,EAAA,KAAA,cAAmB,CAC9B,EAAA,KAD8B,GAE9B,EAAA,KAAA,GAAe,EAAA,KAAf,GAA8B,EAAA,KAFA,GAG9B,EAAA,KAH8B,GAI9B,EAAA,KAAA,GAAe,EAAA,KAAf,GAA8B,EAAA,KAJA,KAUhC,GAHA,EAAA,MAAA,UAA4B,UAAU,EAAA,UAAA,KAAV,QAC5B,EAAA,MAAA,gBAAkC,IAAI,EAAJ,SAAkB,EAAlB,OAE9B,CAAA,GAAiB,EAAA,YAAA,MAArB,GACE,EAAA,MAAA,YAA8B,GAAG,EAAA,YAAH,UAC9B,AAAI,EAAA,YAAA,QAA2B,EAAA,0BAA/B,WAIE,GAAQ,EAAQ,EAAI,EAAA,YAJ8C,MAKlE,EAAS,EAAS,EAAI,EAAA,YAL4C,OAQpE,KAAM,GAAmB,EAAA,YAVsB,uBAWzC,EAAiB,EAAA,YAXwB,qBAY/C,GAAI,EAAA,GAAwB,EAA5B,GACE,KAAM,GAAS,GAAA,SAAA,MACf,EAAA,MAAA,aAF8C,EAKhD,OAAQ,EAAA,YAAR,WACO,GAAA,0BAAL,MACE,EAAA,MAAA,YADF,QADF,UAKO,GAAA,0BAAL,OACE,EAAA,MAAA,YADF,SALF,UASO,GAAA,0BAAL,QACE,AAAA,GAAA,EAAA,MADF,uCATF,UAaO,GAAA,0BAAL,MACE,AAAA,GAAA,EAAA,MADF,qCAbF,UAiBO,GAAA,0BAAL,UACE,EAAA,MAAA,kBADF,QAjBF,cAAA,MAyBA,AAAI,EAAJ,MACE,EAAA,MAAA,YAA8B,EAAA,KAAA,WAC5B,EAAA,MAAA,GAD4B,EAE5B,EAAA,MAAA,GAF4B,EAG5B,EAAA,MAAA,GAJY,GAQd,EAAA,MAAA,YAFK,EAMT,SAAA,MAAA,KAAuB,GAAG,EAAH,OACvB,EAAA,MAAA,IAAsB,GAAG,EAAH,OACtB,EAAA,MAAA,MAAwB,GAAA,MACxB,EAAA,MAAA,OAAyB,GAAA,MA/EY,EA8FvC,aAAA,EAAA,EAAA,GAEE,AAAA,GACE,GAAU,SAAA,cADE,OAEZ,EAAA,MAAA,OAAuB,EAAA,MAFX,OAGZ,EAAA,MAAA,MAAsB,EAAA,MAHV,MAIZ,EAAA,YAJY,IAOd,KAAM,GAAe,GAAA,GAAiB,CAAA,YAAA,UAGpC,MAAO,EAH6B,MAIpC,MAAO,EAJ6B,MAKpC,iBAAkB,EALkB,iBAMpC,SAAU,EAN0B,SAOpC,YAPoC,KAShC,EAAQ,EAlBuB,SAqBrC,EAAA,MAAA,KAAmB,EAAA,MArBkB,MAuBrC,EAAA,YAvBqC,GAgCvC,SACE,AAAA,GAAA,EAAA,aADO,sDAKX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,KACA,EAAA,KADA,MAEA,EAAA,KAJoB,QAMtB,MAAA,EANsB,GAgBxB,SACE,KAAA,UAAA,UADO,iBAGP,KAAM,CAAA,OAAA,eAHC,KAID,EAAO,SAAA,cAJN,KAMP,MAAI,GAAJ,IACE,GAAA,EAAA,mBAAA,EAAwB,CACtB,IAAK,EADiB,IAEtB,OAAQ,EAAA,UACJ,EAAA,WADI,MAEJ,EAJkB,mBAKtB,IAAK,EALiB,gBAMtB,QAAS,EANa,sBAQnB,AAAI,EAAJ,OACL,KAAA,iBAAA,EAA4B,EADN,QAGtB,KAAA,UAAA,EAAqB,EADhB,MAIP,KAAA,UAAA,YArBO,GAsBA,KAtBA,UAiCT,UAAA,EAAA,GACE,EAAA,KAAY,KAAA,YAAA,mBADe,GAE3B,EAAA,QAAe,IACb,CAAA,GACE,KAAA,YAAA,WADe,GADE,IAMrB,AAAA,GACE,GAAA,UADe,gBAanB,iBAAA,EAAA,GACE,EAAA,KAAY,KAAA,YAAA,aADiB,IAE7B,EAAA,QAAe,IACb,MAAA,YAAA,mBADmB,GAAA,IAIrB,EAAA,UAN6B,gBAUjC,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EANsB,GAgBxB,SACE,KAAA,UAAA,UADO,iBAGP,KAAM,GAAQ,SAAA,cAHP,OAIP,SAAA,MAAA,OAAqB,KAAA,UAAA,MAJd,OAKP,EAAA,MAAA,MAAoB,KAAA,UAAA,MALb,MAMP,EAAA,IACE,KAAA,mBAAA,cAEA,KAAA,KAAA,KAFA,cAPK,OAWP,EAAA,IAXO,wBAYP,EAAA,QAAA,OAZO,uBAaP,EAAA,QAAA,SAAyB,KAAA,UAAe,CAAE,KAAM,KAAA,KAbzC,OAeP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,EAAyC,KADlB,MAIzB,KAAA,UAAA,YAnBO,GAoBA,KApBA,WAwBX,eAAA,GAQE,SAEE,MAAO,MAFA,WAMX,eAAA,GACE,YAAA,GACE,KAAM,GACJ,EAAA,wBACC,CAAC,EAAA,KAAD,eAAkC,CAAC,CAAC,EAAA,KAHjB,WAItB,MAAA,EAJsB,GAcxB,SACE,KAAM,GAAiB,CAAA,OAAA,SAAA,SAEvB,KAAA,UAAA,UAHO,uBAKP,GAAI,GALG,KAMP,GAAI,KAAJ,wBAoBE,GAhBA,AAAI,KAAA,KAAJ,UACE,GAAU,SAAA,cADa,YAEvB,EAAA,YAAsB,KAAA,KAFC,YAIvB,GAAU,SAAA,cADL,SAEL,EAAA,KAFK,OAGL,EAAA,aAAA,QAA8B,KAAA,KAHzB,aAMP,EAAA,SAAmB,KAAA,KAbY,SAc/B,EAAA,KAAe,KAAA,KAdgB,UAgB/B,AAAI,KAAA,KAAA,SAAJ,MACE,GAAA,UAAoB,KAAA,KADS,QAI3B,KAAA,KAAJ,MACE,KAAM,GAAa,KAAA,KAAA,KAAA,GAAoB,KAAA,KAAA,KADrB,GAEZ,EAAY,EAAa,KAAA,KAFb,OAIlB,EAAA,UAAA,IAJkB,QAKlB,EAAA,MAAA,cAA8B,QAAA,mBAGhC,EAAU,SAAA,cADL,OAEL,EAAA,YAAsB,KAAA,KAFjB,WAGL,EAAA,MAAA,cAHK,SAIL,EAAA,MAAA,QAJK,aAML,GAAI,GANC,KAOL,AACE,KAAA,KAAA,aACA,KAAA,KAAA,WAAA,IAAyB,KAAA,KAF3B,cAIE,GAAO,KAAA,KAAA,WAAA,IAAyB,KAAA,KADhC,cAGF,KAAA,cAAA,EAbK,GAgBP,MAAI,MAAA,KAAA,gBAAJ,MACE,GAAA,MAAA,UAA0B,EAAe,KAAA,KADL,gBAItC,KAAA,UAAA,YArDO,GAsDA,KAtDA,UAiET,cAAA,EAAA,GAEE,KAAM,GAAQ,EAFa,MAM3B,GAHA,EAAA,SAAiB,GAAG,KAAA,KAAH,aACjB,EAAA,UAAkB,KAAA,KAAA,cAAA,EAAA,MAJS,MAMvB,CAAJ,EAAW,OAIX,GAAI,GAVuB,SAW3B,AAAI,EAAJ,MACE,EADc,MAET,AAAI,EAAJ,MACL,GADoB,QAGtB,EAAA,WAhB2B,EAiB3B,EAAA,UAAkB,EAAA,OAAA,SAjBS,SAoB3B,KAAM,GAAa,EAAA,WAAkB,IAAI,EAAJ,gBApBV,GAqBrB,EAAe,EAAA,cArBM,wBAsB3B,EAAA,WAAmB,EAtBQ,GA0B/B,eAAA,GACE,YAAA,GACE,MAAA,EAAkB,EADI,wBAYxB,SACE,KAAA,UAAA,UADO,kCAGP,KAAM,GAAU,SAAA,cAHT,SAIP,SAAA,SAAmB,KAAA,KAJZ,SAKP,EAAA,KALO,WAMP,EAAA,KAAe,KAAA,KANR,UAOP,AAAI,KAAA,KAAA,YAAwB,KAAA,KAAA,aAA5B,OACE,EAAA,aAAA,UAD0D,IAI5D,KAAA,UAAA,YAXO,GAYA,KAZA,WAgBX,eAAA,GACE,YAAA,GACE,MAAA,EAAkB,EADI,wBAYxB,SACE,KAAA,UAAA,UADO,qCAGP,KAAM,GAAU,SAAA,cAHT,SAIP,SAAA,SAAmB,KAAA,KAJZ,SAKP,EAAA,KALO,QAMP,EAAA,KAAe,KAAA,KANR,UAOP,AAAI,KAAA,KAAA,aAAyB,KAAA,KAA7B,aACE,EAAA,aAAA,UADkD,IAIpD,KAAA,UAAA,YAXO,GAYA,KAZA,WAgBX,eAAA,GASE,SAIE,KAAM,GAAY,MAJX,SAKP,SAAA,UALO,oCAAA,GAUX,eAAA,GACE,YAAA,GACE,MAAA,EAAkB,EADI,wBAYxB,SACE,KAAA,UAAA,UADO,yBAGP,KAAM,GAAgB,SAAA,cAHf,UAIP,EAAA,SAAyB,KAAA,KAJlB,SAKP,EAAA,KAAqB,KAAA,KALd,UAOP,AAAK,KAAA,KAAL,OAEE,GAAA,KAAqB,KAAA,KAAA,QAFD,OAGpB,AAAI,KAAA,KAAJ,aACE,GAAA,SADyB,KAM7B,SAAA,KAAqB,MAAA,KAArB,SACE,KAAM,GAAgB,SAAA,cADgB,UAEtC,EAAA,YAA4B,EAFU,aAGtC,EAAA,MAAsB,EAHgB,YAItC,AAAI,KAAA,KAAA,WAAA,SAA8B,EAAlC,eACE,EAAA,aAAA,WADsD,IAGxD,EAAA,YAPsC,GAUxC,YAAA,UAAA,YA1BO,GA2BA,KA3BA,WA+BX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CAAE,GAAA,KAAA,OAAyB,EAAA,KAD3B,UAEtB,MAAA,EAFsB,GAYxB,SAGE,KAAM,GAAe,CAAA,OAAA,SAAA,SAAA,WAAA,UAAA,OAWrB,GAFA,KAAA,UAAA,UAZO,kBAcH,EAAA,SAAsB,KAAA,KAA1B,YACE,MAAO,MADwC,UAIjD,KAAM,GAAW,wBAAwB,KAAA,KAAxB,aACX,EAAgB,KAAA,MAAA,cAnBf,GAoBP,GAAI,CAAJ,EACE,MAAO,MADW,UAIpB,KAAM,GAAQ,GAAA,GAAiB,CAC7B,UAAW,KADkB,UAE7B,QAF6B,EAG7B,MAAO,KAAA,KAHsB,MAI7B,MAAO,KAAA,KAJsB,MAK7B,iBAAkB,KAAA,KALW,iBAM7B,SAAU,KAAA,KANmB,WAWzB,EAAa,WAAW,EAAA,MAnCvB,MAoCD,EAAc,WAAW,EAAA,MApCxB,OAqCP,YAAA,UAAA,MAAA,gBAAuC,IAAI,EAAJ,QACrC,EAAA,MADqC,MAGvC,KAAA,UAAA,MAAA,KAA4B,GAAG,EAAH,MAE5B,KAAA,UAAA,YAA2B,EA1CpB,UA2CA,KA3CA,WA+CX,QACE,YAAA,GACE,KAAA,UAAiB,EADK,UAEtB,KAAA,QAAe,EAFO,QAGtB,KAAA,MAAa,EAHS,MAItB,KAAA,MAAa,EAJS,MAKtB,KAAA,iBAAwB,EALF,iBAMtB,KAAA,SAAgB,EANM,SAOtB,KAAA,YAAmB,EAAA,aAPG,GAStB,KAAA,OATsB,GAmBxB,SACE,KAAM,GADC,GAGD,EAAU,SAAA,cAHT,OAIP,EAAA,UAJO,eAUP,KAAA,YAAmB,KAAA,YAAA,EAA6B,KAVzC,UAWP,KAAA,YAAA,aAAA,SAXO,IAaP,KAAM,GAAQ,SAAA,cAbP,OAcP,EAAA,UAdO,QAgBP,KAAM,GAAQ,KAhBP,MAiBP,GAAA,GAEE,KAAM,GAAI,EAAsB,KAAM,EAA5B,IAAwC,EAFzC,GAGH,EAAI,EAAsB,KAAM,EAA5B,IAAwC,EAHzC,GAIH,EAAI,EAAsB,KAAM,EAA5B,IAAwC,EAJzC,GAKT,EAAA,MAAA,gBAA8B,EAAA,KAAA,WAAgB,EAAhB,EAAuB,EAAvB,EAA8B,EALnD,GAQX,KAAM,GAAQ,SAAA,cAzBP,MA0BP,EAAA,YAAoB,KA1Bb,MA2BP,EAAA,YA3BO,GAgCP,KAAM,GAAa,EAAA,cAAA,aAA2B,KAhCvC,kBAiCP,GAAA,GACE,KAAM,GAAmB,SAAA,cADX,QAEd,EAAA,YAFc,qBAGd,EAAA,QAAA,OAHc,yBAId,EAAA,QAAA,SAAoC,KAAA,UAAe,CACjD,KAAM,EAD2C,qBAEjD,KAAM,EAF2C,uBAInD,EAAA,YARc,GAWhB,KAAM,GAAW,KAAA,gBAAqB,KA5C/B,UA6CP,SAAA,YA7CO,GAgDP,KAAA,QAAA,iBAAA,QAAuC,KAAA,QAAA,KAhDhC,OAiDP,KAAA,QAAA,iBAAA,YAA2C,KAAA,MAAA,KAAA,KAjDpC,KAkDP,KAAA,QAAA,iBAAA,WAA0C,KAAA,MAAA,KAAA,KAlDnC,KAmDP,EAAA,iBAAA,QAAgC,KAAA,MAAA,KAAA,KAnDzB,KAqDP,EAAA,YArDO,GAAA,EAiET,gBAAA,GACE,KAAM,GAAI,SAAA,cADc,KAElB,EAAQ,EAAA,MAFU,gBAGxB,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAmC,EAAnC,EAA2C,EAA3C,GACE,KAAM,GAAO,EADiC,GAE9C,EAAA,YAAc,SAAA,eAFgC,IAG9C,AAAI,EAAI,EAAR,GACE,EAAA,YAAc,SAAA,cADA,OAIlB,MAVwB,GAmB1B,UACE,AAAI,KAAJ,OACE,KAAA,MADe,IAGf,KAAA,MADK,IAYT,MAAM,EAAN,IACE,AAAA,GACE,MAAA,OADO,IAGT,AAAI,KAAA,YAAA,aAAJ,WACE,MAAA,YAAA,gBAD2C,UAE3C,KAAA,UAAA,MAAA,QAF2C,GAa/C,MAAM,EAAN,IACE,AAAA,GACE,MAAA,OADS,IAGX,AAAI,CAAC,KAAA,YAAA,aAAD,WAA4C,CAAC,KAAjD,QACE,MAAA,YAAA,aAAA,SAD4D,IAE5D,KAAA,UAAA,MAAA,QAF4D,IAOlE,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,qBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,KAAA,UAAA,UADO,iBAMP,KAAM,GAAO,KANN,KAOD,EAAQ,EAAA,KAAA,GAAe,EAAA,KAPtB,GAQD,EAAS,EAAA,KAAA,GAAe,EAAA,KARvB,GASD,EAAM,KAAA,WAAA,OAAA,EATL,GAaD,EAAO,KAAA,WAAA,cAbN,YAcP,SAAA,aAAA,KAAwB,EAAA,KAAA,GAAe,EAAA,gBAdhC,IAeP,EAAA,aAAA,KAAwB,EAAA,KAAA,GAAe,EAAA,gBAfhC,IAgBP,EAAA,aAAA,KAAwB,EAAA,KAAA,GAAe,EAAA,gBAhBhC,IAiBP,EAAA,aAAA,KAAwB,EAAA,KAAA,GAAe,EAAA,gBAjBhC,IAoBP,EAAA,aAAA,eAAkC,EAAA,YAAA,OApB3B,GAqBP,EAAA,aAAA,SArBO,eAuBP,EAAA,YAvBO,GAwBP,KAAA,UAAA,OAxBO,GA4BP,KAAA,aAAkB,KAAlB,UAAA,EA5BO,GA8BA,KA9BA,WAkCX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,KAAA,UAAA,UADO,mBAMP,KAAM,GAAO,KANN,KAOD,EAAQ,EAAA,KAAA,GAAe,EAAA,KAPtB,GAQD,EAAS,EAAA,KAAA,GAAe,EAAA,KARvB,GASD,EAAM,KAAA,WAAA,OAAA,EATL,GAcD,EAAc,EAAA,YAdb,MAeD,EAAS,KAAA,WAAA,cAfR,YAgBP,SAAA,aAAA,IAAyB,EAhBlB,GAiBP,EAAA,aAAA,IAAyB,EAjBlB,GAkBP,EAAA,aAAA,QAA6B,EAlBtB,GAmBP,EAAA,aAAA,SAA8B,EAnBvB,GAsBP,EAAA,aAAA,eAAoC,GAtB7B,GAuBP,EAAA,aAAA,SAvBO,eAwBP,EAAA,aAAA,OAxBO,QA0BP,EAAA,YA1BO,GA2BP,KAAA,UAAA,OA3BO,GA+BP,KAAA,aAAkB,KAAlB,UAAA,EA/BO,GAiCA,KAjCA,WAqCX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,KAAA,UAAA,UADO,mBAMP,KAAM,GAAO,KANN,KAOD,EAAQ,EAAA,KAAA,GAAe,EAAA,KAPtB,GAQD,EAAS,EAAA,KAAA,GAAe,EAAA,KARvB,GASD,EAAM,KAAA,WAAA,OAAA,EATL,GAcD,EAAc,EAAA,YAdb,MAeD,EAAS,KAAA,WAAA,cAfR,eAgBP,SAAA,aAAA,KAA0B,EAhBnB,GAiBP,EAAA,aAAA,KAA0B,EAjBnB,GAkBP,EAAA,aAAA,KAA0B,EAAA,EAAY,EAlB/B,GAmBP,EAAA,aAAA,KAA0B,EAAA,EAAa,EAnBhC,GAsBP,EAAA,aAAA,eAAoC,GAtB7B,GAuBP,EAAA,aAAA,SAvBO,eAwBP,EAAA,aAAA,OAxBO,QA0BP,EAAA,YA1BO,GA2BP,KAAA,UAAA,OA3BO,GA+BP,KAAA,aAAkB,KAAlB,UAAA,EA/BO,GAiCA,KAjCA,WAqCX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAQtB,KAAA,mBARsB,qBAStB,KAAA,eATsB,eAmBxB,SACE,KAAA,UAAA,UAA2B,KADpB,mBAMP,KAAM,GAAO,KANN,KAOD,EAAQ,EAAA,KAAA,GAAe,EAAA,KAPtB,GAQD,EAAS,EAAA,KAAA,GAAe,EAAA,KARvB,GASD,EAAM,KAAA,WAAA,OAAA,EATL,GAeP,GAAI,GAfG,GAgBP,SAAA,KAAyB,GAAzB,UACE,KAAM,GAAI,EAAA,EAAe,EAAA,KADa,GAEhC,EAAI,EAAA,KAAA,GAAe,EAFa,EAGtC,EAAA,KAAY,EAAA,IAH0B,GAKxC,EAAS,EAAA,KArBF,KAuBP,KAAM,GAAW,KAAA,WAAA,cAA8B,KAvBxC,gBAwBP,SAAA,aAAA,SAxBO,GA2BP,EAAA,aAAA,eAAsC,EAAA,YAAA,OA3B/B,GA4BP,EAAA,aAAA,SA5BO,eA6BP,EAAA,aAAA,OA7BO,QA+BP,EAAA,YA/BO,GAgCP,KAAA,UAAA,OAhCO,GAoCP,KAAA,aAAkB,KAAlB,UAAA,EApCO,GAsCA,KAtCA,WA0CX,eAAA,GACE,YAAA,GAEE,MAFsB,GAItB,KAAA,mBAJsB,oBAKtB,KAAA,eALsB,eAS1B,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,kBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAQtB,KAAA,mBARsB,gBAYtB,KAAA,eAZsB,eAsBxB,SACE,KAAA,UAAA,UAA2B,KADpB,mBAKP,KAAM,GAAO,KALN,KAMD,EAAQ,EAAA,KAAA,GAAe,EAAA,KANtB,GAOD,EAAS,EAAA,KAAA,GAAe,EAAA,KAPvB,GAQD,EAAM,KAAA,WAAA,OAAA,EARL,GAUP,SAAA,KAAsB,GAAtB,UAKE,GAAI,GAL+B,GAMnC,SAAA,KAAA,IACE,KAAM,GAAI,EAAA,EAAe,EAAA,KADO,GAE1B,EAAI,EAAA,KAAA,GAAe,EAFO,EAGhC,EAAA,KAAY,GAAA,KAAA,KAEd,EAAS,EAAA,KAX0B,KAanC,KAAM,GAAW,KAAA,WAAA,cAA8B,KAbZ,gBAcnC,EAAA,aAAA,SAdmC,GAiBnC,EAAA,aAAA,eAAsC,EAAA,YAAA,OAjBH,GAkBnC,EAAA,aAAA,SAlBmC,eAmBnC,EAAA,aAAA,OAnBmC,QAuBnC,KAAA,aAAkB,KAAlB,UAAA,EAvBmC,GAyBnC,EAAA,YAzBmC,GA4BrC,YAAA,UAAA,OAtCO,GAuCA,KAvCA,WA2CX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,sBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,sBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,qBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,sBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,KAAM,GAAe,CAAC,CACpB,GAAA,KAAA,UACA,EAAA,KADA,OAEA,EAAA,KAJoB,UAMtB,MAAA,EAAA,EANsB,IAgBxB,SACE,YAAA,UAAA,UADO,kBAGP,AAAK,KAAA,KAAL,UACE,KAAA,aAAkB,KAAlB,UAAA,KAAwC,KADjB,MAGlB,KANA,WAUX,eAAA,GACE,YAAA,GACE,MAAA,EADsB,IAGtB,KAAM,CAAA,WAAA,WAAwB,KAAA,KAHR,KAItB,KAAA,SAAgB,GAAA,EAAA,oBAJM,GAKtB,KAAA,QALsB,EAOtB,AAAI,KAAA,YAAJ,UACE,KAAA,YAAA,SAAA,SAAA,2BAA+D,CAC7D,OAD6D,KAE7D,GAAI,GAAA,EAAA,mBAFyD,GAAA,WAAA,YAiBnE,SACE,KAAA,UAAA,UADO,2BAGP,KAAM,GAAU,SAAA,cAHT,OAIP,SAAA,MAAA,OAAuB,KAAA,UAAA,MAJhB,OAKP,EAAA,MAAA,MAAsB,KAAA,UAAA,MALf,MAMP,EAAA,iBAAA,WAAqC,KAAA,UAAA,KAN9B,OAQP,AAAI,CAAC,KAAA,KAAD,UAAwB,MAAA,KAAA,OAAmB,KAAA,KAA/C,WACE,KAAA,aAAkB,KAAlB,UAAA,EAA2C,KADuB,MAIpE,KAAA,UAAA,YAZO,GAaA,KAbA,UAsBT,YACE,GAAI,CAAC,KAAL,iBACE,AAAA,GAAA,EAAA,MADyB,kEAAA,OAI3B,KAAA,gBAAA,aAAkC,KAAlC,QAAgD,KAAhD,SALU,KAsBd,cAQE,QAAA,GACE,KAAM,GAAN,GACE,EAFsB,GAMxB,SAAA,KAAmB,GAAnB,aACE,GAAI,CAAJ,EAAW,SAGX,GAAI,EAAA,iBAAwB,EAAA,eAA5B,OACE,EAAA,KADgD,GAAA,SAIlD,EAAA,KARyC,GAU3C,AAAI,EAAJ,QACE,EAAA,KAAuB,GADI,GAI7B,SAAA,KAAA,IACE,KAAM,GAAU,EAAA,OAAgC,CAAA,OAE9C,MAAO,EAFuC,IAG9C,KAAM,EAHwC,KAI9C,SAAU,EAJoC,SAK9C,YAAa,EALiC,YAM9C,gBAAiB,EAN6B,gBAO9C,mBAAoB,EAAA,oBAP0B,GAQ9C,uBAAwB,EAAA,wBARsB,GAS9C,WAAY,GATkC,GAAA,gBAWhD,AAAI,EAAJ,cACE,EAAA,IAAA,YAA2B,EADH,iBAa9B,QAAA,GACE,SAAA,KAAmB,GAAnB,aACE,KAAM,GAAU,EAAA,IAAA,cACd,wBAAwB,EAAxB,QAEF,AAAA,GACE,GAAA,MAAA,UAA0B,UAAU,EAAA,SAAA,UAAA,KAAV,SAK9B,EAAA,IAAA,gBAXwB,uIC36C5B,GAAA,GAAA,EAAA,GA4BI,EAAmB,WACrB,GAAI,GADmD,IAGnD,EAHmD,KAKvD,WAAA,GACE,MAAO,CAAC,EAAA,KADoB,GAI9B,WAAA,EAAA,EAAA,GAEE,GAAI,GAAU,SAAA,cAFwB,QAGlC,EAAoB,CACtB,MADsB,EAEtB,YAFsB,EAGtB,aAHsB,GAItB,kBAJsB,KAKtB,cALsB,EAMtB,YANsB,EAOtB,aAPsB,EAQtB,WARsB,EAStB,MATsB,GAaxB,GADA,EAAA,UAAA,KAfsC,GAgBlC,EAAgB,EAApB,MACE,EAAA,aAD6B,GAE7B,EAAA,mBAAA,IAAA,EAF6B,GAAA,OAM/B,GAAI,GAAK,EAAA,KAAA,UAAe,EAAA,UAAf,UAAyC,EAtBZ,WAuBlC,EAAQ,KAAA,MAAW,EAAX,GAAkB,EAvBQ,IAwBlC,EAAQ,EAAO,EAxBmB,UAyBtC,AAAI,EAAJ,UACE,IAAS,KAAA,GADS,GAGpB,GAAI,GAAa,KAAA,KAAU,EAAA,GAAQ,EAAR,GAAgB,EAAA,GAAQ,EA5Bb,IA6BlC,EA7BkC,EA8BtC,AAAI,EAAJ,OACE,EAAa,EAAA,OADG,EAEX,AAAI,EAAJ,SACL,GAAc,GAAI,EAAL,SADW,GAI1B,GAAA,GApCsC,EAqCtC,AAAI,IAAJ,EACE,GAAO,EADQ,GAEf,EAAM,EAAA,GAFS,GAIf,GAAO,EAAA,GAAQ,EAAa,KAAA,IADvB,GAEL,EAAM,EAAA,GAAQ,EAAa,KAAA,IAFtB,IAMP,EAAA,MAAA,KAAqB,GAAA,MACrB,EAAA,MAAA,IAAoB,GAAA,MACpB,EAAA,MAAA,SAAyB,GAAA,MACzB,EAAA,MAAA,WAA2B,EAjDW,WAmDtC,EAAA,YAAsB,EAnDgB,IAsDtC,AAAI,EAAJ,uBACE,GAAA,QAAA,SAA2B,EADG,UAGhC,AAAI,IAAJ,GACE,GAAA,MAA0B,EAAS,KAAM,KAD1B,KAMjB,GAAI,GA/DkC,GAgEtC,GAAI,EAAA,IAAA,OAAJ,EACE,EADuB,WAEd,EAAA,UAAA,KAAsB,EAAA,UAA1B,IACL,KAAM,GAAY,KAAA,IAAS,EAAA,UAA3B,IACE,EAAY,KAAA,IAAS,EAAA,UAF2B,IAKlD,AACE,IAAA,GACA,KAAA,IAAA,EAAA,GAAiC,KAAA,IAAA,EAAjC,GAFF,KAIE,GADA,IAgBJ,GAZA,AAAA,GACE,CAAI,EAAJ,SACE,EAAA,YAAgC,EAAA,OAAc,EAAA,UAD5B,MAGlB,EAAA,YAAgC,EAAA,MAAa,EAAA,UADxC,OAIT,EAAA,mBAAA,IAAA,EArFsC,GAsFtC,AAAI,EAAJ,oBACE,EAAA,YAD2B,GAIzB,EAAJ,uBACE,GAAI,GAAJ,EACE,EAF4B,EAG9B,AAAI,IAAJ,GACE,GAAW,KAAA,IADI,GAEf,EAAW,KAAA,IAFI,IAIjB,GAAI,GACD,GAAA,SAAiB,EAAjB,OAA+B,EAAhC,OAA8C,EAAA,UARlB,MAS1B,EAT0B,EAW9B,EAX8B,EAY9B,AAAI,IAAJ,EACE,GAAI,CAAA,EAAA,EAAqB,CAArB,EAAA,EAAA,EAAA,GACJ,EAAI,EAAA,KAAA,2BAAgC,CAAA,EAAA,EAAA,EAAA,GAFrB,IAIf,EAAI,CAAA,EAAA,EAAY,EAAZ,EAA6B,EAA7B,GAGN,EAAA,QAAA,KAAkB,CAChB,KAAM,EADU,GAEhB,IAAK,EAFW,GAGhB,MAAO,EAHS,GAIhB,OAAQ,EAJQ,GAKhB,IALgB,EAMhB,KAAM,CAAA,EAAA,GANU,OAYtB,WAAA,GACE,GAAI,EAAJ,UAAoB,OAGpB,GAAI,GAAW,EAJK,UAKhB,EAAa,EALG,YAMhB,EAAiB,EAND,OAUpB,GAAI,EAAJ,GACE,EAAA,eAD4C,GAE5C,EAF4C,UAAA,OAM9C,GAAI,CAAC,EAAL,mBACE,OAAS,GAAT,EAAgB,EAAhB,EAAoC,IAClC,EAAA,YAAiB,EADsB,IAK3C,EAAA,eAtBoB,GAuBpB,EAvBoB,UA0BtB,WAAA,EAAA,EAAA,GACE,GAAI,GADsC,EAE1C,OAAS,GAAT,EAAgB,EAAhB,EAA2B,KACzB,KAAM,GAAI,EAAG,KACb,AAAI,EAAJ,GACE,GAAS,EAAS,KAAA,IAAA,EAAT,GADA,GAIb,MAR0C,GAW5C,WAAA,GAKE,OAJI,GAAS,EADO,QAEhB,EAAW,EAFK,UAIhB,EAAW,EAAa,EAAb,MAA6B,EAA7B,OAJK,GAKX,EAAT,EAAgB,EAAI,EAApB,OAAqC,KACnC,GAAI,GAAM,EAAA,GAD8B,IAEpC,EAAgB,EAAA,mBAAA,IAFoB,GAGxC,GAAI,EAAA,QAAJ,GACE,EAAA,YAA4B,EAAA,GAAA,KAAiB,EAAA,GADhB,KAE7B,EAAA,WAA2B,EAAA,GAAA,IAAgB,EAAA,GAFd,IAG7B,EAAA,aAA6B,EAAA,GAAA,MAAoB,EAAA,GAHpB,MAI7B,EAAA,cAA8B,EAAA,GAAA,OAAqB,EAAA,GAJtB,OAK7B,EAAA,mBAAA,IAAA,EAL6B,GAAA,SAU/B,GAAI,GAAI,EAAR,GACE,EAAI,EAdkC,GAepC,EAAI,EAAR,EACE,EAAI,EADN,GAEE,EAAI,EAjBkC,GAmBpC,EAAS,CAAC,CAAA,EAAA,GAAQ,CAAA,EAAI,EAAA,KAAJ,IAAgB,CAAC,EAAA,KAAD,GAAA,GAAgB,EAAzC,MACT,EAAK,GAAA,cApB+B,IAqBxC,EAAA,QAAe,SAAA,EAAA,GACb,GAAI,GAAI,EAAA,KAAA,eAAA,EADqB,GAE7B,EAAG,EAAH,GAAY,GAAM,GAAA,KAAS,EAAV,IAFY,EAG7B,EAAG,EAAH,GAAY,GAAM,GAAA,IAAQ,EAAT,IAHY,EAI7B,EAAG,EAAH,GAAY,GAAM,GAAA,MAAU,EAAX,IAJY,EAK7B,EAAG,EAAH,IAAa,GAAM,GAAA,OAAW,EAAZ,IALW,EAO7B,EAAG,EAAH,IAAa,GAAM,GAAA,KAAS,EAAV,IAAkB,CAPP,EAQ7B,EAAG,EAAH,IAAa,GAAM,GAAA,IAAQ,EAAT,IARW,EAS7B,EAAG,EAAH,IAAa,GAAM,GAAA,MAAU,EAAX,IAAmB,CATR,EAU7B,EAAG,EAAH,IAAa,GAAM,GAAA,OAAW,EAAZ,IAVW,EAY7B,EAAG,EAAH,IAAa,GAAM,GAAA,KAAS,EAAV,IAAkB,CAZP,EAa7B,EAAG,EAAH,IAAa,GAAM,GAAA,IAAQ,EAAT,IAAiB,CAbN,EAc7B,EAAG,EAAH,IAAa,GAAM,GAAA,MAAU,EAAX,IAAmB,CAdR,EAe7B,EAAG,EAAH,IAAa,GAAM,GAAA,OAAW,EAAZ,IAAoB,CAfT,EAiB7B,EAAG,EAAH,IAAa,GAAM,GAAA,KAAS,EAAV,IAjBW,EAkB7B,EAAG,EAAH,IAAa,GAAM,GAAA,IAAQ,EAAT,IAAiB,CAlBN,EAmB7B,EAAG,EAAH,IAAa,GAAM,GAAA,MAAU,EAAX,IAnBW,EAoB7B,EAAG,EAAH,IAAa,GAAM,GAAA,OAAW,EAAZ,IAAoB,CApBT,IAwB/B,GAAI,GAAW,EAAI,KAAA,IAAS,KAAA,IAAT,GAAsB,KAAA,IA7CD,IA8CxC,EAAA,YAA4B,EAAA,EAAA,GAAA,IA9CY,EA+CxC,EAAA,WAA2B,EAAA,EAAA,GAAA,IA/Ca,EAgDxC,EAAA,aAA6B,EAAA,EAAA,EAAA,IAhDW,EAiDxC,EAAA,cAA8B,EAAA,EAAA,GAAA,IAjDU,EAkDxC,EAAA,mBAAA,IAAA,EAlDwC,IAsD5C,WAAA,EAAA,EAAA,GACE,GAAI,GAAS,EAAA,IAAU,SAAA,EAAA,GACrB,MAAO,CACL,GAAI,EADC,KAEL,GAAI,EAFC,IAGL,GAAI,EAHC,MAIL,GAAI,EAJC,OAKL,MALK,EAML,MANK,OAOL,MAPK,UAUT,EAAA,EAZ0C,GAa1C,GAAI,GAAW,GAAA,OAAU,EAbiB,QAc1C,SAAA,QAAe,SAAA,GACb,GAAI,GAAI,EADkB,MAE1B,EAAA,GAAc,CACZ,KAAM,EADM,MAEZ,IAFY,EAGZ,MAAO,EAHK,MAIZ,OAJY,KAUhB,EAAA,IAAU,SAAA,EAAA,GACR,GAAI,GAAI,EAAR,GACE,EAAI,EAFoB,GAG1B,EAAA,GAAO,EAHmB,IAI1B,EAAA,GAAO,EAAQ,EAJW,MAK1B,EAAA,GAAO,EALmB,OAM1B,EAAA,GAAO,EAAQ,EANW,KAO1B,EAAA,MAP0B,EAQ1B,EAAA,MAR0B,OAS1B,EAAA,MAT0B,SAW5B,EAAA,EArC0C,GAuC1C,EAAA,QAAe,SAAA,GACb,GAAI,GAAI,EADkB,MAE1B,EAAA,GAAA,IAAkB,EAFQ,MAG1B,EAAA,GAAA,OAAqB,EAHK,QAvCc,EA+C5C,WAAA,EAAA,GAEE,EAAA,KAAY,SAAA,EAAA,GACV,MAAO,GAAA,GAAO,EAAP,IAAe,EAAA,MAAU,EADN,QAK5B,GAAI,GAAe,CACjB,GAAI,UACJ,GAAI,UACJ,GAHiB,EAIjB,GAJiB,SAKjB,MAAO,GACP,MANiB,EAOjB,MAPiB,GASf,EAAU,CACZ,CACE,MAAO,UACP,IAFF,SAGE,SAHF,IAOF,EAAA,QAAe,SAAA,GAIb,OADI,GAH6B,EAI1B,EAAI,EAAJ,QAAsB,EAAA,GAAA,KAAkB,EAA/C,IACE,IAGF,OADI,GAAI,EAAA,OAPyB,EAQ1B,GAAA,GAAU,EAAA,GAAA,OAAoB,EAArC,IACE,IAGF,GAAA,GAZiC,EAajC,EAAA,EAEE,EAAU,UACZ,IAAK,EAAL,EAAY,GAAZ,EAAoB,KAClB,EAAc,EADS,GAEvB,EAAmB,EAFI,SAGvB,GAHuB,GAIvB,AAAI,EAAA,GAAsB,EAA1B,GAIE,EACE,EAAA,MAAyB,EAAzB,MACI,EADJ,MAEI,EAP+B,GAQhC,AAAI,EAAA,QAAJ,OAGL,EAAQ,GAAA,GAAsB,EAAvB,IAHwC,EAM/C,EAAO,EAFF,MAIP,AAAI,EAAJ,GACE,GADkB,GAStB,IAHA,EAAA,MA1CiC,EA6C5B,EAAL,EAAY,GAAZ,EAAoB,IAClB,EAAc,EADS,GAEvB,EAAmB,EAFI,SAGvB,AAAI,EAAA,QAAJ,OAEE,AAAI,EAAA,GAAsB,EAA1B,GAGE,AAAI,EAAA,MAAyB,EAA7B,OACE,GAAA,MAAyB,EADkB,IAI7C,EAAA,MADK,EAGF,AAAI,EAAA,MAAJ,GAEL,GAAA,MAAyB,KAAA,IAAA,EAAkB,EAFA,KAO/C,GAAI,GAAJ,GACE,EAnE+B,KAoEjC,IAAK,EAAL,EAAY,GAAZ,EAAoB,KAClB,EAAc,EADS,GAEvB,EAAmB,EAFI,SAIvB,GAAI,GACF,EAAA,GAAsB,EAAtB,GAAA,EALqB,EAMvB,AAAI,IAAJ,EAEE,EAAe,EAAA,OAAf,GAAA,IAAgD,EAFhB,IAIhC,GAAA,KAAoB,CAClB,MAAO,EADW,MAElB,IAAK,EAFa,IAGlB,SAHkB,IAKpB,EANK,GA6BT,IApBA,AAAI,EAAA,GAAA,MAAmB,EAAvB,IACE,GAAA,GAAA,MAA0B,EADQ,GAElC,EAAA,QAAuB,CACrB,MAAO,EAAA,GADc,MAErB,IAAK,EAFgB,GAGrB,SAAU,EAAA,GAHW,YAMzB,AAAI,EAAA,GAAc,EAAA,GAAlB,KACE,GAAe,EAAA,OAAf,GAAA,IAAgD,EADhB,GAEhC,EAAA,KAAoB,CAClB,MAAO,EADW,GAElB,IAAK,EAAA,GAFa,IAGlB,SAAU,EAAA,GAHQ,YAUjB,EAAL,EAAY,GAAZ,EAAoB,KAGlB,GAFA,EAAc,EADS,GAEvB,EAAmB,EAFI,SAGnB,EAAA,QAAJ,OAA0C,SAG1C,GAAI,GANmB,GAOvB,IACE,EAAI,EADN,EAEE,CAAA,GAAS,GAAT,GAAmB,EAAA,GAAA,OAAoB,EAFzC,GAGE,IAEA,EAAO,EAAA,GAAA,WADP,EAGF,IACE,EAAI,EADN,EAEE,CAAA,GAAS,EAAI,EAAb,QAA+B,EAAA,GAAA,KAAkB,EAFnD,GAGE,IAEA,EAAO,EAAA,GAAA,WADP,EAGF,IAAK,EAAL,EAAY,CAAA,GAAS,EAAI,EAAzB,OAAgD,IAC9C,EAAO,EAAA,GAAA,WAD4C,EAGrD,AAAA,GACE,GAAA,MADS,GAKb,MAAA,UAAA,OAAA,MAAA,EAEE,CAAA,EAAI,EAAA,EAAJ,GAAA,OAzI+B,MA8InC,EAAA,QAAgB,SAAA,GACd,GAAI,GAAmB,EADc,SAErC,AAAI,EAAA,QAAJ,QACE,GAAA,MAAyB,KAAA,IAAA,EAAgB,EADD,OAgB9C,WAA6B,CAAA,cAAA,oBAAA,YAAA,WAAA,WAAA,sBAA7B,yBASE,KAAA,aADC,EAED,KAAA,mBAFC,EAGD,KAAA,WAHC,EAID,KAAA,UAJC,EAKD,KAAA,UAAiB,GALhB,GAMD,KAAA,qBAA4B,GAN3B,GAOD,KAAA,sBAA6B,CAAC,CAP7B,EAQD,KAAA,sBAA6B,CAAC,CAC5B,YAAA,eAA4B,WAAA,cAT7B,SAYD,KAAA,QAZC,KAaD,KAAA,wBAbC,KAcD,KAAA,0BAdC,KAeD,KAAA,eAfC,KAgBD,KAAA,mBAA0B,GAhBzB,SAiBD,KAAA,eAjBC,GAkBD,KAAA,UAlBC,GAmBD,KAAA,YAnBC,GAAA,EAAA,2BAoBD,KAAA,aApBC,KAqBD,KAAA,QArBC,GAwBD,KAAA,YAAA,QAAA,QACW,KACP,AAAI,KAAJ,gBAGE,MAAA,eAAA,OAAA,MAHuB,EAIvB,KAAA,eAAA,OAAA,OAJuB,EAKvB,KAAA,eALuB,QAF7B,MAUS,QAIX,EAAA,UAAgC,IAC9B,WACE,MAAO,MAAA,YADK,SAId,OAAQ,WACN,KAAA,UADkC,GAElC,AAAI,KAAJ,SACE,MAAA,QAAA,OAAoB,GAAA,GAAA,eADJ,8BAEhB,KAAA,QAFgB,MAIlB,AAAI,KAAA,eAAJ,MACE,cAAa,KADiB,cAE9B,KAAA,aAF8B,MAIhC,KAAA,YAAA,OAAwB,GAAA,OAVU,+BAapC,cAAA,EAAA,GACE,OAAS,GAAJ,EAAW,EAAM,EAAtB,OAAoC,EAApC,EAA6C,IAC3C,KAAA,qBAAA,KAA+B,EAAA,GADiB,KAEhD,EAAA,KAAiB,EAAjB,GAFgD,IAMpD,YAAA,GACE,KAAM,GAAoB,KAAA,mBAAA,IADP,GAEnB,GAAI,EAAJ,aAAoC,OAIpC,GAAI,GANe,GAOnB,GAAI,EAAA,cAAJ,GACE,KAAM,CAAA,WAAA,cAA2B,EADM,MAIvC,AACE,KAAa,KAAb,yBACA,IAAe,KAFjB,4BAIE,MAAA,eAAA,KAA2B,GAAA,KAAA,IAC3B,KAAA,wBAFA,EAGA,KAAA,0BAHA,GAMF,KAAM,CAAA,SAAY,KAAA,eAAA,YAAgC,EAbX,aAevC,AAAI,EAAJ,GACE,GAAA,MAA0B,EAAA,YADb,EAEb,EAAY,UAAU,EAAV,UAGhB,AAAI,EAAA,QAAJ,GACE,GAAY,UAAU,EAAV,aAAA,KAEd,AAAI,EAAA,OAAJ,GACE,CAAI,KAAJ,uBACE,GAAA,kBAD8B,GAGhC,EAAA,MAAA,UAJwB,GAM1B,KAAA,mBAAA,IAAA,EApCmB,GAqCnB,KAAA,WAAA,YArCmB,IAwCrB,QAAS,SAAA,GACP,KAAM,GADoC,GAAA,EAAA,2BAE1C,GAAI,GAAa,OAAA,OAFyB,MAK1C,KAAM,GAAS,SAAA,cAL2B,UAc1C,GAJE,EAAA,UAVwC,GAY1C,KAAA,eAAsB,EAAA,WAAA,KAAwB,CAAE,MAZN,KActC,KAAJ,cACE,KAAM,GAAY,KAAA,aADG,MAEf,EAAa,KAAA,aAFE,OAGrB,KAAA,cAAA,EAHqB,GAIrB,EAJqB,kBAKZ,KAAJ,oBACL,KAAM,GAAO,KACX,KAAA,QAAA,OAAA,KAAyB,CAAC,CAAA,QAAD,WACvB,GAAA,GACE,EADQ,UAAA,OAKV,OAAA,OAAA,EAA0B,EANkB,QAO5C,KAAA,cAAmB,EAAnB,MAP4C,GAQ5C,KACC,EAVc,SAanB,KAAA,QAAe,KAAA,mBAdmB,YAelC,QAEA,MAAM,IAAA,OACJ,uEAKJ,EAAA,QAAA,KAAwB,KACtB,EAD4B,KAE5B,AAAA,EAKE,KAAA,aAAoB,WAAW,KAC7B,EADmC,MAEnC,KAAA,aAFmC,MAFhC,GADL,EAFY,OAUb,KAAA,YAtDuC,SAyD5C,eAAgB,SAAA,GACd,GAAI,CAAC,KAAD,uBAA+B,CAAC,KAApC,eAAyD,OAGzD,AAAI,KAAA,UAAJ,MACE,GADyB,MAEzB,KAAA,QAFyB,MAI3B,KAAM,GAAN,GACE,EAT0D,GAW5D,OAAS,GAAJ,EAAW,EAAK,KAAA,UAArB,OAA4C,EAA5C,EAAoD,KAClD,KAAM,GAAM,KAAA,UAD2C,GAEjD,EAAW,KAAA,mBAAA,IAFsC,GAIvD,GAAI,EAAJ,aAA2B,SAG3B,AAAA,EACE,GAAA,OADc,EAEd,EAAA,OAFc,EAId,AAAI,EAAJ,mBACE,EAAA,KAAkB,EADY,mBAGhC,AAAI,EAAA,WAAJ,EACE,GAAA,KAAgB,GAAG,EAAH,gBAChB,EAAA,KAAkB,cAAc,CAAC,EAAf,kBAElB,EAAA,KADK,GAGP,AAAI,EAAA,aAAJ,EACE,EAAA,KAAgB,GAAG,EAAA,aAAwB,EAA3B,WAEhB,EAAA,KADK,GAGP,AAAI,EAAA,cAAJ,EACE,EAAA,KAAgB,GAAG,EAAH,mBAEhB,EAAA,KADK,GAGP,AAAI,EAAA,YAAJ,EACE,GAAA,KAAgB,GAAG,EAAA,YAAuB,EAA1B,WAChB,EAAA,KACE,cAAc,CAAC,EAAD,YAAwB,EAAtC,aAGF,EAAA,KADK,GAIP,EAAA,MAAA,QAAoB,EAAA,KAhCN,KAiCd,AAAI,EAAJ,QACE,GAAA,MAAA,UAAsB,EAAA,KADC,OAIzB,GAAA,MAAA,QADK,KAEL,EAAA,MAAA,UAAsB,EAFjB,sBAeb,WAAA,GACE,GAAI,GAAO,GAAA,GAAwB,CACjC,YAAa,EADoB,YAEjC,kBAAmB,EAFc,kBAGjC,UAAW,EAHsB,UAIjC,SAAU,EAJuB,SAKjC,SAAU,EALuB,SAMjC,oBAAqB,EANY,oBAOjC,qBAAsB,EAPW,uBASnC,SAAA,QAAa,EAV4B,SAAA,EAc3C,MApsBuD,8HC1BzD,GAAA,GAAA,EAAA,GAjBA,EAAA,EAAA,GAAA,EAAA,EAAA,GA+BA,GAAI,GAAc,WAChB,KAAM,IAAA,OADsB,iDAImC,CAC/D,KAAM,GAAe,CACnB,UADmB,SAEnB,WAFmB,SAGnB,UAHmB,WAKf,EANyD,uCAOzD,EAPyD,+BAQzD,EAAkB,CAAA,OAAA,QAAA,UAClB,EAAmB,CAAA,QAAA,QAAA,SAEnB,EAAuB,WAC3B,KAAM,GAAa,GAAA,YAAe,CAAA,IAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAU5B,EAXiC,GAajC,EAAW,GAAA,YAbsB,KAcvC,OAAS,GAAT,EAAgB,EAAhB,IAAyB,KACvB,GAAI,GADwB,EAE5B,OAAS,GAAT,EAAgB,EAAhB,EAAuB,IACrB,AAAI,EAAJ,EACE,EAAI,WAAe,GAAD,EADT,WAGT,EAAK,GAAD,EADC,WAIT,EAAA,GAT4B,EAY9B,WAAA,EAAA,EAAA,GACE,GAAI,GAAM,GACV,OAAS,GAAT,EAAoB,EAApB,EAA6B,KAC3B,KAAM,GAAK,GAAM,EAAP,IADsB,IAE1B,EAAI,EAFsB,GAGhC,EAAO,IAAD,EAH0B,EAKlC,MAAO,GAAM,GAGf,WAAA,EAAA,EAAA,EAAA,GACE,GAAI,GAD2C,EAE/C,KAAM,GAAM,EAFmC,OAI/C,EAAA,GAAW,GAAD,GAJqC,IAK/C,EAAK,EAAL,GAAe,GAAD,GALiC,IAM/C,EAAK,EAAL,GAAe,GAAD,EANiC,IAO/C,EAAK,EAAL,GAAc,EAPiC,IAQ/C,GAR+C,EAU/C,EAAA,GAAU,EAAA,WAAA,GAVqC,IAW/C,EAAK,EAAL,GAAc,EAAA,WAAA,GAXiC,IAY/C,EAAK,EAAL,GAAc,EAAA,WAAA,GAZiC,IAa/C,EAAK,EAAL,GAAc,EAAA,WAAA,GAbiC,IAc/C,GAd+C,EAgB/C,EAAA,IAAA,EAhB+C,GAiB/C,GAAK,EAjB0C,OAmB/C,KAAM,GAAM,EAAA,EAAY,EAAZ,EAnBmC,GAoB/C,EAAA,GAAW,GAAD,GApBqC,IAqB/C,EAAK,EAAL,GAAe,GAAD,GArBiC,IAsB/C,EAAK,EAAL,GAAe,GAAD,EAtBiC,IAuB/C,EAAK,EAAL,GAAc,EAvBiC,IA0BjD,WAAA,EAAA,EAAA,GACE,GAAI,GAD6B,EAE7B,EAF6B,EAGjC,OAAS,GAAT,EAAoB,EAApB,EAA6B,EAA7B,EACE,EAAK,GAAK,GAAA,GAAN,MAD4B,MAEhC,EAAK,GAAD,GAF4B,MAIlC,MAAQ,IAAD,GAP0B,EAgBnC,WAAA,GACE,GAAI,CAAJ,EAAA,SAIE,MAAO,GAJM,GAMf,IAUE,GAVE,GAYF,AAAI,SAAS,QAAA,SAAT,OAAJ,EACE,EADwC,EAIxC,EAAQ,OAAA,KAFH,GAIP,KAAM,GAAS,KAAA,YAAA,EAAmD,CAChE,MAnBA,IAqBF,MAAO,aAAA,YAAA,EAAwC,GAAA,YArB7C,SAsBF,GACA,AAAA,GAAA,EAAA,MACE,gEAFQ,GAMZ,MAAO,GAnCsB,GAuC/B,WAAA,GACE,GAAI,GAAM,EAD+B,OAEzC,KAAM,GAFmC,MAInC,EAAgB,KAAA,KAAU,EAJS,GAKnC,EAAO,GAAA,YAAe,EAAA,EAAU,EAAV,EALa,GAMzC,GAAI,GANqC,EAOzC,EAAK,KAPoC,IAQzC,EAAK,KARoC,IAUzC,GAAI,GAVqC,EAWzC,KAAO,EAAP,GAEE,EAAK,KAFsB,EAG3B,EAAK,KAHsB,IAI3B,EAAK,KAJsB,IAK3B,EAAK,KALsB,EAM3B,EAAK,KANsB,EAO3B,EAAA,IAAS,EAAA,SAAA,EAAuB,EAAhC,GAP2B,GAQ3B,GAR2B,EAS3B,GAT2B,EAU3B,GAV2B,EAc7B,EAAK,KAzBoC,EA0BzC,EAAK,KAAQ,EA1B4B,IA2BzC,EAAK,KAAS,GAAD,EA3B4B,IA4BzC,EAAK,KAAQ,CAAA,EAAA,MA5B4B,IA6BzC,EAAK,KAAU,EAAA,EAAD,QAAD,EA7B4B,IA8BzC,EAAA,IAAS,EAAA,SAAT,GA9ByC,GA+BzC,GAAM,EAAA,OA/BmC,EAiCzC,KAAM,GAAQ,EAAA,EAAA,EAAqB,EAjCM,QAkCzC,SAAK,KAAS,GAAD,GAlC4B,IAmCzC,EAAK,KAAS,GAAD,GAnC4B,IAoCzC,EAAK,KAAS,GAAD,EApC4B,IAqCzC,EAAK,KAAQ,EArC4B,IAAA,EAyC3C,WAAA,EAAA,EAAA,EAAA,GACE,KAAM,GAAQ,EADwC,MAEhD,EAAS,EAFuC,OAGtD,GAAA,GAAA,EAHsD,EAItD,KAAM,GAAQ,EAJwC,KAMtD,OAAA,OACO,GAAA,UAAL,eACE,EADF,EAEE,EAFF,EAGE,EAAY,EAAD,GAHb,EADF,UAMO,GAAA,UAAL,UACE,EADF,EAEE,EAFF,EAGE,EAAW,EAHb,EANF,UAWO,GAAA,UAAL,WACE,EADF,EAEE,EAFF,EAGE,EAAW,EAHb,EAXF,cAiBI,KAAM,IAAA,OAjBV,kBAqBA,KAAM,GAAW,GAAA,YAAgB,GAAD,GA3BsB,GA4BtD,GAAI,GAAJ,EACE,EA7BoD,EA8BtD,OAAS,GAAT,EAAgB,EAAhB,EAA4B,EAA5B,EACE,EAAS,KADsB,EAE/B,EAAA,IACE,EAAA,SAAA,EAA4B,EAD9B,GAF+B,GAM/B,GAN+B,EAO/B,GAP+B,EAUjC,GAAI,IAAS,EAAA,UAAT,gBAAJ,GAEE,EAF+C,EAG/C,OAAS,GAAT,EAAgB,EAAhB,EAA4B,KAC1B,IACA,OAAS,GAAT,EAAgB,EAAhB,EAA8B,IAC5B,EAAS,MADwB,KAMvC,KAAM,GAAO,GAAA,YAAe,CACzB,GAAD,GAD0B,IAEzB,GAAD,GAF0B,IAGzB,GAAD,EAH0B,IAI1B,EAJ0B,IAKzB,GAAD,GAL0B,IAMzB,GAAD,GAN0B,IAOzB,GAAD,EAP0B,IAQ1B,EAR0B,IAAA,EAAA,EAAA,EAAA,EAAA,IAetB,EAAO,EAlEyC,GAqEhD,EACJ,EAAA,OAAoB,EAApB,EAA6C,EAA7C,OAA2D,EAtEP,OAuEhD,EAAO,GAAA,YAvEyC,GAwEtD,GAAI,GAxEkD,EAyEtD,SAAA,IAAA,EAzEsD,GA0EtD,GAAU,EA1E4C,OA2EtD,EAAA,OAAA,EAAA,EA3EsD,GA4EtD,GAAU,EAAqB,EA5EuB,OA6EtD,EAAA,QAAA,EAAA,EA7EsD,GA8EtD,GAAU,EAAqB,EA9EuB,OA+EtD,EAAA,OAAsB,GAAA,YAAtB,GAAA,EA/EsD,GAiF/C,GAAA,EAAA,iBAAA,EAAA,YAjF+C,GAqFxD,MAAO,UAAA,EAAA,EAAA,GACL,KAAM,GACJ,EAAA,OAAA,OAA6B,EAAA,UAA7B,eAAwD,EAFU,KAGpE,MAAO,GAAA,EAAA,EAAA,EAH6D,OAOxE,QACE,cACE,KAAA,cADY,EAEZ,KAAA,WAAkB,EAFN,WAGZ,KAAA,SAHY,EAKZ,KAAA,WALY,EAAA,gBAMZ,KAAA,WANY,EAAA,qBAOZ,KAAA,QAPY,EAQZ,KAAA,kBAAyB,EAAA,kBARb,KASZ,KAAA,gBATY,EAYZ,KAAA,EAZY,EAaZ,KAAA,EAbY,EAgBZ,KAAA,MAhBY,EAiBZ,KAAA,MAjBY,EAoBZ,KAAA,YApBY,EAqBZ,KAAA,YArBY,EAsBZ,KAAA,WAtBY,EAuBZ,KAAA,SAvBY,EA0BZ,KAAA,UAAiB,EA1BL,UA2BZ,KAAA,YA3BY,UA6BZ,KAAA,UA7BY,EA8BZ,KAAA,YA9BY,EA+BZ,KAAA,UA/BY,EAgCZ,KAAA,SAhCY,GAiCZ,KAAA,QAjCY,GAkCZ,KAAA,WAlCY,EAoCZ,KAAA,UApCY,GAqCZ,KAAA,UArCY,EAuCZ,KAAA,aAvCY,GA0CZ,KAAA,cA1CY,KA2CZ,KAAA,UA3CY,KA6CZ,KAAA,OA7CY,GAgDd,QACE,MAAO,QAAA,OADD,MAIR,gBAAA,EAAA,GACE,KAAA,EADoB,EAEpB,KAAA,EAFoB,GAOxB,WAAA,GACE,GAAI,GADwB,GAE5B,KAAM,GAFsB,GAI5B,SAAA,KAAA,IACE,GAAI,EAAA,KAAJ,QACE,EAAA,KAAY,CAAE,KAAF,GAAY,GAAZ,QAAyB,MAAzB,KACZ,EAAA,KAF+B,GAG/B,EAAS,EAAO,EAAA,OAAP,GAHsB,MAAA,SAOjC,AAAI,EAAA,KAAJ,UACE,EAAS,EADyB,MAGlC,EAAA,KADK,GAIT,MAlB4B,GA4B9B,WAAA,GACE,GAAI,OAAA,UAAJ,GACE,MAAO,GADoB,WAG7B,KAAM,GAAI,EAAA,QAJO,IAKjB,GAAI,GAAI,EAAA,OALS,EAMjB,GAAI,EAAA,KAAJ,IACE,MADgB,GAKlB,EACE,WACO,EAAA,KAbQ,KAcjB,MAAO,GAAA,UAAA,EAAe,EAAA,KAAA,IAAA,EAAmB,EAdxB,GA0BnB,WAAA,GACE,GAAI,EAAA,KAAA,GAAc,EAAA,KAAlB,GACE,GAAI,EAAA,KAAA,GAAc,EAAA,KAAlB,EACE,MAAI,GAAA,KAAA,GAAc,EAAA,KAAlB,EAA8B,GAGvB,SAAS,EAAG,EAAZ,OAAqB,EAAG,EAAxB,OAET,GAAI,EAAA,KAAS,EAAT,IAAiB,EAAA,KAAS,CAAC,EAA/B,IACE,KAAM,GAAK,KAAA,KAAU,EAAV,IAAD,IAA0B,KADD,GAEnC,MAAO,UAAU,EAAV,eAGL,EAAA,KAAA,GAAc,EAAA,KAAd,GAA4B,EAAA,KAA5B,GAA0C,EAAA,KAA9C,EACE,MAAO,aAAa,EAAG,EAAhB,OAAyB,EAAG,EAA5B,OAGX,MACE,UAAU,EAAG,EAAb,OAAsB,EAAG,EAAzB,OAAkC,EAAG,EAArC,OAA8C,EAAG,EAAjD,OAA0D,EAAG,EAA7D,OACG,EAAG,EAAN,OAOJ,GAAI,GAjZ2D,EAkZ3D,EAlZ2D,EAmZ3D,EAnZ2D,EAsZ/D,EAAA,YAAA,EAAc,MACZ,YAAA,EAAA,EAA8B,EAA9B,IACE,KAAA,WAAkB,GADmC,GAAA,cAGrD,KAAA,QAAe,GAHsC,GAIrD,KAAA,gBAJqD,EAAA,gBAKrD,KAAA,eALqD,GAMrD,KAAA,WANqD,GAOrD,KAAA,WAPqD,EAQrD,KAAA,KARqD,EASrD,KAAA,YATqD,KAUrD,KAAA,cAVqD,GAYrD,KAAA,WAZqD,GAarD,KAAA,cAAqB,OAAA,OAbgC,MAcrD,KAAA,SAdqD,KAerD,KAAA,gBAAuB,CAAC,CAf6B,EAoBrD,KAAA,mBApBqD,GAqBrD,SAAA,KAAA,GAAA,IACE,KAAA,mBAAwB,EAAA,IAAxB,IADoB,EAKxB,OACE,KAAA,eAAA,KAAyB,KADpB,iBAEL,KAAM,GAAM,KAFP,QAGL,KAAA,WAAA,KAHK,GAIL,KAAA,QAAe,EAJV,QAOP,UACE,KAAA,gBAAuB,KAAA,eADf,MAER,KAAA,QAAe,KAAA,WAFP,MAGR,KAAA,YAHQ,KAIR,KAAA,KAJQ,KAOV,MAAA,GACE,KADW,OAEX,KAAA,cAFW,GAGX,KAHW,UAMb,iBAAA,GACE,KAAM,GAAU,EADa,QAEvB,EAAY,EAFW,UAI7B,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAqC,EAArC,EAA6C,KAC3C,GAAI,EAAA,KAAe,EAAA,IAAnB,WAAmC,SAInC,SAAA,KAAkB,GAAlB,IACE,KAAM,GAAW,EAAA,WAAA,MAAuB,KAAvB,WAAyC,KAD5B,KAExB,EAAU,GAAA,SAAY,IAC1B,EAAA,IAAA,EADqC,KAGvC,KAAA,QAAA,aAAA,KAL8B,IAQlC,MAAO,SAAA,IAAY,KAAA,QAjBU,cAoB/B,UAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACE,KAAM,GAAkB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACxB,KAAA,gBAAuB,EAAA,KAAA,UACrB,KADqB,gBAFG,GAM1B,KAAA,KAN0B,KAS5B,OAAA,EAAA,GACE,KAAA,SAD6B,EAG7B,KAAM,GAAa,KAAA,YAHU,GAI7B,MAAO,MAAA,iBAAA,GAAA,KAAyC,IAC9C,MAAA,gBADoD,EAAA,gBAEpD,KAAA,cAAmB,KAAA,cAFiC,IAAA,IAOxD,cAAA,GACE,KAAM,GAAoB,KADA,mBAEpB,EAAY,EAFQ,UAGpB,EAAU,EAHU,QAIpB,EAJoB,GAK1B,OAAS,GAAJ,EAAW,EAAK,EAArB,OAAqC,EAArC,EAA6C,KAC3C,KAAM,GAAO,EADmC,GAEhD,EAAA,KAAY,CAAA,OAEV,GAAI,EAFM,GAGV,KAAM,EAHI,KAMd,MAAO,GAbmB,GAgB5B,cAAA,GACE,SAAA,KAAA,IACE,KAAM,GAAK,EADuB,GAE5B,EAAO,EAFqB,KAG5B,EAAO,EAHqB,KAKlC,OAAQ,EAAR,OACO,GAAA,IAAL,UACE,KADF,YADF,UAIO,GAAA,IAAL,WAJF,UAOO,GAAA,IAAL,WACE,KAAA,WADF,GAPF,UAUO,GAAA,IAAL,mBACE,KAAA,mBAAwB,EAAxB,GAAiC,EADnC,IAVF,UAaO,GAAA,IAAL,QACE,KAAA,QADF,GAbF,UAgBO,GAAA,IAAL,SACE,KAAA,SAAc,EADhB,IAhBF,UAmBO,GAAA,IAAL,eACE,KAAA,SAAc,EADhB,IAnBF,UAsBO,GAAA,IAAL,QACE,KADF,UAtBF,UAyBO,GAAA,IAAL,SACE,KAAA,SAAc,EAAd,GAAuB,EADzB,IAzBF,UA4BO,GAAA,IAAL,eACE,KAAA,eAAoB,EADtB,IA5BF,UA+BO,GAAA,IAAL,eACE,KAAA,eAAoB,EADtB,IA/BF,UAkCO,GAAA,IAAL,UACE,KAAA,UAAe,EADjB,IAlCF,UAqCO,GAAA,IAAL,cACE,KAAA,cACE,EADF,GAEE,EAFF,GAGE,EAHF,GAIE,EAJF,GAKE,EALF,GAME,EAPJ,IArCF,UA+CO,GAAA,IAAL,YACE,KAAA,YAAiB,EADnB,IA/CF,UAkDO,GAAA,IAAL,qBACE,KAAA,qBAA0B,EAD5B,IAlDF,UAqDO,GAAA,IAAL,aACE,KAAA,aAAkB,EADpB,IArDF,UAwDO,GAAA,IAAL,YACE,KAAA,YAAiB,EADnB,IAxDF,UA2DO,GAAA,IAAL,WACE,KAAA,WAAgB,EADlB,IA3DF,UA8DO,GAAA,IAAL,cACE,KAAA,cAAmB,EADrB,IA9DF,UAiEO,GAAA,IAAL,gBACE,KAAA,gBAAqB,EAArB,GAA8B,EAA9B,GAAuC,EADzC,IAjEF,UAoEO,GAAA,IAAL,kBACE,KAAA,kBAAuB,EAAvB,GAAgC,EAAhC,GAAyC,EAD3C,IApEF,UAuEO,GAAA,IAAL,gBACE,KAAA,gBADF,GAvEF,UA0EO,GAAA,IAAL,cACE,KAAA,cADF,GA1EF,UA6EO,GAAA,IAAL,YACE,KAAA,YAAiB,EADnB,IA7EF,UAgFO,GAAA,IAAL,QACE,KAAA,QAAa,EAAb,GAAsB,EADxB,IAhFF,UAmFO,GAAA,IAAL,mBACE,KAAA,mBAAwB,EAD1B,IAnFF,UAsFO,GAAA,IAAL,YACE,KAAA,YAAiB,EADnB,IAtFF,UAyFO,GAAA,IAAL,UACE,KAAA,UAAe,EADjB,IAzFF,UA4FO,GAAA,IAAL,KACE,KADF,OA5FF,UA+FO,GAAA,IAAL,OACE,KADF,SA/FF,UAkGO,GAAA,IAAL,OACE,KADF,SAlGF,UAqGO,GAAA,IAAL,WACE,KADF,aArGF,UAwGO,GAAA,IAAL,aACE,KADF,eAxGF,UA2GO,GAAA,IAAL,KACE,KAAA,KADF,WA3GF,UA8GO,GAAA,IAAL,OACE,KAAA,KADF,WA9GF,UAiHO,GAAA,IAAL,yBACE,KADF,2BAjHF,UAoHO,GAAA,IAAL,kBACE,KAAA,kBAAuB,EADzB,IApHF,UAuHO,GAAA,IAAL,wBACE,KAAA,wBAA6B,EAD/B,IAvHF,UA0HO,GAAA,IAAL,sBACE,KAAA,sBAA2B,EAD7B,IA1HF,UA6HO,GAAA,IAAL,sBACE,KAAA,sBAA2B,EAA3B,GAAoC,EADtC,IA7HF,UAgIO,GAAA,IAAL,oBACE,KADF,sBAhIF,UAmIO,GAAA,IAAL,UACE,KADF,YAnIF,UAsIO,GAAA,IAAL,YACE,KADF,cAtIF,UAyIO,GAAA,IAAL,gBACE,KADF,kBAzIF,UA4IO,GAAA,IAAL,kBACE,KADF,oBA5IF,UA+IO,GAAA,IAAL,SACE,KADF,WA/IF,UAkJO,GAAA,IAAL,UACE,KAAA,UACE,EADF,GAEE,EAFF,GAGE,EAHF,GAIE,EAJF,GAKE,EALF,GAME,EAPJ,IAlJF,UA4JO,GAAA,IAAL,cACE,KAAA,cAAmB,EAAnB,GAA4B,EAD9B,IA5JF,UA+JO,GAAA,IAAL,QACE,KADF,UA/JF,UAkKE,IACE,KAAA,MAAW,EADb,OAlKF,cAsKI,AAAA,GAAA,EAAA,MAAK,0BAAA,KAtKT,QA4KJ,eAAA,GACE,KAAA,QAAA,YAD0B,EAI5B,eAAA,GACE,KAAA,QAAA,YAD0B,EAI5B,WACE,KAAA,SAAA,EAAiB,KAAA,QADR,SAIX,cAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACE,KAAM,GAAU,KADc,QAE9B,EAAA,WAAqB,EAAA,WAAqB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAC1C,EAAA,gBAA0B,KAAA,KAAU,EAAA,EAAQ,EAHd,GAK9B,EAAA,EAAY,EAAA,MALkB,EAM9B,EAAA,EAAY,EAAA,MANkB,EAQ9B,EAAA,QAR8B,GAS9B,EAAA,QAT8B,GAU9B,EAAA,MAAgB,KAAA,WAAA,cAVc,aAW9B,EAAA,MAAA,eAAA,KAAA,cAAkD,EAXpB,YAY9B,EAAA,MAAA,eAAA,KAAA,YAGE,GAAG,EAAG,EAAN,eAEF,EAAA,MAAA,eAAA,KAAA,IAAwC,EAAG,CAAC,EAjBd,IAmB9B,EAAA,WAAqB,KAAA,WAAA,cAnBS,YAoB9B,EAAA,WAAA,YAA+B,EApBD,OAuBhC,YACE,KAAM,GAAU,KADN,QAEV,EAAA,EAAY,EAAA,MAFF,EAGV,EAAA,EAAY,EAAA,MAHF,EAIV,EAAA,WAJU,EAAA,gBAKV,EAAA,WALU,EAAA,gBAMV,EAAA,gBANU,EAOV,EAAA,MAAgB,KAAA,WAAA,cAPN,aAQV,EAAA,WAAqB,KAAA,WAAA,cARX,YASV,EAAA,OAAiB,KAAA,WAAA,cATP,SAUV,EAAA,QAVU,GAWV,EAAA,QAXU,GAcZ,SAAA,EAAA,GACE,KAAM,GAAU,KADH,QAEb,EAAA,EAAY,EAAA,OAFC,EAGb,EAAA,EAAY,EAAA,OAHC,EAKb,EAAA,QALa,GAMb,EAAA,QANa,GAOb,EAAA,MAAgB,KAAA,WAAA,cAPH,aAQb,EAAA,MAAA,eAAA,KAAA,cAAkD,EARrC,YASb,EAAA,MAAA,eAAA,KAAA,YAGE,GAAG,EAAG,EAAN,eAEF,EAAA,MAAA,eAAA,KAAA,IAAwC,EAAG,CAAC,EAd/B,IAiBf,SAAA,GACE,KAAM,GAAU,KADD,QAET,EAAO,EAFE,KAGT,EAAW,EAHF,SAIf,GAAI,IAAJ,EAAoB,OAIpB,KAAM,GAAgB,EARP,cAST,EAAc,EATL,YAUT,EAAc,EAVL,YAWT,EAAgB,EAXP,cAYT,EAAa,EAAA,WAZJ,EAaT,EAAW,EAbF,SAcT,EAAa,EAAA,EAAe,GAC5B,EAAkB,EAfT,gBAgBT,EAAoB,EAAW,EAAA,WAhBtB,GAkBf,GAAI,GAlBW,EAmBf,SAAA,KAAA,IACE,GAAI,IAAJ,MAEE,GAAK,EAFa,EAAA,iBAIT,GAAA,EAAA,OAAJ,IACL,GAAM,EAAA,EAAD,EADkB,IAAA,SAKzB,KAAM,GAAW,GAAA,QAAA,EAAD,GAVU,EAWpB,EAAY,EAXQ,SAY1B,GAAA,GAZ0B,EAatB,EAAQ,EAbc,MAc1B,GAAA,GACE,GADY,GAEZ,KAAM,GAAU,EAAA,SAFJ,EAGZ,EAAK,EAAA,QAAgB,EAAhB,GAA6B,EAHtB,GAIZ,EAAK,CAAA,EAJO,EAKZ,KAAM,GAAK,EAAA,GALC,EAOZ,EAAQ,EAAU,CAAC,EAAX,GAPI,EAQZ,EAAU,EARE,EASZ,EAAW,GAAD,GATE,MAWZ,GAAU,EADL,EAEL,EAFK,EAKP,AAAI,GAAA,UAAkB,EAAtB,cACE,GAAA,QAAA,KAAqB,EAAA,EADiB,GAEtC,AAAA,GACE,EAAA,QAAA,KAAqB,CAAC,EAAD,EADT,GAGd,EAAA,MAAA,aALsC,GAaxC,GA1C0B,GA2C1B,AAAA,EACE,EAAY,EAAA,EAA4B,EAD5B,EAGZ,EAAY,EAAA,EAA4B,EADnC,EAIP,GAjD0B,EAmD5B,EAAA,MAAA,eAAA,KAAA,IAGE,EAAA,QAAA,IAAA,GAAA,KAzEa,MA2Ef,AAAA,EACE,EAAA,MAAA,eAAA,KAAA,IAGE,EAAA,QAAA,IAAA,GAAA,KAJU,MAOZ,EAAA,MAAA,eAAA,KAAA,IAAwC,EAAG,CAAC,EADvC,IAIP,AAAA,EACE,EAAA,GADY,EAGZ,EAAA,GAAa,EADR,EAIP,EAAA,MAAA,eAAA,KAAA,cAAkD,EA3FnC,YA4Ff,EAAA,MAAA,eAAA,KAAA,YAGE,GAAG,EAAG,EAAN,eAEF,AAAI,EAAA,YAAsB,EAA1B,WACE,EAAA,MAAA,eAAA,KAAA,aAAiD,EADD,WAGlD,AAAI,EAAA,aAAuB,EAA3B,YACE,EAAA,MAAA,eAAA,KAAA,cAAkD,EADA,YAIpD,KAAM,GACJ,EAAA,kBAA4B,EAAA,kBAzGf,iBA4Hf,GAlBA,AACE,IAAmB,EAAA,kBAAnB,MACA,IAAmB,EAAA,kBAFrB,YAIE,CAAI,EAAA,YAAsB,EAA1B,WACE,EAAA,MAAA,eAAA,KAAA,OAA2C,EADK,WAGlD,AAAI,EAAA,UAAJ,GACE,EAAA,MAAA,eAAA,KAAA,eAAmD,EAD1B,YAGtB,AAAI,EAAA,oBAA8B,EAAA,kBAAlC,YAGL,EAAA,MAAA,eAAA,KAAA,OAHsE,eAKtE,EAAA,MAAA,eAAA,KAAA,OADK,QAKL,IAAmB,EAAA,kBAAnB,QACA,IAAmB,EAAA,kBAFrB,aAIE,KAAM,GAAiB,EAAK,GAAA,iBAD5B,GAEA,KAAA,qBAA0B,EAA1B,MAFA,GAQF,GAAI,GAAa,EAvIF,WAwIf,AAAI,EAAA,WAAJ,GACE,GAAa,EADa,QAE1B,EAAA,IAAiB,EAFS,UAK5B,EAAA,WAAA,eAAA,KAAA,YAGE,GAAG,EAAH,YAA2B,EAA3B,WAEF,EAAA,WAAA,eAAA,EAAA,YAlJe,YAmJf,EAAA,WAAA,YAA+B,EAnJhB,OAoJf,EAAA,OAAA,YAA2B,EApJZ,YAsJf,KAAA,wBAAA,YAAyC,EAtJ1B,YAyJjB,mBAAA,EAAA,GACE,KAAA,WAAgB,CADO,GAEvB,KAAA,SAAA,EAFuB,GAKzB,aAAA,GACE,GAAI,CAAC,EAAL,KACE,KAAM,IAAA,OACJ,qGAIJ,AAAK,KAAL,UACE,MAAA,SAAgB,KAAA,WAAA,cADE,aAElB,KAAA,SAAA,eAAA,KAAA,OAFkB,YAGlB,KAAA,KAAA,YAAsB,KAHJ,WAMpB,KAAM,GAAM,GAAA,EAAA,iBACV,EADU,KAEV,EAFU,SAGV,KAhBkB,iBAkBpB,KAAA,SAAA,aACE,8BAA8B,EAA9B,yBACA;EAGJ,QAAA,GACE,KAAM,GAAU,KADD,QAET,EAAU,KAAA,WAAA,IAAoB,EAFrB,IAGf,GAAI,GAAO,EAHI,GAIf,EAAA,KAJe,EAMf,AACE,KAAA,YACA,CAAC,EADD,aAEA,CAAC,KAAA,cAAmB,EAHtB,aAKE,MAAA,aADA,GAEA,KAAA,cAAmB,EAAnB,YAFA,GAKF,EAAA,WAAqB,EAAA,WACjB,EADiB,WAfN,EAAA,qBAmBf,GAAI,GAnBW,SAoBf,AAAI,EAAJ,MACE,EADiB,MAEZ,AAAI,EAAJ,MACL,GADuB,QAGzB,KAAM,GAAS,EAAA,OAAA,SAzBA,SA2Bf,AAAI,EAAJ,EACE,GAAO,CADK,EAEZ,EAAA,cAAwB,IAExB,EAAA,cADK,EAGP,EAAA,SAjCe,EAkCf,EAAA,WAAqB,EAlCN,WAmCf,EAAA,WAnCe,EAoCf,EAAA,UApCe,EAsCf,EAAA,MAAgB,KAAA,WAAA,cAtCD,aAuCf,EAAA,MAAA,eAAA,KAAA,IAAwC,EAAG,CAAC,EAvC7B,IAwCf,EAAA,QAxCe,GAyCf,EAAA,QAzCe,GA4CjB,UACE,KAAM,GAAU,KADR,QAER,AACE,EAAA,kBAA4B,EAAA,kBAA5B,kBACA,EADA,YAEA,EAAA,WAHF,iBAME,GAAA,QAAkB,EAFlB,WAGA,KAAA,KAHA,WAIA,KAJA,WASJ,aAAA,GACE,AAAI,EAAJ,GACE,MAAA,QAAA,UADa,GAKjB,WAAA,GACE,KAAA,QAAA,QAAuB,EADP,GAIlB,YAAA,GACE,KAAA,QAAA,SAAwB,EADP,GAInB,cAAA,GACE,KAAA,QAAA,WADmB,EAIrB,eAAA,GACE,KAAA,QAAA,YAD0B,EAI5B,kBAAA,EAAA,EAAA,GACE,KAAA,QAAA,YAA2B,EAAA,KAAA,WAAA,EAAA,EADF,GAI3B,aAAA,GACE,KAAA,QAAA,UADsB,EAIxB,gBAAA,EAAA,EAAA,GACE,KAAA,QAAA,UAAyB,EAAA,KAAA,WAAA,EAAA,EADF,GAEvB,KAAA,QAAA,MAAqB,KAAA,WAAA,cAFE,aAGvB,KAAA,QAAA,QAHuB,GAIvB,KAAA,QAAA,QAJuB,GAOzB,gBAAA,GACE,KAAA,QAAA,YAA2B,KAAA,oBADP,GAItB,cAAA,GACE,KAAA,QAAA,UAAyB,KAAA,oBADP,GAIpB,YAAA,GACE,KAAM,GAAQ,KAAA,SADE,MAEV,EAAS,KAAA,SAFC,OAGV,EAAM,EAAA,KAAA,iBAAsB,KAHlB,iBAIV,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GAJf,GAKV,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GALf,GAMV,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GANf,GAOV,EAAK,EAAA,KAAA,eAAoB,CAAA,EAAA,GAPf,GAQV,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EARzB,IASV,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EATzB,IAUV,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAVzB,IAWV,EAAK,KAAA,IAAS,EAAT,GAAgB,EAAhB,GAAuB,EAAvB,GAA8B,EAXzB,IAaV,EAAO,KAAA,WAAA,cAbG,YAchB,EAAA,eAAA,KAAA,IAdgB,GAehB,EAAA,eAAA,KAAA,IAfgB,GAgBhB,EAAA,eAAA,KAAA,QAAmC,EAhBnB,GAiBhB,EAAA,eAAA,KAAA,SAAoC,EAjBpB,GAkBhB,EAAA,eAAA,KAAA,OAAkC,KAAA,oBAlBlB,IAmBhB,AAAI,KAAA,QAAA,UAAJ,GACE,EAAA,eAAA,KAAA,eAA0C,KAAA,QADZ,WAGhC,KAAA,wBAAA,YAtBgB,GA4BlB,oBAAA,GACE,MAAI,GAAA,KAAJ,gBACS,KAAA,mBADwB,GAG1B,KAAA,oBAJiB,GAU1B,mBAAA,GACE,KAAM,GAAQ,EADS,GAEjB,EAAe,EAFE,GAGjB,EAAS,EAAA,IAHQ,EAAA,gBAIjB,CAAA,EAAA,EAAA,EAAA,GAAmB,EAJF,GAKjB,EAAQ,EALS,GAMjB,EAAQ,EANS,GAOjB,EAAY,EAPK,GASjB,EAAW,UAAU,MACrB,CAAA,EAAA,GAAa,EAAA,KAAA,eAAoB,CAAA,EAAA,GAVhB,GAWjB,CAAA,EAAA,GAAa,EAAA,KAAA,eAAoB,CAAA,EAAA,GAXhB,GAYjB,CAAA,EAAA,GAAmB,EAAA,KAAA,8BAZF,GAajB,EAAS,EAbQ,EAcjB,EAAS,EAdQ,EAgBjB,EAAS,KAAA,WAAA,cAhBQ,eAiBvB,EAAA,eAAA,KAAA,KAjBuB,GAkBvB,EAAA,eAAA,KAAA,eAlBuB,kBAmBvB,EAAA,eAAA,KAAA,QAnBuB,GAoBvB,EAAA,eAAA,KAAA,SApBuB,GAqBvB,EAAA,eAAA,KAAA,IAAiC,GAAA,KACjC,EAAA,eAAA,KAAA,IAAiC,GAAA,KAGjC,KAAM,GAAM,KAzBW,IA0BjB,EAAkB,KA1BD,gBA2BjB,EAAY,KAAA,QA3BK,UA4BjB,EAAc,KAAA,QA5BG,YA8BjB,EAAO,KAAA,WAAA,OAAuB,EAAvB,EAAkC,EA9BxB,GAiCvB,GAFA,KAAA,IA/BuB,EAgCvB,KAAA,gBAhCuB,EAiCnB,IAAJ,GACE,KAAM,GAAW,EAAA,KAAA,WAAgB,GADd,GAEnB,KAAA,QAAA,UAFmB,EAGnB,KAAA,QAAA,YAHmB,EAKrB,YAAA,cAAmB,KAAA,cAtCI,IAyCvB,KAAA,IAzCuB,EA0CvB,KAAA,gBA1CuB,EA2CvB,KAAA,QAAA,UA3CuB,EA4CvB,KAAA,QAAA,YA5CuB,EA8CvB,EAAA,YAAmB,EAAA,WA9CI,IA+CvB,KAAA,KAAA,YA/CuB,GAgDhB,QAAA,KAMT,oBAAA,GACE,OAAQ,EAAR,QACE,cACE,KAAM,GAAY,UAAU,MACtB,EAAa,EAFrB,GAGE,GAHF,GAKE,OAAQ,EAAR,QACE,QACE,KAAM,GAAS,EADjB,GAEQ,EAAS,EAFjB,GAGE,EAAW,KAAA,WAAA,cAHb,sBAIE,EAAA,eAAA,KAAA,KAJF,GAKE,EAAA,eAAA,KAAA,gBALF,kBAME,EAAA,eAAA,KAAA,KAAoC,EANtC,IAOE,EAAA,eAAA,KAAA,KAAoC,EAPtC,IAQE,EAAA,eAAA,KAAA,KAAoC,EARtC,IASE,EAAA,eAAA,KAAA,KAAoC,EATtC,IADF,UAYE,SACE,KAAM,GAAa,EADrB,GAEQ,EAAc,EAFtB,GAGQ,EAAc,EAHtB,GAIQ,EAAe,EAJvB,GAKE,EAAW,KAAA,WAAA,cALb,sBAME,EAAA,eAAA,KAAA,KANF,GAOE,EAAA,eAAA,KAAA,gBAPF,kBAQE,EAAA,eAAA,KAAA,KAAoC,EARtC,IASE,EAAA,eAAA,KAAA,KAAoC,EATtC,IAUE,EAAA,eAAA,KAAA,IAVF,GAWE,EAAA,eAAA,KAAA,KAAoC,EAXtC,IAYE,EAAA,eAAA,KAAA,KAAoC,EAZtC,IAaE,EAAA,eAAA,KAAA,KAbF,GAZF,cA4BI,KAAM,IAAA,OAAU,6BAA6B,EAA7B,MAEpB,SAAA,KAAA,IACE,KAAM,GAAO,KAAA,WAAA,cADqB,YAElC,EAAA,eAAA,KAAA,SAAoC,EAFF,IAGlC,EAAA,eAAA,KAAA,aAAwC,EAHN,IAIlC,EAAA,YAJkC,GAMpC,YAAA,KAAA,YAzCF,GA0CS,QAAA,SACT,OACE,MAAA,GAAA,EAAA,MADF,8BA5CF,SA+CE,QACE,MAhDJ,kBAkDI,KAAM,IAAA,OAAU,oBAAoB,EAApB,OAItB,QAAA,EAAA,GACE,KAAA,QAAA,UAD4B,EAE5B,KAAA,QAAA,UAF4B,EAK9B,cAAA,EAAA,GACE,KAAM,GAAU,KADO,QAEvB,GAAI,GAAI,EAAR,EACE,EAAI,EAHiB,EAInB,EAJmB,GAKnB,EALmB,EAOvB,SAAA,KAAA,GACE,OAAQ,EAAR,OACO,GAAA,IAAL,UACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,KAAM,GAAQ,EAAK,KACb,EAAS,EAAK,KACd,EAAK,EALb,EAMQ,EAAK,EANb,EAOE,EAAA,KAAA,IAEE,EAFF,GAGE,EAHF,GAAA,IAKE,EALF,GAME,EANF,GAAA,IAQE,EARF,GASE,EATF,GAAA,IAWE,EAXF,GAYE,EAZF,GAPF,KADF,UAwBO,GAAA,IAAL,OACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,EAAA,KAAA,IAAY,EAAZ,GAAmB,EAHrB,IAxBF,UA6BO,GAAA,IAAL,OACE,EAAI,EAAK,KACT,EAAI,EAAK,KACT,EAAA,KAAA,IAAY,EAAZ,GAAmB,EAHrB,IA7BF,UAkCO,GAAA,IAAL,QACE,EAAI,EAAK,EADX,GAEE,EAAI,EAAK,EAFX,GAGE,EAAA,KAAA,IAEE,EAAG,EAFL,IAGE,EAAG,EAAK,EAHV,IAIE,EAAG,EAAK,EAJV,IAKE,EAAG,EAAK,EALV,IAME,EANF,GAOE,EAVJ,IAYE,GAZF,EAlCF,UAgDO,GAAA,IAAL,SACE,EAAA,KAAA,IAEE,EAFF,GAGE,EAHF,GAIE,EAAG,EAJL,IAKE,EAAG,EAAK,EALV,IAME,EAAG,EAAK,EANV,IAOE,EAAG,EAAK,EARZ,KAUE,EAAI,EAAK,EAVX,GAWE,EAAI,EAAK,EAXX,GAYE,GAZF,EAhDF,UA8DO,GAAA,IAAL,SACE,EAAI,EAAK,EADX,GAEE,EAAI,EAAK,EAFX,GAGE,EAAA,KAAA,IAEE,EAAG,EAFL,IAGE,EAAG,EAAK,EAHV,IAIE,EAJF,GAKE,EALF,GAME,EANF,GAOE,EAVJ,IAYE,GAZF,EA9DF,UA4EO,GAAA,IAAL,UACE,EAAA,KADF,KA5EF,MAkFF,EAAI,EAAA,KA1FmB,KA4FvB,AACE,EAAA,MACA,EAAA,OADA,GAEA,EAAA,KAAW,EAAA,IAFX,WAGA,EAAA,KAAW,EAAA,IAJb,OASE,EAAI,EAAA,KAAA,eAAA,KAAA,KAJJ,EAMA,GAAA,KAAe,KAAA,WAAA,cADV,YAEL,KAAA,wBAAA,YAAyC,EAFpC,OAKP,EAAA,KAAA,eAAA,KAAA,IA3GuB,GA4GvB,EAAA,KAAA,eAAA,KAAA,OA5GuB,QAgHvB,EAAA,QAAkB,EAhHK,KAiHvB,EAAA,gBAAA,EAjHuB,GAoHzB,UACE,KAAM,GAAU,KADR,QAMR,GAFA,EAAA,KAJQ,KAMJ,CAAC,KAAL,YAAuB,OAGvB,GAAI,CAAC,EAAL,SACE,KAAA,YADoB,KAAA,OAMtB,KAAM,GAAS,WAAW,MACpB,EAAW,KAAA,WAAA,cAhBT,gBAiBR,EAAA,eAAA,KAAA,KAjBQ,GAkBR,EAAA,eAAA,KAAA,YAA2C,EAAG,KAlBtC,kBAqBR,KAAM,GAAc,EAAA,QAAA,UArBZ,IAsBR,AAAI,KAAA,cAAJ,UACE,EAAA,eAAA,KAAA,YADkC,WAGlC,EAAA,eAAA,KAAA,YADK,WAGP,KAAA,YA3BQ,KA4BR,EAAA,YA5BQ,GA6BR,KAAA,KAAA,YA7BQ,GA+BR,AAAI,EAAJ,eAGE,GAAA,UAHyB,KAIzB,KAAA,WAAA,QAAwB,SAAA,GACtB,EAAA,UADsC,OAIxC,EAAA,eAAA,KAAA,YAA2C,EARlB,gBAU3B,EAAA,cAAwB,QAAA,KAExB,KAAA,KA3CQ,KA8CV,KAAA,GACE,KAAA,YADS,EAIX,YACE,KAAM,GAAU,KADN,QAEV,GAAI,EAAJ,MACE,KAAM,GAAI,GAAG,EAAA,KAAA,eAAA,KAAH,QACV,EAAA,KAAA,eAAA,KAAA,IAFgB,IAMpB,WAAA,GACE,KAAA,QAAA,QAAuB,CADL,EAIpB,YAAA,GACE,KAAA,QAAA,SADoB,EAItB,qBAAA,GACE,KAAA,QAAA,kBADsC,EAIxC,UAAA,GACE,KAAA,QAAA,WAA0B,EADX,IAIjB,mBAAA,IAIA,YAAA,IAIA,UAAA,GACE,SAAW,CAAA,EAAX,IAAA,GACE,OAAA,OACE,KACE,KAAA,aADF,GADF,UAIE,KACE,KAAA,WADF,GAJF,UAOE,KACE,KAAA,YADF,GAPF,UAUE,KACE,KAAA,cADF,GAVF,UAaE,IACE,KAAA,QAAa,EAAb,GAAuB,EADzB,IAbF,UAgBE,KACE,KAAA,mBADF,GAhBF,UAmBE,KACE,KAAA,YADF,GAnBF,UAsBE,OACE,KAAA,QADF,GAtBF,UAyBE,KACE,KAAA,eADF,GAzBF,UA4BE,KACE,KAAA,aADF,GA5BF,cAgCI,AAAA,GAAA,EAAA,MAAK,wCAAA,KAhCT,OAsCJ,OACE,KAAM,GAAU,KADX,QAEL,AAAI,EAAJ,SACE,GAAA,QAAA,eAAA,KAAA,OAA6C,EAD1B,WAEnB,EAAA,QAAA,eAAA,KAAA,eAAqD,EAFlC,WAGnB,KAHmB,WAOvB,SACE,KAAM,GAAU,KADT,QAEP,AAAI,EAAJ,SACE,MAAA,qBAA0B,EADP,SAEnB,EAAA,QAAA,eAAA,KAAA,OAFmB,QAGnB,KAHmB,WAUvB,qBAAA,EAA8B,EAA9B,GACE,KAAM,GAAU,KADgC,QAEhD,GAAI,GAAY,EAFgC,UAGhD,AAAI,IAAA,GAAwB,EAAA,OAA5B,GACE,GAAY,EAAA,IAAc,SAAA,GACxB,MAAO,GADkC,KAI7C,EAAA,eAAA,KAAA,SAAuC,EARS,aAShD,EAAA,eAAA,KAAA,iBAA+C,EATC,aAUhD,EAAA,eAAA,KAAA,oBAAkD,EAAG,EAVL,aAWhD,EAAA,eAAA,KAAA,iBAA+C,EAXC,SAYhD,EAAA,eAAA,KAAA,kBAAgD,EAZA,UAahD,EAAA,eAAA,KAAA,eAGE,EAAG,EAAiB,EAApB,WAhB8C,MAkBhD,EAAA,eAAA,KAAA,mBAGE,EAAA,IAAA,GAAA,KArB8C,MAuBhD,EAAA,eAAA,KAAA,oBAGE,EAAG,EAAiB,EAApB,WA1B8C,MA8BlD,SACE,AAAI,KAAA,QAAJ,SACE,KAAA,QAAA,QAAA,eAAA,KAAA,YADwB,WAG1B,KAJO,OAOT,aAGE,KAHW,SAIX,KAJW,OAOb,eACE,AAAI,KAAA,QAAJ,SACE,KAAA,QAAA,QAAA,eAAA,KAAA,YADwB,WAG1B,KAJa,aAOf,cACE,KADY,YAEZ,KAFY,SAKd,kBACE,KADgB,YAEhB,KAFgB,aAKlB,oBACE,KADkB,YAElB,KAFkB,eAKpB,2BACE,KAAM,GAAO,KAAA,WAAA,cADY,YAEzB,EAAA,eAAA,KAAA,IAFyB,KAGzB,EAAA,eAAA,KAAA,IAHyB,KAIzB,EAAA,eAAA,KAAA,QAJyB,OAKzB,EAAA,eAAA,KAAA,SALyB,OAMzB,EAAA,eAAA,KAAA,OAAkC,KAAA,QANT,WAQzB,KAAA,wBAAA,YARyB,GAW3B,kBAAA,GACE,KAAM,GAAU,KAAA,KAAA,IADO,GAEvB,GAAI,CAAJ,GACE,AAAA,GAAA,EAAA,MAAK,kCAAA,sBADO,OAId,KAAA,wBANuB,GASzB,wBAAA,EAAA,GACE,KAAM,GAAQ,EADuB,MAE/B,EAAS,EAFsB,OAI/B,EAAS,EAAA,EAA6B,KAA7B,gBAAmD,CAAC,CAJ9B,GAK/B,EAAW,KAAA,WAAA,cALoB,YAMrC,EAAA,eAAA,KAAA,IANqC,KAOrC,EAAA,eAAA,KAAA,IAPqC,KAQrC,EAAA,eAAA,KAAA,QAAuC,EARF,IASrC,EAAA,eAAA,KAAA,SAAwC,EATH,IAUrC,KAAA,QAAA,QAVqC,EAWrC,KAAA,KAXqC,WAarC,KAAM,GAAQ,KAAA,WAAA,cAbuB,aAcrC,EAAA,eAAA,EAAA,aAdqC,GAerC,EAAA,eAAA,KAAA,IAfqC,KAgBrC,EAAA,eAAA,KAAA,IAAgC,EAAG,CAhBE,IAiBrC,EAAA,eAAA,KAAA,QAAoC,EAAA,GAjBC,MAkBrC,EAAA,eAAA,KAAA,SAAqC,EAAA,GAlBA,MAmBrC,EAAA,eAAA,KAAA,YAGE,SAAS,EAAG,EAAZ,MAA0B,EAAG,GAA7B,OAEF,AAAA,EACE,EAAA,YADQ,GAGR,KAAA,wBAAA,YADK,GAKT,sBAAA,GACE,KAAM,GAAU,KADa,QAEvB,EAAQ,EAFe,MAGvB,EAAS,EAHc,OAIvB,EAAY,EAJW,UAM7B,EAAA,OAAiB,OAAO,MACxB,KAAM,GAAO,KAAA,WAAA,cAPgB,YAQ7B,EAAA,eAAA,KAAA,KAAgC,EARH,QAU7B,KAAM,GAAO,KAAA,WAAA,cAVgB,YAW7B,EAAA,eAAA,KAAA,IAX6B,KAY7B,EAAA,eAAA,KAAA,IAZ6B,KAa7B,EAAA,eAAA,KAAA,QAAmC,EAbN,IAc7B,EAAA,eAAA,KAAA,SAAoC,EAdP,IAe7B,EAAA,eAAA,KAAA,OAf6B,GAgB7B,EAAA,eAAA,KAAA,OAAkC,QAAQ,EAAR,WAElC,KAAA,KAAA,YAlB6B,GAmB7B,KAAA,wBAAA,YAnB6B,GAqB7B,KAAA,wBAAA,EArB6B,GAwB/B,sBAAA,EAAA,GAYE,GAXA,AAAI,MAAA,QAAA,IAAyB,EAAA,SAA7B,GACE,KAAA,UACE,EADF,GAEE,EAFF,GAGE,EAHF,GAIE,EAJF,GAKE,EALF,GAME,EAP8C,IAWlD,GACE,KAAM,GAAQ,EAAA,GAAU,EADhB,GAEF,EAAS,EAAA,GAAU,EAFjB,GAIF,EAAW,KAAA,WAAA,cAJT,YAKR,EAAA,eAAA,KAAA,IAAmC,EAL3B,IAMR,EAAA,eAAA,KAAA,IAAmC,EAN3B,IAOR,EAAA,eAAA,KAAA,QAAuC,EAP/B,IAQR,EAAA,eAAA,KAAA,SAAwC,EARhC,IASR,KAAA,QAAA,QATQ,EAUR,KAAA,KAVQ,WAWR,KAXQ,WAeZ,uBAKA,YAAA,GACE,KAAM,GAAM,KAAA,WAAA,OAAuB,EAAvB,MAAuC,EAD/B,QAId,EAAc,KAAA,WAAA,cAJA,YAKpB,EAAA,YALoB,GAMpB,KAAA,KANoB,EAUpB,KAAM,GAAY,KAAA,WAAA,cAVE,SAWpB,SAAA,eAAA,KAAA,YAA4C,EAAG,EAX3B,YAYpB,EAAA,YAZoB,GAiBpB,KAAA,IAjBoB,EAAA,EAyBtB,mBACE,GAAI,CAAC,KAAA,QAAL,WACE,KAAM,GAAY,KAAA,WAAA,cADS,SAE3B,EAAA,eAAA,KAAA,YAA4C,KAAA,QAFjB,eAG3B,KAAA,IAAA,YAH2B,GAI3B,KAAA,QAAA,UAJ2B,EAM7B,MAAO,MAAA,QAPU,UAanB,wBACE,MAAK,MAAL,MACE,MAAA,KAAY,KAAA,WAAA,cADE,SAEd,KAAA,KAAA,eAAA,KAAA,YAA4C,EAAG,KAFjC,kBAGd,AAAI,KAAA,QAAJ,cACE,KAAA,mBAAA,YAAoC,KADN,MAG9B,KAAA,IAAA,YAAqB,KADhB,OAIF,KAVe,8GC/oD5B,GAAA,GAAA,EAAA,GAMA,EAAA,EAAA,IAWA,KAAM,GAAK,KACL,EAAO,KACP,EAAQ,KACR,EAAM,KAEN,EAtCN,0BAwCA,WAAA,GACE,KAAM,GAAY,EAAA,MADS,GAE3B,MAAI,GAAA,WAAA,SAAkC,EAAtC,KAAsD,EAIlD,gBAAA,KAAJ,GACS,EAAA,MAAU,WAAA,KAGnB,CAAK,EAAL,MACE,GAAA,SADmB,SAVM,GAgB7B,QACE,YAAA,GACE,KAAA,OADkB,EAElB,KAAA,IAAW,EAAS,EAFF,KAGlB,KAAA,OACE,KAAA,IAAA,WAAA,SAAiC,KAAA,IAAA,WAJjB,SAMlB,KAAA,QAAe,KAAA,IAAA,WANG,QAOlB,KAAA,YAAoB,KAAA,QAAe,EAAhB,aAPD,GASlB,KAAA,mBATkB,KAUlB,KAAA,qBAVkB,MAapB,0BACE,MAAO,MAAA,mBAA0B,KAAA,mBAA1B,QADoB,EAI7B,gBACE,MAAA,GAAA,EAAA,QACE,CAAC,KADH,mBADc,wDAKd,KAAA,mBAA0B,KAAA,QACtB,GAAA,GADsB,MAEtB,GAAA,GAPU,MAQP,KARO,mBAWhB,eAAA,EAAA,GACE,GAAI,GAAO,KAAX,uBACE,MADsC,MAGxC,KAAM,GAAc,KAAA,QAChB,GAAA,GAAA,KAAA,EADgB,GAEhB,GAAA,GAAA,KAAA,EANqB,GAOzB,YAAA,qBAAA,KAPyB,GAAA,EAW3B,kBAAA,GACE,AAAI,KAAJ,oBACE,KAAA,mBAAA,OAD2B,GAI7B,KAAM,GAAU,KAAA,qBAAA,MALQ,GAMxB,EAAA,QAAgB,SAAA,GACd,EAAA,OADgC,wBAMtC,QACE,YAAA,GACE,KAAA,KAAY,EADM,IAElB,KAAA,MAFkB,GAGlB,KAAA,aAHkB,KAIlB,KAAA,WAJkB,KAKlB,KAAM,GAAS,EALG,OAMlB,KAAA,eAAsB,EANJ,OAOlB,KAAA,QAPkB,EAQlB,KAAA,UARkB,KAUlB,KAAA,cAAqB,EAAA,cAVH,GAWlB,KAAA,gBAAuB,EAXL,eAYlB,AAAI,CAAC,KAAD,iBAAyB,CAAC,KAA9B,eACE,MAAA,cADgD,IAIlD,KAAA,sBAA6B,CAAC,EAhBZ,cAiBlB,KAAA,kBAAyB,CAAC,EAjBR,aAmBlB,KAAA,gBAnBkB,KAoBlB,KAAA,gBApBkB,GAAA,EAAA,2BAqBlB,KAAA,mBArBkB,GAAA,EAAA,8BAwBpB,gBACE,MAAO,MAAA,mBADU,WAInB,YACE,MAAO,MADM,aAIf,iBACE,MAAO,MADW,kBAIpB,oBACE,MAAO,MADc,qBAIvB,wBACE,MAAO,MADkB,2BAI3B,QAEE,GADA,KAAM,MAAA,gBADK,QAEP,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,GAAI,KAAJ,aACE,KAAM,MADe,aAIvB,KAAM,GAAQ,KAAA,gBATH,OAUX,GAAI,IAAJ,KACE,YAAA,gBADkB,GAAA,EAAA,2BAEX,KAFW,OAIpB,KAAA,SAAgB,EAdL,OAeX,AAAI,KAAJ,YACE,KAAA,WAAgB,CACd,OAAQ,KADM,QAEd,MAAO,KAFO,iBAMlB,KAAM,GAAS,GAAA,YAAA,GAtBJ,OAuBX,MAAO,CAAE,MAAF,EAAiB,KAAjB,IAGT,OAAA,GAGE,GAAI,CAAC,KAAL,iBACE,KAAA,OADyB,GAAA,OAI3B,KAAA,gBAAA,QAPa,GAUf,OAAA,GACE,KAAA,aADa,EAEb,KAAA,gBAFa,UAKf,mBAAA,GACE,KAAA,gBADiC,EAEjC,EAAA,GAAA,WAA8B,KAC5B,KAAA,gBADkC,YAIpC,EAAA,GAAA,MAAyB,KAEvB,EAF6B,UAG7B,KAAA,MAH6B,GAI7B,KAAA,gBAJ6B,YAO/B,EAAA,GAAA,QAA2B,IACzB,KAAA,OADmC,KAMrC,AAAI,CAAC,KAAD,uBAA+B,KAAnC,mBACE,KAAA,OAAY,GAAA,GAAA,eAD6C,0BAK3D,AAAI,KAAJ,cACE,KAAA,gBAAA,QAA6B,KADR,eAM3B,QACE,YAAA,GACE,KAAA,KAAY,EADM,IAElB,KAAA,MAFkB,GAGlB,KAAA,aAHkB,KAIlB,KAAA,WAJkB,KAKlB,KAAA,QALkB,EAMlB,KAAA,gBANkB,KAOlB,KAAA,gBAPkB,GAAA,EAAA,2BAQlB,KAAM,GAAS,EARG,OASlB,KAAA,sBAA6B,CAAC,EATZ,iBAYpB,wBACE,MAAO,MADkB,2BAI3B,QAEE,GADA,KAAM,MAAA,gBADK,QAEP,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,GAAI,KAAJ,aACE,KAAM,MADe,aAIvB,KAAM,GAAQ,KAAA,gBATH,OAUX,GAAI,IAAJ,KACE,YAAA,gBADkB,GAAA,EAAA,2BAEX,KAFW,OAIpB,KAAA,SAAgB,EAdL,OAeX,AAAI,KAAJ,YACE,KAAA,WAAgB,CAAE,OAAQ,KADP,UAIrB,KAAM,GAAS,GAAA,YAAA,GAnBJ,OAoBX,MAAO,CAAE,MAAF,EAAiB,KAAjB,IAGT,OAAA,GAGE,GAAI,CAAC,KAAL,iBACE,KAAA,OADyB,GAAA,OAI3B,KAAA,gBAAA,QAPa,GAUf,OAAA,GACE,KAAA,aADa,EAEb,KAAA,gBAFa,UAKf,mBAAA,GACE,KAAA,gBADiC,EAEjC,EAAA,GAAA,WAA8B,KAC5B,KAAA,gBADkC,YAIpC,EAAA,GAAA,MAAyB,KAEvB,EAF6B,UAG7B,KAAA,MAH6B,GAI7B,KAAA,gBAJ6B,YAO/B,EAAA,GAAA,QAA2B,IACzB,KAAA,OADmC,KAKrC,AAAI,KAAJ,cACE,KAAA,gBAAA,QAA6B,KADR,eAM3B,WAAA,EAAA,GACE,MAAO,CACL,SAAU,EADL,SAEL,KAAM,EAFD,KAGL,KAAM,EAHD,SAIL,KAAM,EAJD,KAKL,KAAM,EALD,KAML,OANK,MAAA,WAWT,eAAA,GACE,YAAA,GACE,MADkB,GAGlB,KAAM,GAAiB,IACrB,GAAI,EAAA,aAAJ,KACE,KAAM,GAAQ,GAAA,GAAA,oBAAwB,gBAAgB,KAAhB,UACtC,KAAA,aAF+B,EAG/B,KAAA,mBAAA,OAH+B,GAAA,OAMjC,KAAA,mBAPiC,UAQjC,KAAA,mBARiC,GAUjC,KAAM,GAAoB,GAGjB,KAAA,gBAAA,QAA6B,EAHJ,eAK5B,CAAA,qBAAA,mBAGF,GAAA,EAAA,kCAAiC,CAAA,oBAEnC,OAAQ,EAF2B,OAGnC,eAAgB,KAHmB,gBAInC,aAAc,KAJqB,gBAOrC,KAAA,kBAzBiC,EA2BjC,KAAA,eAAsB,GAAmB,KA3BR,eA6BjC,KAAA,UAAiB,GAAA,EAAA,2BA7BgB,IAgCnC,KAAA,SAnCkB,KAoClB,AAAI,KAAA,KAAA,WAAJ,QACE,KAAA,SAAgB,EAAA,QACd,EAAqB,KAArB,KAAgC,EADlB,aADkB,GAMlC,KAAA,SAAgB,EAAA,QACd,EAAqB,KAArB,KAAgC,EADlB,aADX,GAOP,KAAA,SAAA,GAAA,QAA0B,IACxB,KAAA,aADkC,EAElC,KAAA,mBAAA,OAFkC,KAOpC,KAAA,SAvDkB,OA2DtB,eAAA,GACE,YAAA,EAAA,EAAA,GACE,MAD8B,GAG9B,KAAA,aAH8B,GAI9B,SAAA,KAAuB,GAAvB,aACE,KAAM,GAAQ,EAAA,YAD2B,GAEzC,GAAI,MAAA,IAAJ,YAAkC,SAGlC,KAAA,aAAA,GALyC,EAO3C,KAAA,aAAA,MAA0B,SAAA,KAAkB,EAAlB,IAE1B,KAAM,GAAiB,IACrB,GAAI,EAAA,aAAJ,KACE,KAAM,GAAQ,GAAA,GAAA,oBAAwB,gBAAgB,KAAhB,UACtC,KAAA,aAF+B,EAAA,OAKjC,KAAA,mBANiC,IASnC,KAAA,SAtB8B,KAuB9B,AAAI,KAAA,KAAA,WAAJ,QACE,KAAA,SAAgB,EAAA,QACd,EAAqB,KAArB,KAAgC,KADlB,cADkB,GAMlC,KAAA,SAAgB,EAAA,QACd,EAAqB,KAArB,KAAgC,KADlB,cADX,GAOP,KAAA,SAAA,GAAA,QAA0B,IACxB,KAAA,aADkC,IAGpC,KAAA,SAtC8B,OA0ClC,eAAA,GACE,YAAA,GACE,MADkB,GAGlB,GAAI,GAAO,mBAAmB,KAAA,KAHZ,MAMlB,AAAI,EAAA,KAAkB,KAAA,KAAtB,OACE,GAAO,EAAA,QAAA,MAD8B,KAIvC,EAAA,MAAA,EAAe,CAAA,EAAA,KACb,GAAA,GACE,AAAI,EAAA,OAAJ,UACE,GAAQ,GAAA,GAAA,oBAAwB,gBAAA,QAElC,KAAA,aAJS,EAKT,KAAA,mBAAA,OALS,GAAA,OASX,KAAA,eAAsB,EAVQ,KAY9B,KAAA,mBAAwB,EAAA,iBAZM,IAa9B,KAAA,mBAb8B,aAkBpC,eAAA,GACE,YAAA,EAAA,EAAA,GACE,MAD8B,GAG9B,GAAI,GAAO,mBAAmB,KAAA,KAHA,MAM9B,AAAI,EAAA,KAAkB,KAAA,KAAtB,OACE,GAAO,EAAA,QAAA,MAD8B,KAIvC,KAAA,mBAAwB,EAAA,iBAAA,EAA0B,CAAA,QAAS,IAAK,EAAd,kNC3btD,GAAA,GAAA,EAAA,GAfA,EAAA,EAAA,IAsBA,WAA0C,CAAA,oBAAA,SAAA,iBAA1C,iBAME,AAAA,GAAA,EAAA,QAAO,EAAP,EADC,6CAED,KAAM,GAAe,CACnB,mBADmB,GAEnB,gBAFmB,QAKf,EAAS,SAAS,EAAT,kBAPd,IAQD,GAAI,CAAC,OAAA,UAAL,GACE,MAD6B,GAM/B,GAFA,EAAA,gBAZC,EAcG,GAAU,EAAd,EAGE,MAHgC,GAMlC,GAAI,GAAgB,CAApB,EACE,MAD2B,GAG7B,GAAI,EAAA,mBAAJ,QACE,MADkD,GAIpD,KAAM,GAAkB,EAAA,qBA3BvB,WA4BD,MAAI,KAAJ,YAIA,GAAA,mBAhCC,IAAA,EAoCH,WAAA,GACE,KAAM,GAAqB,EADyB,uBAEpD,GAAA,GACE,GAAI,GAAW,GAAA,EAAA,yCADO,GAEtB,GAAI,EAAA,SAAJ,KACE,IACE,EAAW,mBADT,SAEF,IAEJ,GAAI,UAAA,KAAJ,GACE,MAD4B,GAIhC,MAboD,MAgBtD,WAAA,EAAA,GACE,MAAI,KAAA,KAAmB,IAAA,GAAgB,EAAA,WAAvC,SACS,GAAA,GAAA,oBAAwB,gBAAA,EADgC,MAG1D,GAAA,GAAA,4BACL,+BAAA,EAAA,2BAAA,EADK,KAJuC,GAchD,WAAA,GACE,MAAO,KAAA,KAAkB,IADa,gIChExC,WAAA,GACE,GAAI,GAD+D,GAI/D,EAAM,EAAA,cAAA,KAAA,KAJyD,GAKnE,GAAA,GACE,EAAM,EADC,GAEP,GAAI,GAAW,EAFR,GAGP,SAAW,SAHJ,GAIP,EAAW,EAJJ,GAKP,EAAW,EALJ,GAMA,EANA,GAaT,GADA,EAAM,EAjB6D,GAkBnE,GAEE,KAAM,GAAW,EAFV,GAGP,MAAO,GAHA,GAQT,GADA,EAAM,EAAA,WAAA,KAAA,KAzB6D,GA0BnE,GACE,EAAM,EADC,GAEP,GAAI,GAAW,EAFR,GAGP,SAAW,EAHJ,GAIA,EAJA,GAUT,WAAA,EAAA,GACE,MAAO,IAAA,QACL,cAAA,EAAA,sDAF4C,GAehD,WAAA,EAAA,GACE,GAAA,GACE,GAAI,CAAC,iBAAA,KAAL,GACE,MADiC,GAGnC,IACE,KAAM,GAAU,GAAA,aAAA,EAA0B,CAAE,MAD1C,KAEI,EAAQ,MAAA,KAAA,EAAkB,SAAA,GAC9B,MAAO,GAAA,WAAA,GADqC,MAG9C,EAAQ,EAAA,OAAe,GAAA,YALrB,IAMF,EANE,SAOF,GAGA,GAAI,YAAA,KAAJ,GAEE,IACE,EAAQ,mBAAmB,OADzB,IAEF,EAFE,SAGF,MAIR,MAxBmC,GA0BrC,WAAA,GACE,MAAI,IAAsB,cAAA,KAA1B,IAEE,GAAQ,EAAA,QAF2C,GAGnD,AAAA,GAEE,GAAQ,EAAA,aAFc,KAJE,EAW9B,WAAA,GACE,KAAM,GADwC,GAE9C,GAF8C,GAK9C,KAAM,GAAO,EAAA,kCALiC,MAM9C,KAAQ,GAAQ,EAAA,KAAT,MAAP,OACE,GAAI,CAAA,CAAA,EAAA,EAAA,GADsD,EAG1D,GADA,EAAI,SAAA,EAFsD,IAGtD,IAAJ,IAEE,GAAI,IAAJ,EAAa,MAFG,SAOlB,EAAA,GAAa,CAAA,EAAA,GAEf,KAAM,GAlBwC,GAmB9C,OAAS,GAAT,EAAgB,EAAI,EAApB,QACQ,IAAN,GADkC,EAApC,GAKE,GAAI,CAAA,EAAA,GAAe,EALoB,GAMvC,EAAO,EANgC,GAOvC,AAAA,GACE,GAAO,SADC,GAER,AAAI,IAAJ,GACE,GAAO,EADI,KAIf,EAAA,KAbuC,GAezC,MAAO,GAAA,KAlCuC,IAoChD,WAAA,GACE,GAAI,EAAA,WAAJ,MACE,KAAM,GAAQ,EAAA,MAAA,GAAA,MADW,OAGzB,OAAS,GAAT,EAAgB,EAAI,EAApB,OAAkC,EAAlC,GACE,KAAM,GAAY,EAAA,GAAA,QADmB,KAErC,AAAI,IAAc,IAChB,GAAA,GAAW,EAAA,GAAA,MAAA,EADS,GAEpB,EAAA,OAAe,EAFK,GAItB,EAAA,GAAW,EAAA,GAAA,QAAA,SAN0B,MAQvC,EAAQ,EAAA,KAXiB,KAa3B,MAd6B,GAgB/B,WAAA,GAEE,KAAM,GAAc,EAAA,QAFW,KAG/B,GAAI,IAAgB,GAIlB,MAJsB,GAMxB,KAAM,GAAW,EAAA,MAAA,EATc,GAUzB,EAAY,EAAA,MAAe,EAVF,GAYzB,EAAQ,EAAA,QAAA,UAZiB,IAa/B,MAAO,GAAA,EAbwB,GAejC,WAAA,GAWE,MAAI,CAAC,EAAA,WAAD,OAA2B,uBAAA,KAA/B,GAAmE,EAU5D,EAAA,QAAA,iDAEL,SAAA,EAAA,EAAA,EAAA,GACE,GAAI,IAAA,KAAoB,IAAxB,IAEE,SAAO,EAAA,QAAA,KAFiC,KAGxC,EAAO,EAAA,QAAA,qBAAmC,SAAA,EAAA,GACxC,MAAO,QAAA,aAAoB,SAAA,EADmC,OAGzD,EAAA,EANiC,GAQ1C,IACE,EAAO,KADL,SAEF,IACF,MAAO,GAAA,EAZmC,KAiBhD,MAnMmE,6GCbrE,GAAA,GAAA,EAAA,GAKA,EAAA,EAAA,IAYA,KAAM,GAjCN,IAkCM,EAlCN,IAoCA,WAAA,GACE,KAAM,GAAO,EADc,SAE3B,GAAI,MAAA,IAAJ,SACE,MAD4B,GAG9B,KAAM,GAAQ,GAAA,EAAA,eALa,GAM3B,MAAO,GANoB,OAS7B,QACE,YAAA,EAAA,GACE,KAAA,IADqB,EAErB,EAAO,GAFc,GAGrB,KAAA,OAAc,YAAA,KAHO,GAIrB,KAAA,YAAoB,KAAA,QAAe,EAAhB,aAJE,GAKrB,KAAA,gBAAuB,EAAA,iBALF,GAMrB,KAAA,OACE,EAAA,QACA,WACE,MAAO,IADwB,iBAInC,KAAA,UAZqB,EAarB,KAAA,gBAAuB,OAAA,OAbF,MAgBvB,aAAA,EAAA,EAAA,GACE,KAAM,GAAO,CAAA,QAAA,OAIb,SAAA,KAAA,GACE,EAAA,GAAa,EADe,GAG9B,MAAO,MAAA,QAR2B,GAWpC,YAAA,GACE,MAAO,MAAA,QADc,GAIvB,QAAA,GACE,KAAM,GAAM,KADA,SAEN,EAAQ,KAFF,YAGN,EAAkB,KAAA,gBAAA,GAA8B,CAH1C,OAOZ,EAAA,KAAA,MAAgB,KAPJ,KAQZ,EAAA,gBAAsB,KARV,gBASZ,SAAA,KAAuB,MAAvB,aACE,KAAM,GAAQ,KAAA,YADyB,GAEvC,GAAI,MAAA,IAAJ,YAAkC,SAGlC,EAAA,iBAAA,EALuC,GAOzC,MAAI,MAAA,QAAe,SAAf,IAAkC,OAAtC,GACE,GAAA,iBAAA,QAA8B,SAAS,EAAT,SAAuB,EAAA,IAAvB,KAC9B,EAAA,eAFmD,GAInD,EAAA,eADK,EAGP,EAAA,aAtBY,cAwBZ,AAAI,EAAJ,SACE,GAAA,QAAc,SAAA,GACZ,EAAA,QAAa,EADc,UAI/B,EAAA,mBAAyB,KAAA,cAAA,KAAA,KA7Bb,GA8BZ,EAAA,WAAiB,KAAA,WAAA,KAAA,KA9BL,GAgCZ,EAAA,kBAAmC,EAhCvB,kBAiCZ,EAAA,OAAwB,EAjCZ,OAkCZ,EAAA,QAAyB,EAlCb,QAmCZ,EAAA,WAA4B,EAnChB,WAqCZ,EAAA,KArCY,MAAA,EA0Cd,WAAA,EAAA,GACE,KAAM,GAAiB,KAAA,gBADF,GAErB,GAAI,CAAJ,EAAqB,OAKrB,AAAI,EAAJ,YACE,EAAA,WAD6B,GAKjC,cAAA,EAAA,GACE,KAAM,GAAiB,KAAA,gBADC,GAExB,GAAI,CAAJ,EAAqB,OAKrB,KAAM,GAAM,EAPY,IAaxB,GALA,AAAI,EAAA,YAAA,GAAuB,EAA3B,mBACE,GAD2D,oBAE3D,MAAO,GAFoD,mBAKzD,EAAA,aAAJ,EAA0B,OAI1B,GAAI,CAAE,KAAS,MAAf,iBAAsC,OAStC,GAHA,MAAO,MAAA,gBAvBiB,GA0BpB,EAAA,SAAA,GAAoB,KAAxB,QACE,AAAI,EAAJ,SACE,EAAA,QAAuB,EADG,QADO,OAMrC,KAAM,GAAY,EAAA,QAhCM,EAqClB,EACJ,IAAA,GACA,EAAA,iBAvCsB,EAyCxB,GACE,CAAA,GACA,IAAc,EAFhB,gBAIE,AAAI,EAAJ,SACE,EAAA,QAAuB,EADG,QAD5B,OAOF,KAAM,GAAQ,EAnDU,GAoDxB,GAAI,IAAJ,GACE,KAAM,GAAc,EAAA,kBADsB,iBAEpC,EAAU,2BAAA,KAF0B,GAG1C,EAAA,OAAsB,CACpB,MAAO,SAAS,EAAT,GADa,IAAA,cAIjB,AAAA,GACL,EAAA,OAAsB,CACpB,MADoB,EAAA,UAIjB,AAAI,EAAJ,SACL,EAAA,QAAuB,EADU,QAKrC,qBACE,SAAA,KAAoB,MAApB,gBACE,MADwC,GAG1C,MAJmB,GAOrB,cAAA,GACE,MAAO,MAAA,gBAAA,GADY,IAIrB,iBAAA,GACE,MAAO,KAAS,MADM,gBAIxB,mBACE,SAAA,KAAoB,MAApB,gBACE,KAAA,aAAkB,EADsB,GAK5C,aAAA,GACE,KAAM,GAAM,KAAA,gBAAA,GADM,IAElB,MAAO,MAAA,gBAFW,GAGlB,EAHkB,SAQtB,QACE,YAAA,GACE,KAAA,QADkB,EAElB,KAAA,SAAgB,GAAA,GAAmB,EAAnB,IAA+B,CAC7C,YAAa,EADgC,YAE7C,gBAAiB,EAF4B,kBAI/C,KAAA,gBAAuB,EANL,eAOlB,KAAA,mBAPkB,KAQlB,KAAA,qBARkB,GAWpB,4BAAA,GACE,KAAM,GAAI,KAAA,qBAAA,QADwB,GAElC,AAAI,GAAJ,GACE,KAAA,qBAAA,OAAA,EADU,GAKd,gBACE,MAAA,GAAA,EAAA,QACE,CAAC,KADH,mBADc,2DAKd,KAAA,mBAA0B,GAAA,GACxB,KADwB,SAExB,KAPY,SASP,KATO,mBAYhB,eAAA,EAAA,GACE,KAAM,GAAS,GAAA,GACb,KADa,SAAA,EADU,GAMzB,SAAA,SAAkB,KAAA,4BAAA,KANO,MAOzB,KAAA,qBAAA,KAPyB,GAAA,EAW3B,kBAAA,GACE,AAAI,KAAJ,oBACE,KAAA,mBAAA,OAD2B,GAG7B,KAAM,GAAU,KAAA,qBAAA,MAJQ,GAKxB,EAAA,QAAgB,SAAA,GACd,EAAA,OADgC,2BAOtC,QACE,YAAA,EAAA,GACE,KAAA,SAD2B,EAG3B,KAAM,GAAO,CACX,kBAAmB,KAAA,mBAAA,KADR,MAEX,OAAQ,KAAA,QAAA,KAFG,MAGX,QAAS,KAAA,SAAA,KAHE,MAIX,WAAY,KAAA,YAAA,KAJD,OAMb,KAAA,KAAY,EATe,IAU3B,KAAA,eAAsB,EAAA,YAVK,GAW3B,KAAA,2BAX2B,GAAA,EAAA,2BAY3B,KAAA,cAAqB,EAAA,cAZM,GAa3B,KAAA,eAAsB,EAbK,OAc3B,KAAA,gBAAuB,EAdI,eAe3B,AAAI,CAAC,KAAD,iBAAyB,CAAC,KAA9B,eACE,MAAA,cADgD,IAIlD,KAAA,sBAnB2B,GAoB3B,KAAA,kBApB2B,GAsB3B,KAAA,cAtB2B,GAuB3B,KAAA,UAvB2B,GAwB3B,KAAA,MAxB2B,GAyB3B,KAAA,aAzB2B,OA0B3B,KAAA,UA1B2B,KA4B3B,KAAA,WA5B2B,KA+B7B,qBACE,KAAM,GAAmB,KADN,eAEb,EAAiB,KAAA,SAAA,cAFJ,GAIb,EAAoB,GACjB,EAAA,kBADyB,GAG5B,CAAA,qBAAA,mBAGF,GAAA,EAAA,kCAAiC,CAAA,oBAEnC,OAAQ,KAAA,SAF2B,OAGnC,eAAgB,KAHmB,gBAInC,aAAc,KAJqB,gBAOrC,AAAA,GACE,MAAA,kBADsB,IAIxB,KAAA,eAAsB,GAAmB,KArBtB,eAuBnB,KAAA,UAAiB,GAAA,EAAA,2BAvBE,GAyBnB,AAAI,KAAJ,mBAKE,KAAA,SAAA,aAL0B,GAQ5B,KAAA,2BAjCmB,UAoCrB,QAAA,GACE,GAAA,EACE,GAAI,KAAA,UAAA,OAAJ,GACE,KAAM,GAAoB,KAAA,UADG,QAE7B,EAAA,QAA0B,CAAE,MAAO,EAAT,MAAqB,KAArB,SAE1B,MAAA,cAAA,KAAwB,EADnB,OAKT,GADA,KAAA,MATY,GAUR,KAAA,cAAA,OAAJ,EAAmC,OAGnC,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UAhBY,GAmBd,SAAA,GACE,KAAM,GAAM,KADG,KAET,EAAY,GAAA,EAAA,2BAAA,EAFH,GAGf,KAAA,aAHe,EAIf,KAAA,2BAAA,OAJe,GAKf,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,OADkD,KAGpD,KAAA,UARe,GASf,KAAA,cATe,GAYjB,YAAA,GACE,AAAI,KAAJ,YACE,KAAA,WAAgB,CACd,OAAQ,EADM,OAEd,MAAO,EAAA,iBAAwB,EAAxB,MAAqC,KAF9B,oBAOpB,YACE,MAAO,MADM,aAIf,oBACE,MAAO,MADc,qBAIvB,wBACE,MAAO,MADkB,yBAI3B,iBACE,MAAO,MADW,kBAIpB,gBACE,MAAO,MAAA,2BADU,aAInB,QACE,GAAI,KAAJ,aACE,KAAM,MADe,aAGvB,GAAI,KAAA,cAAA,OAAJ,GACE,KAAM,GAAQ,KAAA,cADmB,QAEjC,MAAO,CAAE,MAAF,EAAgB,KAAhB,IAET,GAAI,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,KAAM,GAXK,GAAA,EAAA,2BAYX,YAAA,UAAA,KAZW,GAaJ,EAbI,QAgBb,OAAA,GACE,KAAA,MADa,GAEb,KAAA,2BAAA,OAFa,GAGb,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UANa,GAOb,AAAI,KAAA,SAAA,iBAA+B,KAAnC,iBACE,KAAA,SAAA,aAA2B,KAD4B,gBAGzD,KAAA,mBAVa,MAejB,QACE,YAAA,EAAA,EAAA,GACE,KAAA,SAD+B,EAE/B,KAAM,GAAO,CACX,OAAQ,KAAA,QAAA,KADG,MAEX,WAAY,KAAA,YAAA,KAFD,OAIb,KAAA,WAAkB,EAAA,aAAA,EAAA,EANa,GAO/B,KAAA,UAP+B,GAQ/B,KAAA,aAR+B,KAS/B,KAAA,MAT+B,GAW/B,KAAA,WAX+B,KAY/B,KAAA,SAZ+B,KAejC,SACE,AAAI,KAAJ,UACE,KAAA,SADiB,MAKrB,QAAA,GACE,KAAM,GAAQ,EADF,MAEZ,GAAI,KAAA,UAAA,OAAJ,GACE,KAAM,GAAoB,KAAA,UADG,QAE7B,EAAA,QAA0B,CAAE,MAAF,EAAgB,KAAhB,SAE1B,MAAA,aADK,EAGP,KAAA,MARY,GASZ,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UAZY,GAaZ,KAbY,SAgBd,YAAA,GACE,AAAI,CAAC,KAAD,sBAA8B,KAAlC,YACE,KAAA,WAAgB,CACd,OAAQ,EAFuC,YAOrD,wBACE,MADyB,QAI3B,QACE,GAAI,KAAA,eAAJ,MACE,KAAM,GAAQ,KADgB,aAE9B,YAAA,aAF8B,KAGvB,CAAE,MAAF,EAAgB,KAAhB,IAET,GAAI,KAAJ,MACE,MAAO,CAAE,MAAF,OAAoB,KAApB,IAET,KAAM,GATK,GAAA,EAAA,2BAUX,YAAA,UAAA,KAVW,GAWJ,EAXI,QAcb,OAAA,GACE,KAAA,MADa,GAEb,KAAA,UAAA,QAAuB,SAAA,GACrB,EAAA,QAA0B,CAAE,MAAF,OAAoB,KAApB,OAE5B,KAAA,UALa,GAMb,AAAI,KAAA,SAAA,iBAA+B,KAAnC,aACE,KAAA,SAAA,aAA2B,KADwB,YAGrD,KATa,kHC1ejB,GAAA,GAAA,EAAA,GAKA,EAAA,EAAA,IAaA,WAAA,EAAA,EAAA,GACE,MAAO,CACL,OADK,MAAA,UAGL,OAAQ,GAAmB,EAHtB,OAIL,KAJK,OAKL,YAAa,EAAA,UALR,cAML,SANK,UAUT,WAAA,GACE,KAAM,GAAU,GADkB,SAElC,SAAA,KAAA,IACE,KAAM,GAAQ,EADoB,GAElC,GAAI,MAAA,IAAJ,YAAkC,SAGlC,EAAA,OAAA,EALkC,GAOpC,MATkC,GAapC,QACE,YAAA,GACE,KAAA,OADkB,EAElB,KAAA,OAAc,YAAA,KAAiB,EAFb,KAGlB,KAAA,YAAoB,KAAA,QAAe,EAAhB,aAHD,GAKlB,KAAA,mBALkB,KAMlB,KAAA,qBANkB,MASpB,0BACE,MAAO,MAAA,mBAA0B,KAAA,mBAA1B,QADoB,EAI7B,gBACE,MAAA,GAAA,EAAA,QACE,CAAC,KADH,mBADc,yDAKd,KAAA,mBAA0B,GAAA,GALZ,MAMP,KANO,mBAShB,eAAA,EAAA,GACE,GAAI,GAAO,KAAX,uBACE,MADsC,MAGxC,KAAM,GAAS,GAAA,GAAA,KAAA,EAJU,GAKzB,YAAA,qBAAA,KALyB,GAAA,EAS3B,kBAAA,GACE,AAAI,KAAJ,oBACE,KAAA,mBAAA,OAD2B,GAG7B,KAAM,GAAU,KAAA,qBAAA,MAJQ,GAKxB,EAAA,QAAgB,SAAA,GACd,EAAA,OADgC,yBAOtC,QACE,YAAA,GACE,KAAA,QADkB,EAElB,KAAA,QAFkB,KAGlB,KAAA,QAHkB,EAIlB,KAAA,UAJkB,KAKlB,KAAM,GAAS,EALG,OAMlB,KAAA,iBAAwB,EAAA,iBANN,GAOlB,KAAA,eAAsB,EAPJ,OAQlB,KAAA,mBARkB,GAAA,EAAA,2BASlB,KAAA,cAAqB,EAAA,cATH,GAUlB,KAAA,gBAAuB,EAVL,eAWlB,AAAI,CAAC,KAAD,iBAAyB,CAAC,KAA9B,eACE,MAAA,cADgD,IAIlD,AAAI,MAAA,kBAAJ,aACE,MAAA,iBAAwB,GADkB,kBAG5C,KAAA,sBAA6B,CAAC,EAlBZ,cAmBlB,KAAA,kBAAyB,CAAC,EAnBR,aAqBlB,KAAA,SAAgB,EAAc,KAAA,QArBZ,aAuBlB,KAAM,GAAM,EAvBM,IAwBlB,MAAA,EAEE,EACE,KADF,SAEE,KAFF,iBAGE,KALJ,mBAAA,KAQQ,IACJ,GAAI,CAAC,GAAA,EAAA,wBAAuB,EAA5B,QACE,KAAM,GAAA,EAAA,2BAA0B,EAA1B,OADsC,GAG9C,KAAA,QAAe,EAAA,KAJC,YAKhB,KAAA,mBALgB,UAOhB,KAAM,GAAoB,GACjB,EAAA,QAAA,IADyB,GAG5B,CAAA,qBAAA,mBAGF,GAAA,EAAA,kCAAiC,CAAA,oBAEnC,OAAQ,KAAA,QAF2B,OAGnC,eAAgB,KAHmB,gBAInC,aAAc,KAJqB,gBAOrC,KAAA,kBApBgB,EAsBhB,KAAA,eAAsB,GAAmB,KAtBzB,eAwBhB,KAAA,UAAiB,GAAA,EAAA,2BAxBD,GA4BhB,AAAI,CAAC,KAAD,uBAA+B,KAAnC,mBACE,KAAA,OAAY,GAAA,GAAA,eAD6C,6BApC/D,MAwCS,KAAA,mBAhES,QAkElB,KAAA,WAlEkB,QAqEpB,gBACE,MAAO,MAAA,mBADU,WAInB,YACE,MAAO,MADM,aAIf,iBACE,MAAO,MADW,kBAIpB,oBACE,MAAO,MADc,qBAIvB,wBACE,MAAO,MADkB,2BAI3B,QACE,KAAM,MAAA,mBADK,QAEX,KAAM,CAAA,QAAA,QAAkB,KAAM,MAAA,QAFnB,OAGX,GAAA,EACE,MAAO,CAAA,QAAA,QAET,KAAA,SAAgB,EANL,WAOX,AAAI,KAAJ,YACE,KAAA,WAAgB,CACd,OAAQ,KADM,QAEd,MAAO,KAFO,iBAKlB,KAAM,GAAS,GAAA,YAAA,GAbJ,OAcX,MAAO,CAAE,MAAF,EAAiB,KAAjB,IAGT,OAAA,GACE,AAAI,KAAJ,SACE,KAAA,QAAA,OADgB,GAGlB,AAAI,KAAJ,kBACE,KAAA,iBADyB,SAO/B,QACE,YAAA,EAAA,EAAA,GACE,KAAA,QAD8B,EAE9B,KAAA,QAF8B,KAG9B,KAAA,QAH8B,EAI9B,KAAM,GAAS,EAJe,OAK9B,KAAA,iBAAwB,EAAA,iBALM,GAM9B,KAAA,gBAN8B,GAAA,EAAA,2BAO9B,KAAA,sBAA6B,CAAC,EAPA,cAS9B,AAAI,MAAA,kBAAJ,aACE,MAAA,iBAAwB,GADkB,kBAI5C,KAAA,SAAgB,EAAc,KAAA,QAbA,aAc9B,KAAA,SAAA,OAAA,QAA8B,SAAA,KAAkB,EAAlB,KAE9B,KAAM,GAAM,EAhBkB,IAiB9B,MAAA,EAEE,EACE,KADF,SAEE,KAFF,iBAGE,KALJ,mBAAA,KAOO,IACL,GAAI,CAAC,GAAA,EAAA,wBAAuB,EAA5B,QACE,KAAM,GAAA,EAAA,2BAA0B,EAA1B,OADsC,GAG9C,KAAA,gBAJiB,UAKjB,KAAA,QAAe,EAAA,KALE,cAQnB,KAAA,WAhC8B,QAmChC,wBACE,MAAO,MADkB,2BAI3B,QACE,KAAM,MAAA,gBADK,QAEX,KAAM,CAAA,QAAA,QAAkB,KAAM,MAAA,QAFnB,OAGX,GAAA,EACE,MAAO,CAAA,QAAA,QAET,KAAA,SAAgB,EANL,WAOX,AAAI,KAAJ,YACE,KAAA,WAAgB,CAAE,OAAQ,KADP,UAGrB,KAAM,GAAS,GAAA,YAAA,GAVJ,OAWX,MAAO,CAAE,MAAF,EAAiB,KAAjB,IAGT,OAAA,GACE,AAAI,KAAJ,SACE,KAAA,QAAA,OADgB,GAGlB,AAAI,KAAJ,kBACE,KAAA,iBADyB,iBCjRxB,GAAI,IAAU,KACV,GAAa,MAAO,eAAiB,YAAc,aAAe,MAClE,GAAS,KAAK,OAUrB,GAAS,KAAK,GAAK,IAuBvB,AAAK,KAAK,OAAO,MAAK,MAAQ,WAI5B,OAHI,GAAI,EACJ,EAAI,UAAU,OAEX,KACL,GAAK,UAAU,GAAK,UAAU,GAGhC,MAAO,MAAK,KAAK,KChDnB,+ZA0BO,cACL,GAAI,GAAM,GAAa,IAAW,GAElC,MAAI,AAAS,KAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,GAGX,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EASF,YAAe,GACpB,GAAI,GAAM,GAAa,IAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUF,YAAc,EAAK,GACxB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EASF,YAAkB,GACvB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAcF,YAAoB,EAAG,EAAG,EAAG,EAAG,EAAI,GACzC,GAAI,GAAM,GAAa,IAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAeF,YAAa,EAAK,EAAG,EAAG,EAAG,EAAG,EAAI,GACvC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUF,YAAgB,EAAK,GAC1B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAM,EAAE,GACR,EAAM,EAAE,GACR,EAAM,EAAK,EAAK,EAAK,EAEzB,MAAK,GAIL,GAAM,EAAM,EACZ,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,CAAC,EAAK,EACf,EAAI,GAAK,EAAK,EACd,EAAI,GAAM,GAAK,EAAM,EAAK,GAAO,EACjC,EAAI,GAAM,GAAK,EAAM,EAAK,GAAO,EAC1B,GAVE,KAmBJ,YAAqB,GAC1B,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAWzB,YAAkB,EAAK,EAAG,GAC/B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EACxB,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAC7B,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EACtB,EAWF,YAAgB,EAAK,EAAG,GAC7B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,EAAI,EAAK,EACvB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACxB,EAAI,GAAK,EAAK,CAAC,EAAI,EAAK,EACxB,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWF,YAAe,EAAK,EAAG,GAC5B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EAAK,EACd,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWF,YAAmB,EAAK,EAAG,GAChC,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EAC7B,EAAI,GAAK,EAAK,EAAK,EAAK,EAAK,EACtB,EAcF,YAAsB,EAAK,GAChC,GAAI,GAAI,KAAK,IAAI,GACb,EAAI,KAAK,IAAI,GACjB,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,CAAC,EACV,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAcF,YAAqB,EAAK,GAC/B,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EACT,EAAI,GAAK,EACF,EAcF,YAAyB,EAAK,GACnC,SAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EACT,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EASF,YAAa,GAClB,MAAO,SAAW,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,KAAO,EAAE,GAAK,IAS1F,YAAc,GACnB,MAAO,MAAK,MAAM,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,EAAE,GAAI,GAWjD,YAAa,EAAK,EAAG,GAC1B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWF,YAAkB,EAAK,EAAG,GAC/B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWF,YAAwB,EAAK,EAAG,GACrC,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAYF,YAA8B,EAAK,EAAG,EAAG,GAC9C,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAUF,YAAqB,EAAG,GAC7B,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAUlG,YAAgB,EAAG,GACxB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAOxf,GAAI,IAAM,GAMN,GAAM,GCrejB,oqBAYO,cACL,GAAI,GAAM,GAAa,IAAW,GAElC,MAAI,AAAS,KAAc,cACzB,GAAI,GAAK,EACT,EAAI,GAAK,GAGJ,EASF,YAAe,GACpB,GAAI,GAAM,GAAa,IAAW,GAClC,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAUF,YAAoB,EAAG,GAC5B,GAAI,GAAM,GAAa,IAAW,GAClC,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EAUF,YAAc,EAAK,GACxB,SAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,GACJ,EAWF,YAAa,EAAK,EAAG,GAC1B,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EAWF,YAAa,EAAK,EAAG,GAC1B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWF,YAAkB,EAAK,EAAG,GAC/B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWF,YAAkB,EAAK,EAAG,GAC/B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAWF,YAAgB,EAAK,EAAG,GAC7B,SAAI,GAAK,EAAE,GAAK,EAAE,GAClB,EAAI,GAAK,EAAE,GAAK,EAAE,GACX,EAUF,YAAc,EAAK,GACxB,SAAI,GAAK,KAAK,KAAK,EAAE,IACrB,EAAI,GAAK,KAAK,KAAK,EAAE,IACd,EAUF,YAAe,EAAK,GACzB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAWF,YAAa,EAAK,EAAG,GAC1B,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAWF,YAAa,EAAK,EAAG,GAC1B,SAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IAC1B,EAAI,GAAK,KAAK,IAAI,EAAE,GAAI,EAAE,IACnB,EAUF,YAAe,EAAK,GACzB,SAAI,GAAK,KAAK,MAAM,EAAE,IACtB,EAAI,GAAK,KAAK,MAAM,EAAE,IACf,EAWF,YAAe,EAAK,EAAG,GAC5B,SAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAYF,YAAqB,EAAK,EAAG,EAAG,GACrC,SAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EACvB,EAAI,GAAK,EAAE,GAAK,EAAE,GAAK,EAChB,EAUF,YAAkB,EAAG,GAC1B,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,MAAK,MAAM,EAAG,GAUhB,YAAyB,EAAG,GACjC,GAAI,GAAI,EAAE,GAAK,EAAE,GACb,EAAI,EAAE,GAAK,EAAE,GACjB,MAAO,GAAI,EAAI,EAAI,EASd,YAAgB,GACrB,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,MAAK,MAAM,EAAG,GAShB,YAAuB,GAC5B,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,MAAO,GAAI,EAAI,EAAI,EAUd,YAAgB,EAAK,GAC1B,SAAI,GAAK,CAAC,EAAE,GACZ,EAAI,GAAK,CAAC,EAAE,GACL,EAUF,YAAiB,EAAK,GAC3B,SAAI,GAAK,EAAM,EAAE,GACjB,EAAI,GAAK,EAAM,EAAE,GACV,EAUF,YAAmB,EAAK,GAC7B,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACN,EAAM,EAAI,EAAI,EAAI,EAEtB,MAAI,GAAM,GAER,GAAM,EAAI,KAAK,KAAK,IAGtB,EAAI,GAAK,EAAE,GAAK,EAChB,EAAI,GAAK,EAAE,GAAK,EACT,EAUF,YAAa,EAAG,GACrB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAYzB,YAAe,EAAK,EAAG,GAC5B,GAAI,GAAI,EAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAC/B,SAAI,GAAK,EAAI,GAAK,EAClB,EAAI,GAAK,EACF,EAYF,YAAc,EAAK,EAAG,EAAG,GAC9B,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACX,SAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GAC1B,EAAI,GAAK,EAAK,EAAK,GAAE,GAAK,GACnB,EAUF,YAAgB,EAAK,GAC1B,EAAQ,GAAS,EACjB,GAAI,GAAI,AAAS,KAAW,EAAM,KAAK,GACvC,SAAI,GAAK,KAAK,IAAI,GAAK,EACvB,EAAI,GAAK,KAAK,IAAI,GAAK,EAChB,EAWF,YAAuB,EAAK,EAAG,GACpC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAC3B,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EACpB,EAWF,YAAwB,EAAK,EAAG,GACrC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC1B,EAYF,YAAuB,EAAK,EAAG,GACpC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,GAC1B,EAaF,YAAuB,EAAK,EAAG,GACpC,GAAI,GAAI,EAAE,GACN,EAAI,EAAE,GACV,SAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IACjC,EAAI,GAAK,EAAE,GAAK,EAAI,EAAE,GAAK,EAAI,EAAE,IAC1B,EAWF,YAAgB,EAAK,EAAG,EAAG,GAEhC,GAAI,GAAK,EAAE,GAAK,EAAE,GACd,EAAK,EAAE,GAAK,EAAE,GACd,EAAO,KAAK,IAAI,GAChB,EAAO,KAAK,IAAI,GAEpB,SAAI,GAAK,EAAK,EAAO,EAAK,EAAO,EAAE,GACnC,EAAI,GAAK,EAAK,EAAO,EAAK,EAAO,EAAE,GAC5B,EASF,YAAe,EAAG,GACvB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GAEX,EAAM,KAAK,KAAK,EAAK,EAAK,EAAK,GAAM,KAAK,KAAK,EAAK,EAAK,EAAK,GAE9D,EAAS,GAAQ,GAAK,EAAK,EAAK,GAAM,EAEtC,MAAO,MAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAQ,IAAK,IAS3C,YAAc,GACnB,SAAI,GAAK,EACT,EAAI,GAAK,EACF,EASF,YAAa,GAClB,MAAO,QAAU,EAAE,GAAK,KAAO,EAAE,GAAK,IAUjC,YAAqB,EAAG,GAC7B,MAAO,GAAE,KAAO,EAAE,IAAM,EAAE,KAAO,EAAE,GAU9B,YAAgB,EAAG,GACxB,GAAI,GAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACP,EAAK,EAAE,GACX,MAAO,MAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,KAAQ,KAAK,IAAI,EAAK,IAAO,AAAS,GAAU,KAAK,IAAI,EAAK,KAAK,IAAI,GAAK,KAAK,IAAI,IAOpK,GAAI,IAAM,GAMN,GAAM,GAMN,GAAM,GAMN,GAAM,GAMN,GAAO,GAMP,GAAU,GAMV,GAAS,GAcT,GAAU,WACnB,GAAI,GAAM,KACV,MAAO,UAAU,EAAG,EAAQ,EAAQ,EAAO,EAAI,GAC7C,GAAI,GAAG,EAgBP,IAdA,AAAK,GACH,GAAS,GAGX,AAAK,GACH,GAAS,GAGX,AAAI,EACF,EAAI,KAAK,IAAI,EAAQ,EAAS,EAAQ,EAAE,QAExC,EAAI,EAAE,OAGH,EAAI,EAAQ,EAAI,EAAG,GAAK,EAC3B,EAAI,GAAK,EAAE,GACX,EAAI,GAAK,EAAE,EAAI,GACf,EAAG,EAAK,EAAK,GACb,EAAE,GAAK,EAAI,GACX,EAAE,EAAI,GAAK,EAAI,GAGjB,MAAO,OC5mBX,GAAK,IAAL,UAAK,GACD,eAAa,GAAb,aACA,iBAAe,GAAf,eACA,eAAa,GAAb,aACA,gBAAc,GAAd,cACA,kBAAgB,GAAhB,gBACA,YAAU,GAAV,UACA,uBAAqB,GAArB,qBACA,gBAAc,GAAd,cACA,cAAY,GAAZ,YACA,SAAO,IAAP,OACA,YAAU,IAAV,UACA,cAAY,IAAZ,YACA,WAAS,IAAT,SACA,WAAS,IAAT,SACA,YAAU,IAAV,UACA,aAAW,IAAX,WACA,aAAW,IAAX,WACA,cAAY,IAAZ,YACA,cAAY,IAAZ,YACA,WAAS,IAAT,SACA,gBAAc,IAAd,cACA,SAAO,IAAP,OACA,WAAS,IAAT,SACA,eAAa,IAAb,aACA,iBAAe,IAAf,eACA,oBAAkB,IAAlB,kBACA,sBAAoB,IAApB,oBACA,YAAU,IAAV,UACA,SAAO,IAAP,OACA,WAAS,IAAT,SACA,cAAY,IAAZ,YACA,YAAU,IAAV,UACA,mBAAiB,IAAjB,iBACA,mBAAiB,IAAjB,iBACA,cAAY,IAAZ,YACA,eAAa,IAAb,aACA,YAAU,IAAV,UACA,yBAAuB,IAAvB,uBACA,gBAAc,IAAd,cACA,aAAW,IAAX,WACA,uBAAqB,IAArB,qBACA,kBAAgB,IAAhB,gBACA,aAAW,IAAX,WACA,aAAW,IAAX,WACA,mBAAiB,IAAjB,iBACA,qBAAmB,IAAnB,mBACA,+BAA6B,IAA7B,6BACA,iBAAe,IAAf,eACA,0BAAwB,IAAxB,wBACA,wBAAsB,IAAtB,sBACA,sBAAoB,IAApB,oBACA,mBAAiB,IAAjB,iBACA,oBAAkB,IAAlB,kBACA,iBAAe,IAAf,eACA,kBAAgB,IAAhB,gBACA,kBAAgB,IAAhB,gBACA,gBAAc,IAAd,cACA,sBAAoB,IAApB,oBACA,oBAAkB,IAAlB,kBACA,uBAAqB,IAArB,qBACA,qBAAmB,IAAnB,mBACA,gBAAc,IAAd,cACA,qBAAmB,IAAnB,mBACA,mBAAiB,IAAjB,iBACA,mBAAiB,IAAjB,iBACA,iBAAe,IAAf,eACA,cAAY,IAAZ,YACA,mBAAiB,IAAjB,iBACA,uBAAqB,IAArB,qBACA,4BAA0B,IAA1B,0BACA,qBAAmB,IAAnB,mBACA,gBAAc,IAAd,cACA,cAAY,IAAZ,YACA,0BAAwB,IAAxB,wBACA,wBAAsB,IAAtB,sBACA,eAAa,IAAb,aACA,aAAW,IAAX,WACA,qBAAmB,IAAnB,mBACA,mBAAiB,IAAjB,iBACA,oBAAkB,IAAlB,kBACA,kBAAgB,IAAhB,gBACA,qBAAmB,IAAnB,mBACA,0BAAwB,IAAxB,wBACA,+BAA6B,IAA7B,6BACA,sBAAoB,IAApB,oBACA,4BAA0B,IAA1B,0BACA,iCAA+B,IAA/B,+BACA,4BAA0B,IAA1B,0BACA,gCAA8B,IAA9B,8BACA,6BAA2B,IAA3B,2BACA,kBAAgB,IAAhB,kBA3FC,aA8FL,GAAO,IAAQ,GC/Ff,uBACI,UAAiB,GACjB,YAAmB,GAEnB,IAAI,EAAa,GACb,GAAI,EAAM,KAAK,KAAK,IAChB,KAAK,KAAK,QAAQ,GAClB,KAAK,OAAO,QAAQ,GACpB,OAEJ,GAAI,GAAI,EACR,OAAS,GAAI,SAAW,GAAK,EAAG,KAAO,EACnC,AAAI,KAAK,KAAK,EAAI,GAAK,GAAK,IAAK,GAErC,KAAK,KAAK,OAAO,EAAI,EAAG,EAAG,GAC3B,KAAK,OAAO,OAAO,EAAI,EAAG,EAAG,ICdrC,SAAuB,SAKvB,kBAA8B,EAA2C,CACrE,aAAa,GACb,IACA,KACI,GAAM,YAAkB,YAClB,KAAM,AAAM,gBAAY,GAAQ,QAChC,EACN,EAAO,KAAM,GAAI,QAAQ,GACzB,CAAE,UAAS,aAAc,KAAM,GAAK,kBACpC,CAAE,SAAU,KAAM,GAAK,iBACvB,EAAQ,GAAa,EAAS,GAC9B,CAAC,EAAU,GAAc,GAAe,GACxC,EAAQ,GAAe,EAAU,GACjC,EAAQ,GAAW,GACvB,MAAO,CAAC,GAAG,GAAc,EAAO,IAGpC,KAAM,IAAU,IACV,GAAY,EAElB,YAAgB,EAAS,GACrB,MAAO,MAAK,IAAI,EAAE,GAAK,EAAE,IAAM,IACxB,KAAK,IAAI,EAAE,GAAK,EAAE,IAAM,GAGnC,YAAe,EAAS,GACpB,MAAO,GAAE,GAAK,EAAE,GAAK,EAAE,GAAK,EAAE,GAGlC,YAA0B,EAAU,GAChC,KACI,GAAK,GAAK,SAAS,GAAK,SAAU,EAAG,MAAO,EAAG,OAC/C,EAAK,GAAK,SAAS,GAAK,SAAU,EAAG,IAAK,EAAG,OAC7C,EAAK,GAAK,SAAS,GAAK,SAAU,EAAG,IAAK,EAAG,OAC7C,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GAC/B,EAAK,GAAM,EAAI,GAAM,GAAM,EAAI,GACnC,MAAK,CAAC,GAAU,GAAM,EAAK,EAAI,IAAW,EAAI,GAAM,EAAK,GACpD,CAAC,GAAU,GAAM,EAAK,EAAI,IAAW,EAAI,GAAM,EAAK,EAC9C,GAAK,YAAY,GAAK,SAAU,EAAG,MAAO,EAAI,GAEzD,OAGJ,YAAwB,GACpB,KAAM,GAAmB,GACnB,EAAqB,GAC3B,SAAW,KAAQ,IACf,KAAM,GAAK,EAAK,MAAM,GAAK,EAAK,IAAI,GAC9B,EAAK,EAAK,MAAM,GAAK,EAAK,IAAI,GACpC,AAAI,KAAK,IAAI,GAAM,GACf,EAAS,KAAK,EAAK,EAAI,EAAO,CAAE,MAAO,EAAK,IAAK,IAAK,EAAK,QACxD,AAAI,KAAK,IAAI,GAAM,IACtB,EAAW,KAAK,EAAK,EAAI,EAAO,CAAE,MAAO,EAAK,IAAK,IAAK,EAAK,QAGrE,MAAO,CAAC,EAAU,GAGtB,YAAwB,EAAkB,GACtC,KAAM,GAAS,GAAI,KAEnB,SAAW,KAAK,IACZ,KAAM,GAAK,GAAI,IACf,SAAW,KAAK,IACZ,KAAM,GAAI,GAAiB,EAAG,GAC9B,AAAI,GAAG,EAAG,IAAI,EAAE,GAAI,GAExB,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,EAAG,OAAO,OAAQ,IACzC,AAAI,EAAG,KAAK,GAAK,EAAG,KAAK,GAAK,IAC1B,GAAO,IAAI,EAAG,OAAO,GAAI,CAAE,GAAI,EAAG,OAAO,KACzC,EAAI,GAKhB,SAAW,KAAK,IACZ,KAAM,GAAK,GAAI,IACf,SAAW,KAAK,IACZ,KAAM,GAAI,GAAiB,EAAG,GAC9B,AAAI,GAAG,EAAG,IAAI,EAAE,GAAI,GAExB,OAAS,GAAI,EAAG,EAAI,EAAG,EAAI,EAAG,OAAO,OAAQ,IACzC,AAAI,EAAG,KAAK,GAAK,EAAG,KAAK,GAAK,IAC1B,GAAO,IAAI,EAAG,OAAO,GAAI,CAAE,MAAO,EAAG,OAAO,KAC5C,EAAI,GAMhB,KAAM,GAAW,GAAI,KACrB,OAAS,CAAC,EAAG,IAAU,IACnB,SAAW,CAAC,EAAG,IAAa,GACxB,GAAI,GAAO,EAAG,IACV,EAAI,EACJ,EAAQ,IAAK,KAAU,GACvB,MAGR,EAAS,IAAI,EAAG,GAGpB,MAAO,GAGJ,YAAqB,GACxB,WAAa,GACT,SAAW,CAAC,EAAG,IAAM,GACjB,GAAI,GAAO,EAAG,GAAI,MAAO,GAIjC,WACI,EACA,EACA,GAEA,SAAW,KAAK,GAAa,EAAG,GAC5B,GAAI,EAAU,EAAG,EAAI,IAAK,MAAO,GAIzC,WAAuB,EAAmB,GACtC,KAAO,IACH,KAAM,GACN,KAAM,GAAW,EAAI,GACrB,GAAI,CAAC,EAAU,MACf,EAAI,EAAK,IAIjB,SAAW,CAAC,EAAI,CAAE,KAAI,WAAY,GAC9B,GAAI,GAAM,GACN,KAAM,GAAK,EAAS,EAAO,GAAK,EAAE,MAAO,CAAC,EAAG,IAAM,CAAC,CAAE,IAAK,EAAE,KACvD,EAAK,EAAS,EAAI,GAAK,EAAE,GAAI,CAAC,EAAG,IAAM,CAAC,CAAE,IAAK,EAAE,QACvD,GAAI,GAAM,GACN,KAAM,GAAY,CAAC,GAAG,EAAa,EAAI,GAAK,EAAE,KACxC,EAAK,EAAS,EAAI,GAAK,EAAE,MAAO,GAAK,EAAU,KAAK,GAAK,GAAO,EAAG,KACzE,AAAI,GACA,MAAM,CAAE,KAAI,SAOhC,YAAwB,EAAuB,GAE3C,SAAW,KAAQ,IACf,KAAM,GAAoB,GAC1B,SAAW,KAAQ,IACf,KAAM,GAAK,EAAK,UAAU,GAAI,EAAK,EAAK,UAAU,GAClD,AAAI,EAAK,GAAG,IAAM,GAAM,GAAM,EAAK,GAAG,IAClC,EAAK,GAAG,IAAM,GAAM,GAAM,EAAK,GAAG,IAClC,EAAQ,KAAK,EAAK,KAG1B,KAAM,CACF,UACA,KAAM,EAAK,GAAG,GACd,OAAQ,EAAK,GAAG,GAChB,MAAO,EAAK,GAAG,GACf,IAAK,EAAK,GAAG,KAKzB,YAAuB,EAAgB,GACnC,GAAI,GAAgB,GAAM,SACtB,EACJ,KAAM,GAAoB,GACpB,EAAM,CAAC,EAAW,IACpB,GAAK,eAAe,GAAK,SAAU,GAAK,WAAW,EAAG,GAAI,GACxD,EAAO,CAAC,CAAC,EAAG,EAAG,EAAG,MACpB,KAAM,GAAK,EAAI,EAAI,EAAG,EAAI,GACpB,EAAK,EAAI,EAAI,EAAG,EAAI,GACpB,EAAK,EAAI,EAAI,EAAG,EAAI,GACpB,EAAK,EAAI,EAAI,EAAG,EAAI,GAC1B,MAAO,CACH,CAAE,MAAO,EAAI,IAAK,GAClB,CAAE,MAAO,EAAI,IAAK,GAClB,CAAE,MAAO,EAAI,IAAK,GAClB,CAAE,MAAO,EAAI,IAAK,KAI1B,OAAS,GAAI,EAAG,EAAI,EAAQ,OAAQ,KAChC,KAAM,GAAO,EAAU,GACvB,OAAQ,EAAQ,QACP,IAAI,KACL,EAAS,KAAK,GAAM,MAAM,IAC1B,UACC,IAAI,QACL,AAAI,EAAS,QACT,GAAgB,EAAS,OAC7B,UACC,IAAI,UACL,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAI,GAAM,EAC7B,GAAM,SAAS,EAAe,EAAe,GAAM,WAAW,EAAG,EAAG,EAAG,EAAG,EAAI,IAC9E,UACC,IAAI,OACL,EAAe,EAAI,EAAK,GAAI,EAAK,IACjC,UACC,IAAI,OACL,KAAM,GAAI,EAAI,EAAK,GAAI,EAAK,IAC5B,AAAI,GACA,MAAM,CAAE,MAAO,EAAc,IAAK,IAEtC,EAAe,EACf,UACC,IAAI,UACL,MAAO,EAAK,GACZ,UACC,IAAI,cACL,KAAM,GAAe,CAAC,GAAG,EAAK,IACxB,EAAoB,CAAC,GAAG,EAAK,IACnC,GAAI,GACJ,KAAO,EAAK,EAAM,SACd,GAAI,IAAO,GAAI,OACX,EAAe,EAAI,EAAQ,QAAU,EAAQ,iBACtC,IAAO,GAAI,QAClB,KAAM,GAAI,EAAI,EAAQ,QAAU,EAAQ,SACxC,AAAI,GACA,MAAM,CAAE,MAAO,EAAc,IAAK,IAEtC,EAAe,MACZ,AAAI,KAAO,GAAI,WAClB,OAAO,EAAK,EAAQ,OAAO,EAAG,KAGtC,QCzOD,YAA6B,GACxC,KAAM,GAA4C,GAClD,MAAO,IAAI,OAAM,EAAK,CAClB,IAAI,EAAQ,GACR,MAAO,CAAC,EAAQ,GAAI,EAAW,MAC3B,KAAM,GAAO,EAAc,GAC3B,SAAW,KAAQ,GACf,EAAK,aAAa,EAAM,EAAM,IAElC,SAAK,OAAO,GAAG,GACR,MCbvB,SAAuB,SAIjB,GAAM,GAAI,GAAO,SAAS,gBAAgB,6BAA8B,IACxE,GAAO,GAAI,GAAO,SAAS,cAAc,IAE/C,AAAM,uBAAoB,UAAY,kBAEtC,KAAM,IAAU,CACZ,uBAAuB,GACnB,MAAO,IAAI,SAAQ,CAAC,EAAS,KACzB,KAAM,GAAS,GAAI,YACnB,EAAO,OAAS,IAAM,EAAQ,EAAO,QACrC,EAAO,QAAU,EACjB,EAAO,kBAAkB,OAK/B,GAAY,SAAS,eAAe,aACpC,GAAa,SAAS,eAAe,cACrC,GAAa,SAAS,eAAe,cACrC,GAAO,SAAS,eAAe,QAC/B,GAAQ,SAAS,eAAe,SAEtC,GAAW,iBAAiB,QAAS,KAAM,KAEvC,GADA,EAAE,iBACE,CAAC,GAAU,OAAS,CAAC,GAAU,MAAM,OAAQ,OAEjD,QAAQ,OACR,KACI,GAAU,CAAC,GAAW,MACtB,EAAO,GAAU,MAAM,GACvB,EAAK,KAAM,IAAQ,uBAAuB,GAC1C,EAAM,KAAM,AAAM,gBAAY,GAAI,YAAW,IAAK,QAClD,EAAO,KAAM,GAAI,QAAQ,GACzB,EAAQ,KAAM,IAAU,EAAK,CAAE,WAAY,IAC3C,EAAO,EAAK,YAAY,CAAE,MAAO,IACjC,EAAU,GAAI,IAAI,CACd,QAAS,OAAO,EAAK,SAAS,EAAK,SACnC,MAAO,UAAU,EAAK,oBAAoB,EAAK,aAGvD,GAAM,UAAY,GAClB,GAAK,UAAY,GACjB,GAAK,YAAY,GAEjB,OAAS,GAAI,EAAG,EAAI,EAAM,OAAQ,KAC9B,KACI,GAAI,EAAM,GACV,EAAI,EAAE,KACN,EAAI,EAAK,OAAS,EAAE,IACpB,EAAQ,EAAE,MAAQ,EAAE,KACpB,EAAS,EAAE,IAAM,EAAE,OACnB,EAAO,GAAI,KAAK,CACZ,IAAG,IAAG,QAAO,SACb,OAAQ,QAAQ,EAAI,GAAK,uBACzB,eAAgB,EAChB,KAAM,gBAEV,EAAK,GAAK,GAAG,GAAI,CACb,EACA,EAAE,QAAQ,KAAK,KACf,EACA,EACA,EACA,GACF,IAAI,GAAO,GAAK,GAAG,GAAI,CAAC,EAAI,eAGlC,EAAG,iBAAiB,aAAc,GAAK,EAAK,aAAa,OAAQ,UAAW,IAC5E,EAAG,iBAAiB,aAAc,GAAK,EAAK,aAAa,OAAQ,eAAgB,IAEjF,EAAQ,YAAY,GACpB,GAAM,YAAY,GAEtB,QAAQ,WACT",
  "names": []
}
